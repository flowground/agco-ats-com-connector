{
    "openapi": "3.0.0",
    "servers": [
        {
            "url": "https://secure.agco-ats.com/"
        }
    ],
    "x-hasEquivalentPaths": true,
    "info": {
        "contact": {
            "x-twitter": "AGCOcorp"
        },
        "title": "AGCO API",
        "version": "v1",
        "x-apisguru-categories": [
            "ecommerce"
        ],
        "x-logo": {
            "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_AGCOcorp_profile_image.jpeg"
        },
        "x-origin": [
            {
                "format": "swagger",
                "url": "https://secure.agco-ats.com:443/swagger/docs/v1",
                "version": "2.0"
            }
        ],
        "x-preferred": true,
        "x-providerName": "agco-ats.com"
    },
    "paths": {
        "/api/v2/AftermarketServices/Certificates": {
            "get": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "AftermarketServices_GetCerts",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "No Documentation Found.",
                "tags": [
                    "AftermarketServices"
                ]
            }
        },
        "/api/v2/AftermarketServices/ECUs/{serialNumber}": {
            "put": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "AftermarketServices_PutECU",
                "parameters": [
                    {
                        "description": "The serial number of the ECU.",
                        "in": "path",
                        "name": "serialNumber",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The EDT Instance Id of the kit calling this method.",
                        "in": "query",
                        "name": "EDTInstanceId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "An AGCO Power ECU",
                                    "properties": {
                                        "ActivationCode": {
                                            "description": "The code used to activate the ECU. May not be modified. Returned only on activation.",
                                            "format": "byte",
                                            "type": "string"
                                        },
                                        "DamagedDescription": {
                                            "description": "A description why the ECU cannot be deactivated.",
                                            "pattern": "^[a-zA-Z0-9]{0,4096}$",
                                            "type": "string"
                                        },
                                        "EngineSerialNumber": {
                                            "description": "The serial number of the ECU’s engine",
                                            "pattern": "(^[A-Z][0-9]+$)|(^[ABCDEFGHJKLMNPRSTVWX1-9][5CMB][ED][0-5][0-9][0-7][0-9][0-9][0-9]$)",
                                            "type": "string"
                                        },
                                        "ReplacesECUSerialNumber": {
                                            "description": "The serial number of the ECU that this ECU replaces. Required if activating an ECU..",
                                            "pattern": "^0?\\d{23}$",
                                            "type": "string"
                                        },
                                        "SerialNumber": {
                                            "description": "The serial number of the ECU",
                                            "pattern": "^0?\\d{23}$",
                                            "type": "string"
                                        },
                                        "State": {
                                            "description": "The state of the ECU",
                                            "enum": [
                                                "Active",
                                                "Inactive",
                                                "Damaged"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "SerialNumber",
                                        "EngineSerialNumber",
                                        "State"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "description": "An AGCO Power ECU",
                                    "properties": {
                                        "ActivationCode": {
                                            "description": "The code used to activate the ECU. May not be modified. Returned only on activation.",
                                            "format": "byte",
                                            "type": "string"
                                        },
                                        "DamagedDescription": {
                                            "description": "A description why the ECU cannot be deactivated.",
                                            "pattern": "^[a-zA-Z0-9]{0,4096}$",
                                            "type": "string"
                                        },
                                        "EngineSerialNumber": {
                                            "description": "The serial number of the ECU’s engine",
                                            "pattern": "(^[A-Z][0-9]+$)|(^[ABCDEFGHJKLMNPRSTVWX1-9][5CMB][ED][0-5][0-9][0-7][0-9][0-9][0-9]$)",
                                            "type": "string"
                                        },
                                        "ReplacesECUSerialNumber": {
                                            "description": "The serial number of the ECU that this ECU replaces. Required if activating an ECU..",
                                            "pattern": "^0?\\d{23}$",
                                            "type": "string"
                                        },
                                        "SerialNumber": {
                                            "description": "The serial number of the ECU",
                                            "pattern": "^0?\\d{23}$",
                                            "type": "string"
                                        },
                                        "State": {
                                            "description": "The state of the ECU",
                                            "enum": [
                                                "Active",
                                                "Inactive",
                                                "Damaged"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "SerialNumber",
                                        "EngineSerialNumber",
                                        "State"
                                    ],
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "description": "An AGCO Power ECU",
                                    "properties": {
                                        "ActivationCode": {
                                            "description": "The code used to activate the ECU. May not be modified. Returned only on activation.",
                                            "format": "byte",
                                            "type": "string"
                                        },
                                        "DamagedDescription": {
                                            "description": "A description why the ECU cannot be deactivated.",
                                            "pattern": "^[a-zA-Z0-9]{0,4096}$",
                                            "type": "string"
                                        },
                                        "EngineSerialNumber": {
                                            "description": "The serial number of the ECU’s engine",
                                            "pattern": "(^[A-Z][0-9]+$)|(^[ABCDEFGHJKLMNPRSTVWX1-9][5CMB][ED][0-5][0-9][0-7][0-9][0-9][0-9]$)",
                                            "type": "string"
                                        },
                                        "ReplacesECUSerialNumber": {
                                            "description": "The serial number of the ECU that this ECU replaces. Required if activating an ECU..",
                                            "pattern": "^0?\\d{23}$",
                                            "type": "string"
                                        },
                                        "SerialNumber": {
                                            "description": "The serial number of the ECU",
                                            "pattern": "^0?\\d{23}$",
                                            "type": "string"
                                        },
                                        "State": {
                                            "description": "The state of the ECU",
                                            "enum": [
                                                "Active",
                                                "Inactive",
                                                "Damaged"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "SerialNumber",
                                        "EngineSerialNumber",
                                        "State"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "description": "An AGCO Power ECU",
                                    "properties": {
                                        "ActivationCode": {
                                            "description": "The code used to activate the ECU. May not be modified. Returned only on activation.",
                                            "format": "byte",
                                            "type": "string"
                                        },
                                        "DamagedDescription": {
                                            "description": "A description why the ECU cannot be deactivated.",
                                            "pattern": "^[a-zA-Z0-9]{0,4096}$",
                                            "type": "string"
                                        },
                                        "EngineSerialNumber": {
                                            "description": "The serial number of the ECU’s engine",
                                            "pattern": "(^[A-Z][0-9]+$)|(^[ABCDEFGHJKLMNPRSTVWX1-9][5CMB][ED][0-5][0-9][0-7][0-9][0-9][0-9]$)",
                                            "type": "string"
                                        },
                                        "ReplacesECUSerialNumber": {
                                            "description": "The serial number of the ECU that this ECU replaces. Required if activating an ECU..",
                                            "pattern": "^0?\\d{23}$",
                                            "type": "string"
                                        },
                                        "SerialNumber": {
                                            "description": "The serial number of the ECU",
                                            "pattern": "^0?\\d{23}$",
                                            "type": "string"
                                        },
                                        "State": {
                                            "description": "The state of the ECU",
                                            "enum": [
                                                "Active",
                                                "Inactive",
                                                "Damaged"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "SerialNumber",
                                        "EngineSerialNumber",
                                        "State"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Activate or Deactivate an ECU, or Report an ECU as Damaged.",
                "tags": [
                    "AftermarketServices"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "An AGCO Power ECU",
                                "properties": {
                                    "ActivationCode": {
                                        "description": "The code used to activate the ECU. May not be modified. Returned only on activation.",
                                        "format": "byte",
                                        "type": "string"
                                    },
                                    "DamagedDescription": {
                                        "description": "A description why the ECU cannot be deactivated.",
                                        "pattern": "^[a-zA-Z0-9]{0,4096}$",
                                        "type": "string"
                                    },
                                    "EngineSerialNumber": {
                                        "description": "The serial number of the ECU’s engine",
                                        "pattern": "(^[A-Z][0-9]+$)|(^[ABCDEFGHJKLMNPRSTVWX1-9][5CMB][ED][0-5][0-9][0-7][0-9][0-9][0-9]$)",
                                        "type": "string"
                                    },
                                    "ReplacesECUSerialNumber": {
                                        "description": "The serial number of the ECU that this ECU replaces. Required if activating an ECU..",
                                        "pattern": "^0?\\d{23}$",
                                        "type": "string"
                                    },
                                    "SerialNumber": {
                                        "description": "The serial number of the ECU",
                                        "pattern": "^0?\\d{23}$",
                                        "type": "string"
                                    },
                                    "State": {
                                        "description": "The state of the ECU",
                                        "enum": [
                                            "Active",
                                            "Inactive",
                                            "Damaged"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "SerialNumber",
                                    "EngineSerialNumber",
                                    "State"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "description": "An AGCO Power ECU",
                                "properties": {
                                    "ActivationCode": {
                                        "description": "The code used to activate the ECU. May not be modified. Returned only on activation.",
                                        "format": "byte",
                                        "type": "string"
                                    },
                                    "DamagedDescription": {
                                        "description": "A description why the ECU cannot be deactivated.",
                                        "pattern": "^[a-zA-Z0-9]{0,4096}$",
                                        "type": "string"
                                    },
                                    "EngineSerialNumber": {
                                        "description": "The serial number of the ECU’s engine",
                                        "pattern": "(^[A-Z][0-9]+$)|(^[ABCDEFGHJKLMNPRSTVWX1-9][5CMB][ED][0-5][0-9][0-7][0-9][0-9][0-9]$)",
                                        "type": "string"
                                    },
                                    "ReplacesECUSerialNumber": {
                                        "description": "The serial number of the ECU that this ECU replaces. Required if activating an ECU..",
                                        "pattern": "^0?\\d{23}$",
                                        "type": "string"
                                    },
                                    "SerialNumber": {
                                        "description": "The serial number of the ECU",
                                        "pattern": "^0?\\d{23}$",
                                        "type": "string"
                                    },
                                    "State": {
                                        "description": "The state of the ECU",
                                        "enum": [
                                            "Active",
                                            "Inactive",
                                            "Damaged"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "SerialNumber",
                                    "EngineSerialNumber",
                                    "State"
                                ],
                                "type": "object"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "description": "An AGCO Power ECU",
                                "properties": {
                                    "ActivationCode": {
                                        "description": "The code used to activate the ECU. May not be modified. Returned only on activation.",
                                        "format": "byte",
                                        "type": "string"
                                    },
                                    "DamagedDescription": {
                                        "description": "A description why the ECU cannot be deactivated.",
                                        "pattern": "^[a-zA-Z0-9]{0,4096}$",
                                        "type": "string"
                                    },
                                    "EngineSerialNumber": {
                                        "description": "The serial number of the ECU’s engine",
                                        "pattern": "(^[A-Z][0-9]+$)|(^[ABCDEFGHJKLMNPRSTVWX1-9][5CMB][ED][0-5][0-9][0-7][0-9][0-9][0-9]$)",
                                        "type": "string"
                                    },
                                    "ReplacesECUSerialNumber": {
                                        "description": "The serial number of the ECU that this ECU replaces. Required if activating an ECU..",
                                        "pattern": "^0?\\d{23}$",
                                        "type": "string"
                                    },
                                    "SerialNumber": {
                                        "description": "The serial number of the ECU",
                                        "pattern": "^0?\\d{23}$",
                                        "type": "string"
                                    },
                                    "State": {
                                        "description": "The state of the ECU",
                                        "enum": [
                                            "Active",
                                            "Inactive",
                                            "Damaged"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "SerialNumber",
                                    "EngineSerialNumber",
                                    "State"
                                ],
                                "type": "object"
                            }
                        },
                        "text/xml": {
                            "schema": {
                                "description": "An AGCO Power ECU",
                                "properties": {
                                    "ActivationCode": {
                                        "description": "The code used to activate the ECU. May not be modified. Returned only on activation.",
                                        "format": "byte",
                                        "type": "string"
                                    },
                                    "DamagedDescription": {
                                        "description": "A description why the ECU cannot be deactivated.",
                                        "pattern": "^[a-zA-Z0-9]{0,4096}$",
                                        "type": "string"
                                    },
                                    "EngineSerialNumber": {
                                        "description": "The serial number of the ECU’s engine",
                                        "pattern": "(^[A-Z][0-9]+$)|(^[ABCDEFGHJKLMNPRSTVWX1-9][5CMB][ED][0-5][0-9][0-7][0-9][0-9][0-9]$)",
                                        "type": "string"
                                    },
                                    "ReplacesECUSerialNumber": {
                                        "description": "The serial number of the ECU that this ECU replaces. Required if activating an ECU..",
                                        "pattern": "^0?\\d{23}$",
                                        "type": "string"
                                    },
                                    "SerialNumber": {
                                        "description": "The serial number of the ECU",
                                        "pattern": "^0?\\d{23}$",
                                        "type": "string"
                                    },
                                    "State": {
                                        "description": "The state of the ECU",
                                        "enum": [
                                            "Active",
                                            "Inactive",
                                            "Damaged"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "SerialNumber",
                                    "EngineSerialNumber",
                                    "State"
                                ],
                                "type": "object"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "description": "An AGCO Power ECU",
                                "properties": {
                                    "ActivationCode": {
                                        "description": "The code used to activate the ECU. May not be modified. Returned only on activation.",
                                        "format": "byte",
                                        "type": "string"
                                    },
                                    "DamagedDescription": {
                                        "description": "A description why the ECU cannot be deactivated.",
                                        "pattern": "^[a-zA-Z0-9]{0,4096}$",
                                        "type": "string"
                                    },
                                    "EngineSerialNumber": {
                                        "description": "The serial number of the ECU’s engine",
                                        "pattern": "(^[A-Z][0-9]+$)|(^[ABCDEFGHJKLMNPRSTVWX1-9][5CMB][ED][0-5][0-9][0-7][0-9][0-9][0-9]$)",
                                        "type": "string"
                                    },
                                    "ReplacesECUSerialNumber": {
                                        "description": "The serial number of the ECU that this ECU replaces. Required if activating an ECU..",
                                        "pattern": "^0?\\d{23}$",
                                        "type": "string"
                                    },
                                    "SerialNumber": {
                                        "description": "The serial number of the ECU",
                                        "pattern": "^0?\\d{23}$",
                                        "type": "string"
                                    },
                                    "State": {
                                        "description": "The state of the ECU",
                                        "enum": [
                                            "Active",
                                            "Inactive",
                                            "Damaged"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "SerialNumber",
                                    "EngineSerialNumber",
                                    "State"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The ecu to modify.",
                    "required": true
                }
            }
        },
        "/api/v2/AftermarketServices/Engines/{serialNumber}/IQACodes": {
            "get": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "AftermarketServices_GetEngineIQACodes",
                "parameters": [
                    {
                        "description": "The serial number of the engine.",
                        "in": "path",
                        "name": "serialNumber",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The EDT Instance Id of the kit calling this method.",
                        "in": "query",
                        "name": "EDTInstanceId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get injector codes given engine.",
                "tags": [
                    "AftermarketServices"
                ]
            },
            "put": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "AftermarketServices_PutIQACodes",
                "parameters": [
                    {
                        "description": "The serial number of the Engine",
                        "in": "path",
                        "name": "serialNumber",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The EDT Instance Id of the kit calling this method.",
                        "in": "query",
                        "name": "EDTInstanceId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "boolean"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Report the IQA codes used by an engine",
                "tags": [
                    "AftermarketServices"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        },
                        "text/xml": {
                            "schema": {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        }
                    },
                    "description": "A string array of IQA codes in physical order",
                    "required": true
                }
            }
        },
        "/api/v2/AftermarketServices/Engines/{serialNumber}/ProductionData": {
            "get": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "AftermarketServices_GetProductionData",
                "parameters": [
                    {
                        "description": "The serial number of the engine.",
                        "in": "path",
                        "name": "serialNumber",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The EDT Instance Id of the kit calling this method.",
                        "in": "query",
                        "name": "EDTInstanceId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "description": "Production data for an AGCO Power engine.",
                                        "properties": {
                                            "DataType": {
                                                "description": "Type of data. Valid types are (but not limited to)\r\n            'PowerCalibration'",
                                                "type": "string"
                                            },
                                            "DataValues": {
                                                "description": "Raw values of the calibration data",
                                                "format": "byte",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "DataType",
                                            "DataValues"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "items": {
                                        "description": "Production data for an AGCO Power engine.",
                                        "properties": {
                                            "DataType": {
                                                "description": "Type of data. Valid types are (but not limited to)\r\n            'PowerCalibration'",
                                                "type": "string"
                                            },
                                            "DataValues": {
                                                "description": "Raw values of the calibration data",
                                                "format": "byte",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "DataType",
                                            "DataValues"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "items": {
                                        "description": "Production data for an AGCO Power engine.",
                                        "properties": {
                                            "DataType": {
                                                "description": "Type of data. Valid types are (but not limited to)\r\n            'PowerCalibration'",
                                                "type": "string"
                                            },
                                            "DataValues": {
                                                "description": "Raw values of the calibration data",
                                                "format": "byte",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "DataType",
                                            "DataValues"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "items": {
                                        "description": "Production data for an AGCO Power engine.",
                                        "properties": {
                                            "DataType": {
                                                "description": "Type of data. Valid types are (but not limited to)\r\n            'PowerCalibration'",
                                                "type": "string"
                                            },
                                            "DataValues": {
                                                "description": "Raw values of the calibration data",
                                                "format": "byte",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "DataType",
                                            "DataValues"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get production calibration data for given engine.",
                "tags": [
                    "AftermarketServices"
                ]
            }
        },
        "/api/v2/AftermarketServices/Hello": {
            "get": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "AftermarketServices_GetConnectionStatus",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "boolean"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Check whether there is connectivity to AGCO Power Web Services",
                "tags": [
                    "AftermarketServices"
                ]
            }
        },
        "/api/v2/AftermarketServices/UserStatuses": {
            "get": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "AftermarketServices_GetUserStatus",
                "parameters": [
                    {
                        "in": "query",
                        "name": "voucherCode",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "dealerCode",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Status of a voucher in the AGCO Power system",
                                    "properties": {
                                        "DealerCode": {
                                            "description": "The dealer code of the voucher",
                                            "type": "string"
                                        },
                                        "State": {
                                            "description": "The state of the voucher",
                                            "enum": [
                                                "Active",
                                                "Inactive",
                                                "None"
                                            ],
                                            "type": "string"
                                        },
                                        "VoucherCode": {
                                            "description": "The voucher code",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "VoucherCode",
                                        "DealerCode"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "description": "Status of a voucher in the AGCO Power system",
                                    "properties": {
                                        "DealerCode": {
                                            "description": "The dealer code of the voucher",
                                            "type": "string"
                                        },
                                        "State": {
                                            "description": "The state of the voucher",
                                            "enum": [
                                                "Active",
                                                "Inactive",
                                                "None"
                                            ],
                                            "type": "string"
                                        },
                                        "VoucherCode": {
                                            "description": "The voucher code",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "VoucherCode",
                                        "DealerCode"
                                    ],
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "description": "Status of a voucher in the AGCO Power system",
                                    "properties": {
                                        "DealerCode": {
                                            "description": "The dealer code of the voucher",
                                            "type": "string"
                                        },
                                        "State": {
                                            "description": "The state of the voucher",
                                            "enum": [
                                                "Active",
                                                "Inactive",
                                                "None"
                                            ],
                                            "type": "string"
                                        },
                                        "VoucherCode": {
                                            "description": "The voucher code",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "VoucherCode",
                                        "DealerCode"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "description": "Status of a voucher in the AGCO Power system",
                                    "properties": {
                                        "DealerCode": {
                                            "description": "The dealer code of the voucher",
                                            "type": "string"
                                        },
                                        "State": {
                                            "description": "The state of the voucher",
                                            "enum": [
                                                "Active",
                                                "Inactive",
                                                "None"
                                            ],
                                            "type": "string"
                                        },
                                        "VoucherCode": {
                                            "description": "The voucher code",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "VoucherCode",
                                        "DealerCode"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieve the status of an EDT Kit Registration with AGCO Power Web Services",
                "tags": [
                    "AftermarketServices"
                ]
            },
            "put": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "AftermarketServices_UpdateUserStatus",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "boolean"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Update the status of an EDT Kit Registration with AGCO Power Web Services",
                "tags": [
                    "AftermarketServices"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Status of a voucher in the AGCO Power system",
                                "properties": {
                                    "DealerCode": {
                                        "description": "The dealer code of the voucher",
                                        "type": "string"
                                    },
                                    "State": {
                                        "description": "The state of the voucher",
                                        "enum": [
                                            "Active",
                                            "Inactive",
                                            "None"
                                        ],
                                        "type": "string"
                                    },
                                    "VoucherCode": {
                                        "description": "The voucher code",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "VoucherCode",
                                    "DealerCode"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "description": "Status of a voucher in the AGCO Power system",
                                "properties": {
                                    "DealerCode": {
                                        "description": "The dealer code of the voucher",
                                        "type": "string"
                                    },
                                    "State": {
                                        "description": "The state of the voucher",
                                        "enum": [
                                            "Active",
                                            "Inactive",
                                            "None"
                                        ],
                                        "type": "string"
                                    },
                                    "VoucherCode": {
                                        "description": "The voucher code",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "VoucherCode",
                                    "DealerCode"
                                ],
                                "type": "object"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "description": "Status of a voucher in the AGCO Power system",
                                "properties": {
                                    "DealerCode": {
                                        "description": "The dealer code of the voucher",
                                        "type": "string"
                                    },
                                    "State": {
                                        "description": "The state of the voucher",
                                        "enum": [
                                            "Active",
                                            "Inactive",
                                            "None"
                                        ],
                                        "type": "string"
                                    },
                                    "VoucherCode": {
                                        "description": "The voucher code",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "VoucherCode",
                                    "DealerCode"
                                ],
                                "type": "object"
                            }
                        },
                        "text/xml": {
                            "schema": {
                                "description": "Status of a voucher in the AGCO Power system",
                                "properties": {
                                    "DealerCode": {
                                        "description": "The dealer code of the voucher",
                                        "type": "string"
                                    },
                                    "State": {
                                        "description": "The state of the voucher",
                                        "enum": [
                                            "Active",
                                            "Inactive",
                                            "None"
                                        ],
                                        "type": "string"
                                    },
                                    "VoucherCode": {
                                        "description": "The voucher code",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "VoucherCode",
                                    "DealerCode"
                                ],
                                "type": "object"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "description": "Status of a voucher in the AGCO Power system",
                                "properties": {
                                    "DealerCode": {
                                        "description": "The dealer code of the voucher",
                                        "type": "string"
                                    },
                                    "State": {
                                        "description": "The state of the voucher",
                                        "enum": [
                                            "Active",
                                            "Inactive",
                                            "None"
                                        ],
                                        "type": "string"
                                    },
                                    "VoucherCode": {
                                        "description": "The voucher code",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "VoucherCode",
                                    "DealerCode"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/api/v2/AuthenticatedUsers/{UserID}/Tokens": {
            "put": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "Authentication_PutManageTokens",
                "parameters": [
                    {
                        "in": "path",
                        "name": "UserID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "summary": "Manage API tokens.",
                "tags": [
                    "Authentication"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "BearerAction": {
                                        "description": "The action to perform on the bearer token. Optional. Defaults to ‘None’.",
                                        "enum": [
                                            "None",
                                            "Reset",
                                            "Disable"
                                        ],
                                        "type": "string"
                                    },
                                    "MACAction": {
                                        "description": "The action to perform on the MAC token. Optional. Defaults to ‘None’.",
                                        "enum": [
                                            "None",
                                            "Reset",
                                            "Disable"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "BearerAction": {
                                        "description": "The action to perform on the bearer token. Optional. Defaults to ‘None’.",
                                        "enum": [
                                            "None",
                                            "Reset",
                                            "Disable"
                                        ],
                                        "type": "string"
                                    },
                                    "MACAction": {
                                        "description": "The action to perform on the MAC token. Optional. Defaults to ‘None’.",
                                        "enum": [
                                            "None",
                                            "Reset",
                                            "Disable"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "properties": {
                                    "BearerAction": {
                                        "description": "The action to perform on the bearer token. Optional. Defaults to ‘None’.",
                                        "enum": [
                                            "None",
                                            "Reset",
                                            "Disable"
                                        ],
                                        "type": "string"
                                    },
                                    "MACAction": {
                                        "description": "The action to perform on the MAC token. Optional. Defaults to ‘None’.",
                                        "enum": [
                                            "None",
                                            "Reset",
                                            "Disable"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "text/xml": {
                            "schema": {
                                "properties": {
                                    "BearerAction": {
                                        "description": "The action to perform on the bearer token. Optional. Defaults to ‘None’.",
                                        "enum": [
                                            "None",
                                            "Reset",
                                            "Disable"
                                        ],
                                        "type": "string"
                                    },
                                    "MACAction": {
                                        "description": "The action to perform on the MAC token. Optional. Defaults to ‘None’.",
                                        "enum": [
                                            "None",
                                            "Reset",
                                            "Disable"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "BearerAction": {
                                        "description": "The action to perform on the bearer token. Optional. Defaults to ‘None’.",
                                        "enum": [
                                            "None",
                                            "Reset",
                                            "Disable"
                                        ],
                                        "type": "string"
                                    },
                                    "MACAction": {
                                        "description": "The action to perform on the MAC token. Optional. Defaults to ‘None’.",
                                        "enum": [
                                            "None",
                                            "Reset",
                                            "Disable"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "description": "The options for token management.",
                    "required": true
                }
            }
        },
        "/api/v2/Authentication": {
            "post": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "Authentication_Default",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Email": {
                                            "description": "The user's email address",
                                            "type": "string"
                                        },
                                        "MACId": {
                                            "description": "The MAC identifier to use for API access",
                                            "type": "string"
                                        },
                                        "MACToken": {
                                            "description": "The MAC token to use for API access",
                                            "type": "string"
                                        },
                                        "Name": {
                                            "description": "The user's name",
                                            "type": "string"
                                        },
                                        "Token": {
                                            "description": "The token to use for API access",
                                            "type": "string"
                                        },
                                        "UserID": {
                                            "description": "The user ID",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Username": {
                                            "description": "The username used for authentication",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "Email": {
                                            "description": "The user's email address",
                                            "type": "string"
                                        },
                                        "MACId": {
                                            "description": "The MAC identifier to use for API access",
                                            "type": "string"
                                        },
                                        "MACToken": {
                                            "description": "The MAC token to use for API access",
                                            "type": "string"
                                        },
                                        "Name": {
                                            "description": "The user's name",
                                            "type": "string"
                                        },
                                        "Token": {
                                            "description": "The token to use for API access",
                                            "type": "string"
                                        },
                                        "UserID": {
                                            "description": "The user ID",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Username": {
                                            "description": "The username used for authentication",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "Email": {
                                            "description": "The user's email address",
                                            "type": "string"
                                        },
                                        "MACId": {
                                            "description": "The MAC identifier to use for API access",
                                            "type": "string"
                                        },
                                        "MACToken": {
                                            "description": "The MAC token to use for API access",
                                            "type": "string"
                                        },
                                        "Name": {
                                            "description": "The user's name",
                                            "type": "string"
                                        },
                                        "Token": {
                                            "description": "The token to use for API access",
                                            "type": "string"
                                        },
                                        "UserID": {
                                            "description": "The user ID",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Username": {
                                            "description": "The username used for authentication",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "Email": {
                                            "description": "The user's email address",
                                            "type": "string"
                                        },
                                        "MACId": {
                                            "description": "The MAC identifier to use for API access",
                                            "type": "string"
                                        },
                                        "MACToken": {
                                            "description": "The MAC token to use for API access",
                                            "type": "string"
                                        },
                                        "Name": {
                                            "description": "The user's name",
                                            "type": "string"
                                        },
                                        "Token": {
                                            "description": "The token to use for API access",
                                            "type": "string"
                                        },
                                        "UserID": {
                                            "description": "The user ID",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Username": {
                                            "description": "The username used for authentication",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Authenticate a user.",
                "tags": [
                    "Authentication"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "BearerAction": {
                                        "description": "The action to perform on the bearer token. Optional. Defaults to ‘None’.",
                                        "enum": [
                                            "None",
                                            "Reset",
                                            "Disable"
                                        ],
                                        "type": "string"
                                    },
                                    "MACAction": {
                                        "description": "The action to perform on the MAC token. Optional. Defaults to ‘None’.",
                                        "enum": [
                                            "None",
                                            "Reset",
                                            "Disable"
                                        ],
                                        "type": "string"
                                    },
                                    "password": {
                                        "description": "A secret word or phrase that must be used to gain admission",
                                        "type": "string"
                                    },
                                    "username": {
                                        "description": "A unique ID a user needs to login with",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "username",
                                    "password"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "BearerAction": {
                                        "description": "The action to perform on the bearer token. Optional. Defaults to ‘None’.",
                                        "enum": [
                                            "None",
                                            "Reset",
                                            "Disable"
                                        ],
                                        "type": "string"
                                    },
                                    "MACAction": {
                                        "description": "The action to perform on the MAC token. Optional. Defaults to ‘None’.",
                                        "enum": [
                                            "None",
                                            "Reset",
                                            "Disable"
                                        ],
                                        "type": "string"
                                    },
                                    "password": {
                                        "description": "A secret word or phrase that must be used to gain admission",
                                        "type": "string"
                                    },
                                    "username": {
                                        "description": "A unique ID a user needs to login with",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "username",
                                    "password"
                                ],
                                "type": "object"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "properties": {
                                    "BearerAction": {
                                        "description": "The action to perform on the bearer token. Optional. Defaults to ‘None’.",
                                        "enum": [
                                            "None",
                                            "Reset",
                                            "Disable"
                                        ],
                                        "type": "string"
                                    },
                                    "MACAction": {
                                        "description": "The action to perform on the MAC token. Optional. Defaults to ‘None’.",
                                        "enum": [
                                            "None",
                                            "Reset",
                                            "Disable"
                                        ],
                                        "type": "string"
                                    },
                                    "password": {
                                        "description": "A secret word or phrase that must be used to gain admission",
                                        "type": "string"
                                    },
                                    "username": {
                                        "description": "A unique ID a user needs to login with",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "username",
                                    "password"
                                ],
                                "type": "object"
                            }
                        },
                        "text/xml": {
                            "schema": {
                                "properties": {
                                    "BearerAction": {
                                        "description": "The action to perform on the bearer token. Optional. Defaults to ‘None’.",
                                        "enum": [
                                            "None",
                                            "Reset",
                                            "Disable"
                                        ],
                                        "type": "string"
                                    },
                                    "MACAction": {
                                        "description": "The action to perform on the MAC token. Optional. Defaults to ‘None’.",
                                        "enum": [
                                            "None",
                                            "Reset",
                                            "Disable"
                                        ],
                                        "type": "string"
                                    },
                                    "password": {
                                        "description": "A secret word or phrase that must be used to gain admission",
                                        "type": "string"
                                    },
                                    "username": {
                                        "description": "A unique ID a user needs to login with",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "username",
                                    "password"
                                ],
                                "type": "object"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "BearerAction": {
                                        "description": "The action to perform on the bearer token. Optional. Defaults to ‘None’.",
                                        "enum": [
                                            "None",
                                            "Reset",
                                            "Disable"
                                        ],
                                        "type": "string"
                                    },
                                    "MACAction": {
                                        "description": "The action to perform on the MAC token. Optional. Defaults to ‘None’.",
                                        "enum": [
                                            "None",
                                            "Reset",
                                            "Disable"
                                        ],
                                        "type": "string"
                                    },
                                    "password": {
                                        "description": "A secret word or phrase that must be used to gain admission",
                                        "type": "string"
                                    },
                                    "username": {
                                        "description": "A unique ID a user needs to login with",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "username",
                                    "password"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "Create a user account.",
                    "required": true
                }
            }
        },
        "/api/v2/Authentication/IsAlive": {
            "get": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "Authentication_IsAlive",
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "summary": "Acknowledges the connection to the API",
                "tags": [
                    "Authentication"
                ]
            }
        },
        "/api/v2/Authentication/RequestPasswordReset": {
            "post": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "Authentication_RequestPasswordReset",
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "summary": "Request a password reset.",
                "tags": [
                    "Authentication"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ParameterName": {
                                        "description": "The query string parameter name to use for supplying the password reset token",
                                        "type": "string"
                                    },
                                    "Url": {
                                        "description": "The URL to direct the user to reset the password.",
                                        "type": "string"
                                    },
                                    "Username": {
                                        "description": "The username to reset the password for",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Username",
                                    "Url",
                                    "ParameterName"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "ParameterName": {
                                        "description": "The query string parameter name to use for supplying the password reset token",
                                        "type": "string"
                                    },
                                    "Url": {
                                        "description": "The URL to direct the user to reset the password.",
                                        "type": "string"
                                    },
                                    "Username": {
                                        "description": "The username to reset the password for",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Username",
                                    "Url",
                                    "ParameterName"
                                ],
                                "type": "object"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "properties": {
                                    "ParameterName": {
                                        "description": "The query string parameter name to use for supplying the password reset token",
                                        "type": "string"
                                    },
                                    "Url": {
                                        "description": "The URL to direct the user to reset the password.",
                                        "type": "string"
                                    },
                                    "Username": {
                                        "description": "The username to reset the password for",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Username",
                                    "Url",
                                    "ParameterName"
                                ],
                                "type": "object"
                            }
                        },
                        "text/xml": {
                            "schema": {
                                "properties": {
                                    "ParameterName": {
                                        "description": "The query string parameter name to use for supplying the password reset token",
                                        "type": "string"
                                    },
                                    "Url": {
                                        "description": "The URL to direct the user to reset the password.",
                                        "type": "string"
                                    },
                                    "Username": {
                                        "description": "The username to reset the password for",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Username",
                                    "Url",
                                    "ParameterName"
                                ],
                                "type": "object"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "ParameterName": {
                                        "description": "The query string parameter name to use for supplying the password reset token",
                                        "type": "string"
                                    },
                                    "Url": {
                                        "description": "The URL to direct the user to reset the password.",
                                        "type": "string"
                                    },
                                    "Username": {
                                        "description": "The username to reset the password for",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Username",
                                    "Url",
                                    "ParameterName"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The password reset request.",
                    "required": true
                }
            }
        },
        "/api/v2/Authentication/ResetPasword": {
            "post": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "Authentication_ResetPasword",
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "summary": "Reset a password",
                "tags": [
                    "Authentication"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "NewPassword": {
                                        "description": "The new password",
                                        "type": "string"
                                    },
                                    "Token": {
                                        "description": "The password reset token",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Token",
                                    "NewPassword"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "NewPassword": {
                                        "description": "The new password",
                                        "type": "string"
                                    },
                                    "Token": {
                                        "description": "The password reset token",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Token",
                                    "NewPassword"
                                ],
                                "type": "object"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "properties": {
                                    "NewPassword": {
                                        "description": "The new password",
                                        "type": "string"
                                    },
                                    "Token": {
                                        "description": "The password reset token",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Token",
                                    "NewPassword"
                                ],
                                "type": "object"
                            }
                        },
                        "text/xml": {
                            "schema": {
                                "properties": {
                                    "NewPassword": {
                                        "description": "The new password",
                                        "type": "string"
                                    },
                                    "Token": {
                                        "description": "The password reset token",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Token",
                                    "NewPassword"
                                ],
                                "type": "object"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "NewPassword": {
                                        "description": "The new password",
                                        "type": "string"
                                    },
                                    "Token": {
                                        "description": "The password reset token",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Token",
                                    "NewPassword"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The password reset detail.",
                    "required": true
                }
            }
        },
        "/api/v2/AuthorizationCodeDefinitions": {
            "get": {
                "deprecated": false,
                "description": "Additional searches: validationFields[Name]=true and dataFields[Name]=true. These can be used to search for authorization code definitions that have the specified data or validation fields.",
                "parameters": [
                    {
                        "description": "Optional. The page limit.  If not specified, the default page limit is 10.",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "Optional. The page offset.  If not specified, the default page offset is 0.",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "Optional. If specified, filters definitions by name. Starting and ending wildcards (*) supported.",
                        "in": "query",
                        "name": "name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Optional. If specified, filters definitions to those created by the given User ID.",
                        "in": "query",
                        "name": "createdByUserID",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "Optional. If specified, filters definitions to those deleted by the given User ID.",
                        "in": "query",
                        "name": "deletedByUserID",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "Optional. Whether to include deleted definitions. 'False' by default.",
                        "in": "query",
                        "name": "includeDeleted",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "description": "Represents the model used to define how a type of authorization code is generated.",
                                                "properties": {
                                                    "CreatedByUserID": {
                                                        "description": "The ID of the user that created this definition. Read only.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "CreatedDate": {
                                                        "description": "A timestamp of when this definition was created. Read only.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "DataFields": {
                                                        "description": "The defined fields to include in authorization codes generated from this definition. May not be updated.",
                                                        "items": {
                                                            "properties": {
                                                                "DigitsPrecision": {
                                                                    "description": "The number of decimal digits to be used by this data field. Required only by the 'Float' data type. Must be in range 1 - 15.",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "MaxExponent": {
                                                                    "description": "The maximum exponent to be used by this data field. Required only by the 'Float' data type. May not be greater than 307.",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "MaxValue": {
                                                                    "description": "The maximum value that can be represented by this data field. Required only by the 'Decimal' data type.",
                                                                    "format": "double",
                                                                    "type": "number"
                                                                },
                                                                "MinExponent": {
                                                                    "description": "The minimum exponent to be used by this data field. Required only by the 'Float' data type. May not be less than -292.",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "MinValue": {
                                                                    "description": "The minimum value that can be represented by this data field. Required only by the 'Decimal' data type.",
                                                                    "format": "double",
                                                                    "type": "number"
                                                                },
                                                                "Name": {
                                                                    "description": "The name of the field.",
                                                                    "type": "string"
                                                                },
                                                                "ScaleFactor": {
                                                                    "description": "The resolution of values that can be represented by this data field. The base value is multiplied by this to compute the final value. Required only by the 'Decimal' data type.",
                                                                    "format": "double",
                                                                    "type": "number"
                                                                },
                                                                "Signed": {
                                                                    "description": "Indicates whether this value is signed. Required only by the 'Float' data type.",
                                                                    "type": "boolean"
                                                                },
                                                                "Type": {
                                                                    "description": "The type of this data field.",
                                                                    "enum": [
                                                                        "Boolean",
                                                                        "Decimal",
                                                                        "Float",
                                                                        "VariableLengthByteArray"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "Type",
                                                                "Name"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "DeletedByUserID": {
                                                        "description": "The ID of the user that deleted this definition. Read only.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "DeletedDate": {
                                                        "description": "A timestamp of when this definition was deleted. Read only.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "Description": {
                                                        "description": "A description of this definition. May not be updated.",
                                                        "type": "string"
                                                    },
                                                    "DurationAccuracy": {
                                                        "description": "The number of bits used for timestamp verification. Defaults to 5. May not be updated.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "DurationAmount": {
                                                        "description": "The amount of duration for the specified duration unit used to calculate the Authorization Code. Defaults to 1. May not be updated.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "DurationUnits": {
                                                        "description": "The units of duration used to calculate the Authorization Code. Defaults to 'Days'. May not be updated.",
                                                        "enum": [
                                                            "Weeks",
                                                            "Days",
                                                            "Hours",
                                                            "Minutes"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "HashLength": {
                                                        "description": "The bit length of the hash data which will be used for the authorization code. Defaults to 20. May not be updated.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "ID": {
                                                        "description": "The ID of the authorization code definition. Read only.",
                                                        "type": "string"
                                                    },
                                                    "IsDeleted": {
                                                        "description": "Indicates whether this definition is enabled. True if generating codes is disabled.",
                                                        "type": "boolean"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the authorization code definition. May not be updated.",
                                                        "type": "string"
                                                    },
                                                    "RandomLength": {
                                                        "description": "The bit length of random data which will be included in the authorization code.  This is necessary to allow creation of \"identical\" authorization codes containing the same timestamp. Defaults to 5. May not be updated.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "ValidationFields": {
                                                        "description": "The defined fields to verify when reading authorization codes generated from this definition. May not be updated.",
                                                        "items": {
                                                            "properties": {
                                                                "Name": {
                                                                    "description": "The name of the field.",
                                                                    "type": "string"
                                                                },
                                                                "Type": {
                                                                    "description": "The type for this validation field.",
                                                                    "enum": [
                                                                        "Boolean",
                                                                        "Float",
                                                                        "Int",
                                                                        "StringCaseInsensitive",
                                                                        "StringCaseSensitive"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "Type",
                                                                "Name"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "required": [
                                                    "Name"
                                                ],
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "description": "Represents the model used to define how a type of authorization code is generated.",
                                                "properties": {
                                                    "CreatedByUserID": {
                                                        "description": "The ID of the user that created this definition. Read only.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "CreatedDate": {
                                                        "description": "A timestamp of when this definition was created. Read only.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "DataFields": {
                                                        "description": "The defined fields to include in authorization codes generated from this definition. May not be updated.",
                                                        "items": {
                                                            "properties": {
                                                                "DigitsPrecision": {
                                                                    "description": "The number of decimal digits to be used by this data field. Required only by the 'Float' data type. Must be in range 1 - 15.",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "MaxExponent": {
                                                                    "description": "The maximum exponent to be used by this data field. Required only by the 'Float' data type. May not be greater than 307.",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "MaxValue": {
                                                                    "description": "The maximum value that can be represented by this data field. Required only by the 'Decimal' data type.",
                                                                    "format": "double",
                                                                    "type": "number"
                                                                },
                                                                "MinExponent": {
                                                                    "description": "The minimum exponent to be used by this data field. Required only by the 'Float' data type. May not be less than -292.",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "MinValue": {
                                                                    "description": "The minimum value that can be represented by this data field. Required only by the 'Decimal' data type.",
                                                                    "format": "double",
                                                                    "type": "number"
                                                                },
                                                                "Name": {
                                                                    "description": "The name of the field.",
                                                                    "type": "string"
                                                                },
                                                                "ScaleFactor": {
                                                                    "description": "The resolution of values that can be represented by this data field. The base value is multiplied by this to compute the final value. Required only by the 'Decimal' data type.",
                                                                    "format": "double",
                                                                    "type": "number"
                                                                },
                                                                "Signed": {
                                                                    "description": "Indicates whether this value is signed. Required only by the 'Float' data type.",
                                                                    "type": "boolean"
                                                                },
                                                                "Type": {
                                                                    "description": "The type of this data field.",
                                                                    "enum": [
                                                                        "Boolean",
                                                                        "Decimal",
                                                                        "Float",
                                                                        "VariableLengthByteArray"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "Type",
                                                                "Name"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "DeletedByUserID": {
                                                        "description": "The ID of the user that deleted this definition. Read only.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "DeletedDate": {
                                                        "description": "A timestamp of when this definition was deleted. Read only.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "Description": {
                                                        "description": "A description of this definition. May not be updated.",
                                                        "type": "string"
                                                    },
                                                    "DurationAccuracy": {
                                                        "description": "The number of bits used for timestamp verification. Defaults to 5. May not be updated.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "DurationAmount": {
                                                        "description": "The amount of duration for the specified duration unit used to calculate the Authorization Code. Defaults to 1. May not be updated.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "DurationUnits": {
                                                        "description": "The units of duration used to calculate the Authorization Code. Defaults to 'Days'. May not be updated.",
                                                        "enum": [
                                                            "Weeks",
                                                            "Days",
                                                            "Hours",
                                                            "Minutes"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "HashLength": {
                                                        "description": "The bit length of the hash data which will be used for the authorization code. Defaults to 20. May not be updated.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "ID": {
                                                        "description": "The ID of the authorization code definition. Read only.",
                                                        "type": "string"
                                                    },
                                                    "IsDeleted": {
                                                        "description": "Indicates whether this definition is enabled. True if generating codes is disabled.",
                                                        "type": "boolean"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the authorization code definition. May not be updated.",
                                                        "type": "string"
                                                    },
                                                    "RandomLength": {
                                                        "description": "The bit length of random data which will be included in the authorization code.  This is necessary to allow creation of \"identical\" authorization codes containing the same timestamp. Defaults to 5. May not be updated.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "ValidationFields": {
                                                        "description": "The defined fields to verify when reading authorization codes generated from this definition. May not be updated.",
                                                        "items": {
                                                            "properties": {
                                                                "Name": {
                                                                    "description": "The name of the field.",
                                                                    "type": "string"
                                                                },
                                                                "Type": {
                                                                    "description": "The type for this validation field.",
                                                                    "enum": [
                                                                        "Boolean",
                                                                        "Float",
                                                                        "Int",
                                                                        "StringCaseInsensitive",
                                                                        "StringCaseSensitive"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "Type",
                                                                "Name"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "required": [
                                                    "Name"
                                                ],
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "description": "Represents the model used to define how a type of authorization code is generated.",
                                                "properties": {
                                                    "CreatedByUserID": {
                                                        "description": "The ID of the user that created this definition. Read only.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "CreatedDate": {
                                                        "description": "A timestamp of when this definition was created. Read only.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "DataFields": {
                                                        "description": "The defined fields to include in authorization codes generated from this definition. May not be updated.",
                                                        "items": {
                                                            "properties": {
                                                                "DigitsPrecision": {
                                                                    "description": "The number of decimal digits to be used by this data field. Required only by the 'Float' data type. Must be in range 1 - 15.",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "MaxExponent": {
                                                                    "description": "The maximum exponent to be used by this data field. Required only by the 'Float' data type. May not be greater than 307.",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "MaxValue": {
                                                                    "description": "The maximum value that can be represented by this data field. Required only by the 'Decimal' data type.",
                                                                    "format": "double",
                                                                    "type": "number"
                                                                },
                                                                "MinExponent": {
                                                                    "description": "The minimum exponent to be used by this data field. Required only by the 'Float' data type. May not be less than -292.",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "MinValue": {
                                                                    "description": "The minimum value that can be represented by this data field. Required only by the 'Decimal' data type.",
                                                                    "format": "double",
                                                                    "type": "number"
                                                                },
                                                                "Name": {
                                                                    "description": "The name of the field.",
                                                                    "type": "string"
                                                                },
                                                                "ScaleFactor": {
                                                                    "description": "The resolution of values that can be represented by this data field. The base value is multiplied by this to compute the final value. Required only by the 'Decimal' data type.",
                                                                    "format": "double",
                                                                    "type": "number"
                                                                },
                                                                "Signed": {
                                                                    "description": "Indicates whether this value is signed. Required only by the 'Float' data type.",
                                                                    "type": "boolean"
                                                                },
                                                                "Type": {
                                                                    "description": "The type of this data field.",
                                                                    "enum": [
                                                                        "Boolean",
                                                                        "Decimal",
                                                                        "Float",
                                                                        "VariableLengthByteArray"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "Type",
                                                                "Name"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "DeletedByUserID": {
                                                        "description": "The ID of the user that deleted this definition. Read only.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "DeletedDate": {
                                                        "description": "A timestamp of when this definition was deleted. Read only.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "Description": {
                                                        "description": "A description of this definition. May not be updated.",
                                                        "type": "string"
                                                    },
                                                    "DurationAccuracy": {
                                                        "description": "The number of bits used for timestamp verification. Defaults to 5. May not be updated.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "DurationAmount": {
                                                        "description": "The amount of duration for the specified duration unit used to calculate the Authorization Code. Defaults to 1. May not be updated.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "DurationUnits": {
                                                        "description": "The units of duration used to calculate the Authorization Code. Defaults to 'Days'. May not be updated.",
                                                        "enum": [
                                                            "Weeks",
                                                            "Days",
                                                            "Hours",
                                                            "Minutes"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "HashLength": {
                                                        "description": "The bit length of the hash data which will be used for the authorization code. Defaults to 20. May not be updated.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "ID": {
                                                        "description": "The ID of the authorization code definition. Read only.",
                                                        "type": "string"
                                                    },
                                                    "IsDeleted": {
                                                        "description": "Indicates whether this definition is enabled. True if generating codes is disabled.",
                                                        "type": "boolean"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the authorization code definition. May not be updated.",
                                                        "type": "string"
                                                    },
                                                    "RandomLength": {
                                                        "description": "The bit length of random data which will be included in the authorization code.  This is necessary to allow creation of \"identical\" authorization codes containing the same timestamp. Defaults to 5. May not be updated.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "ValidationFields": {
                                                        "description": "The defined fields to verify when reading authorization codes generated from this definition. May not be updated.",
                                                        "items": {
                                                            "properties": {
                                                                "Name": {
                                                                    "description": "The name of the field.",
                                                                    "type": "string"
                                                                },
                                                                "Type": {
                                                                    "description": "The type for this validation field.",
                                                                    "enum": [
                                                                        "Boolean",
                                                                        "Float",
                                                                        "Int",
                                                                        "StringCaseInsensitive",
                                                                        "StringCaseSensitive"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "Type",
                                                                "Name"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "required": [
                                                    "Name"
                                                ],
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "description": "Represents the model used to define how a type of authorization code is generated.",
                                                "properties": {
                                                    "CreatedByUserID": {
                                                        "description": "The ID of the user that created this definition. Read only.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "CreatedDate": {
                                                        "description": "A timestamp of when this definition was created. Read only.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "DataFields": {
                                                        "description": "The defined fields to include in authorization codes generated from this definition. May not be updated.",
                                                        "items": {
                                                            "properties": {
                                                                "DigitsPrecision": {
                                                                    "description": "The number of decimal digits to be used by this data field. Required only by the 'Float' data type. Must be in range 1 - 15.",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "MaxExponent": {
                                                                    "description": "The maximum exponent to be used by this data field. Required only by the 'Float' data type. May not be greater than 307.",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "MaxValue": {
                                                                    "description": "The maximum value that can be represented by this data field. Required only by the 'Decimal' data type.",
                                                                    "format": "double",
                                                                    "type": "number"
                                                                },
                                                                "MinExponent": {
                                                                    "description": "The minimum exponent to be used by this data field. Required only by the 'Float' data type. May not be less than -292.",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "MinValue": {
                                                                    "description": "The minimum value that can be represented by this data field. Required only by the 'Decimal' data type.",
                                                                    "format": "double",
                                                                    "type": "number"
                                                                },
                                                                "Name": {
                                                                    "description": "The name of the field.",
                                                                    "type": "string"
                                                                },
                                                                "ScaleFactor": {
                                                                    "description": "The resolution of values that can be represented by this data field. The base value is multiplied by this to compute the final value. Required only by the 'Decimal' data type.",
                                                                    "format": "double",
                                                                    "type": "number"
                                                                },
                                                                "Signed": {
                                                                    "description": "Indicates whether this value is signed. Required only by the 'Float' data type.",
                                                                    "type": "boolean"
                                                                },
                                                                "Type": {
                                                                    "description": "The type of this data field.",
                                                                    "enum": [
                                                                        "Boolean",
                                                                        "Decimal",
                                                                        "Float",
                                                                        "VariableLengthByteArray"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "Type",
                                                                "Name"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "DeletedByUserID": {
                                                        "description": "The ID of the user that deleted this definition. Read only.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "DeletedDate": {
                                                        "description": "A timestamp of when this definition was deleted. Read only.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "Description": {
                                                        "description": "A description of this definition. May not be updated.",
                                                        "type": "string"
                                                    },
                                                    "DurationAccuracy": {
                                                        "description": "The number of bits used for timestamp verification. Defaults to 5. May not be updated.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "DurationAmount": {
                                                        "description": "The amount of duration for the specified duration unit used to calculate the Authorization Code. Defaults to 1. May not be updated.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "DurationUnits": {
                                                        "description": "The units of duration used to calculate the Authorization Code. Defaults to 'Days'. May not be updated.",
                                                        "enum": [
                                                            "Weeks",
                                                            "Days",
                                                            "Hours",
                                                            "Minutes"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "HashLength": {
                                                        "description": "The bit length of the hash data which will be used for the authorization code. Defaults to 20. May not be updated.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "ID": {
                                                        "description": "The ID of the authorization code definition. Read only.",
                                                        "type": "string"
                                                    },
                                                    "IsDeleted": {
                                                        "description": "Indicates whether this definition is enabled. True if generating codes is disabled.",
                                                        "type": "boolean"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the authorization code definition. May not be updated.",
                                                        "type": "string"
                                                    },
                                                    "RandomLength": {
                                                        "description": "The bit length of random data which will be included in the authorization code.  This is necessary to allow creation of \"identical\" authorization codes containing the same timestamp. Defaults to 5. May not be updated.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "ValidationFields": {
                                                        "description": "The defined fields to verify when reading authorization codes generated from this definition. May not be updated.",
                                                        "items": {
                                                            "properties": {
                                                                "Name": {
                                                                    "description": "The name of the field.",
                                                                    "type": "string"
                                                                },
                                                                "Type": {
                                                                    "description": "The type for this validation field.",
                                                                    "enum": [
                                                                        "Boolean",
                                                                        "Float",
                                                                        "Int",
                                                                        "StringCaseInsensitive",
                                                                        "StringCaseSensitive"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "Type",
                                                                "Name"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "required": [
                                                    "Name"
                                                ],
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get authorization code definitions.",
                "tags": [
                    "AuthorizationCodeDefinitions"
                ]
            },
            "post": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "AuthorizationCodeDefinitions_PostAuthorizationCodeDefinition",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Add an authorization code definition.",
                "tags": [
                    "AuthorizationCodeDefinitions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Represents the model used to define how a type of authorization code is generated.",
                                "properties": {
                                    "CreatedByUserID": {
                                        "description": "The ID of the user that created this definition. Read only.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "CreatedDate": {
                                        "description": "A timestamp of when this definition was created. Read only.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "DataFields": {
                                        "description": "The defined fields to include in authorization codes generated from this definition. May not be updated.",
                                        "items": {
                                            "properties": {
                                                "DigitsPrecision": {
                                                    "description": "The number of decimal digits to be used by this data field. Required only by the 'Float' data type. Must be in range 1 - 15.",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "MaxExponent": {
                                                    "description": "The maximum exponent to be used by this data field. Required only by the 'Float' data type. May not be greater than 307.",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "MaxValue": {
                                                    "description": "The maximum value that can be represented by this data field. Required only by the 'Decimal' data type.",
                                                    "format": "double",
                                                    "type": "number"
                                                },
                                                "MinExponent": {
                                                    "description": "The minimum exponent to be used by this data field. Required only by the 'Float' data type. May not be less than -292.",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "MinValue": {
                                                    "description": "The minimum value that can be represented by this data field. Required only by the 'Decimal' data type.",
                                                    "format": "double",
                                                    "type": "number"
                                                },
                                                "Name": {
                                                    "description": "The name of the field.",
                                                    "type": "string"
                                                },
                                                "ScaleFactor": {
                                                    "description": "The resolution of values that can be represented by this data field. The base value is multiplied by this to compute the final value. Required only by the 'Decimal' data type.",
                                                    "format": "double",
                                                    "type": "number"
                                                },
                                                "Signed": {
                                                    "description": "Indicates whether this value is signed. Required only by the 'Float' data type.",
                                                    "type": "boolean"
                                                },
                                                "Type": {
                                                    "description": "The type of this data field.",
                                                    "enum": [
                                                        "Boolean",
                                                        "Decimal",
                                                        "Float",
                                                        "VariableLengthByteArray"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Type",
                                                "Name"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "DeletedByUserID": {
                                        "description": "The ID of the user that deleted this definition. Read only.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "DeletedDate": {
                                        "description": "A timestamp of when this definition was deleted. Read only.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Description": {
                                        "description": "A description of this definition. May not be updated.",
                                        "type": "string"
                                    },
                                    "DurationAccuracy": {
                                        "description": "The number of bits used for timestamp verification. Defaults to 5. May not be updated.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "DurationAmount": {
                                        "description": "The amount of duration for the specified duration unit used to calculate the Authorization Code. Defaults to 1. May not be updated.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "DurationUnits": {
                                        "description": "The units of duration used to calculate the Authorization Code. Defaults to 'Days'. May not be updated.",
                                        "enum": [
                                            "Weeks",
                                            "Days",
                                            "Hours",
                                            "Minutes"
                                        ],
                                        "type": "string"
                                    },
                                    "HashLength": {
                                        "description": "The bit length of the hash data which will be used for the authorization code. Defaults to 20. May not be updated.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "ID": {
                                        "description": "The ID of the authorization code definition. Read only.",
                                        "type": "string"
                                    },
                                    "IsDeleted": {
                                        "description": "Indicates whether this definition is enabled. True if generating codes is disabled.",
                                        "type": "boolean"
                                    },
                                    "Name": {
                                        "description": "The name of the authorization code definition. May not be updated.",
                                        "type": "string"
                                    },
                                    "RandomLength": {
                                        "description": "The bit length of random data which will be included in the authorization code.  This is necessary to allow creation of \"identical\" authorization codes containing the same timestamp. Defaults to 5. May not be updated.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "ValidationFields": {
                                        "description": "The defined fields to verify when reading authorization codes generated from this definition. May not be updated.",
                                        "items": {
                                            "properties": {
                                                "Name": {
                                                    "description": "The name of the field.",
                                                    "type": "string"
                                                },
                                                "Type": {
                                                    "description": "The type for this validation field.",
                                                    "enum": [
                                                        "Boolean",
                                                        "Float",
                                                        "Int",
                                                        "StringCaseInsensitive",
                                                        "StringCaseSensitive"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Type",
                                                "Name"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "Name"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "description": "Represents the model used to define how a type of authorization code is generated.",
                                "properties": {
                                    "CreatedByUserID": {
                                        "description": "The ID of the user that created this definition. Read only.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "CreatedDate": {
                                        "description": "A timestamp of when this definition was created. Read only.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "DataFields": {
                                        "description": "The defined fields to include in authorization codes generated from this definition. May not be updated.",
                                        "items": {
                                            "properties": {
                                                "DigitsPrecision": {
                                                    "description": "The number of decimal digits to be used by this data field. Required only by the 'Float' data type. Must be in range 1 - 15.",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "MaxExponent": {
                                                    "description": "The maximum exponent to be used by this data field. Required only by the 'Float' data type. May not be greater than 307.",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "MaxValue": {
                                                    "description": "The maximum value that can be represented by this data field. Required only by the 'Decimal' data type.",
                                                    "format": "double",
                                                    "type": "number"
                                                },
                                                "MinExponent": {
                                                    "description": "The minimum exponent to be used by this data field. Required only by the 'Float' data type. May not be less than -292.",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "MinValue": {
                                                    "description": "The minimum value that can be represented by this data field. Required only by the 'Decimal' data type.",
                                                    "format": "double",
                                                    "type": "number"
                                                },
                                                "Name": {
                                                    "description": "The name of the field.",
                                                    "type": "string"
                                                },
                                                "ScaleFactor": {
                                                    "description": "The resolution of values that can be represented by this data field. The base value is multiplied by this to compute the final value. Required only by the 'Decimal' data type.",
                                                    "format": "double",
                                                    "type": "number"
                                                },
                                                "Signed": {
                                                    "description": "Indicates whether this value is signed. Required only by the 'Float' data type.",
                                                    "type": "boolean"
                                                },
                                                "Type": {
                                                    "description": "The type of this data field.",
                                                    "enum": [
                                                        "Boolean",
                                                        "Decimal",
                                                        "Float",
                                                        "VariableLengthByteArray"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Type",
                                                "Name"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "DeletedByUserID": {
                                        "description": "The ID of the user that deleted this definition. Read only.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "DeletedDate": {
                                        "description": "A timestamp of when this definition was deleted. Read only.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Description": {
                                        "description": "A description of this definition. May not be updated.",
                                        "type": "string"
                                    },
                                    "DurationAccuracy": {
                                        "description": "The number of bits used for timestamp verification. Defaults to 5. May not be updated.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "DurationAmount": {
                                        "description": "The amount of duration for the specified duration unit used to calculate the Authorization Code. Defaults to 1. May not be updated.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "DurationUnits": {
                                        "description": "The units of duration used to calculate the Authorization Code. Defaults to 'Days'. May not be updated.",
                                        "enum": [
                                            "Weeks",
                                            "Days",
                                            "Hours",
                                            "Minutes"
                                        ],
                                        "type": "string"
                                    },
                                    "HashLength": {
                                        "description": "The bit length of the hash data which will be used for the authorization code. Defaults to 20. May not be updated.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "ID": {
                                        "description": "The ID of the authorization code definition. Read only.",
                                        "type": "string"
                                    },
                                    "IsDeleted": {
                                        "description": "Indicates whether this definition is enabled. True if generating codes is disabled.",
                                        "type": "boolean"
                                    },
                                    "Name": {
                                        "description": "The name of the authorization code definition. May not be updated.",
                                        "type": "string"
                                    },
                                    "RandomLength": {
                                        "description": "The bit length of random data which will be included in the authorization code.  This is necessary to allow creation of \"identical\" authorization codes containing the same timestamp. Defaults to 5. May not be updated.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "ValidationFields": {
                                        "description": "The defined fields to verify when reading authorization codes generated from this definition. May not be updated.",
                                        "items": {
                                            "properties": {
                                                "Name": {
                                                    "description": "The name of the field.",
                                                    "type": "string"
                                                },
                                                "Type": {
                                                    "description": "The type for this validation field.",
                                                    "enum": [
                                                        "Boolean",
                                                        "Float",
                                                        "Int",
                                                        "StringCaseInsensitive",
                                                        "StringCaseSensitive"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Type",
                                                "Name"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "Name"
                                ],
                                "type": "object"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "description": "Represents the model used to define how a type of authorization code is generated.",
                                "properties": {
                                    "CreatedByUserID": {
                                        "description": "The ID of the user that created this definition. Read only.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "CreatedDate": {
                                        "description": "A timestamp of when this definition was created. Read only.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "DataFields": {
                                        "description": "The defined fields to include in authorization codes generated from this definition. May not be updated.",
                                        "items": {
                                            "properties": {
                                                "DigitsPrecision": {
                                                    "description": "The number of decimal digits to be used by this data field. Required only by the 'Float' data type. Must be in range 1 - 15.",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "MaxExponent": {
                                                    "description": "The maximum exponent to be used by this data field. Required only by the 'Float' data type. May not be greater than 307.",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "MaxValue": {
                                                    "description": "The maximum value that can be represented by this data field. Required only by the 'Decimal' data type.",
                                                    "format": "double",
                                                    "type": "number"
                                                },
                                                "MinExponent": {
                                                    "description": "The minimum exponent to be used by this data field. Required only by the 'Float' data type. May not be less than -292.",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "MinValue": {
                                                    "description": "The minimum value that can be represented by this data field. Required only by the 'Decimal' data type.",
                                                    "format": "double",
                                                    "type": "number"
                                                },
                                                "Name": {
                                                    "description": "The name of the field.",
                                                    "type": "string"
                                                },
                                                "ScaleFactor": {
                                                    "description": "The resolution of values that can be represented by this data field. The base value is multiplied by this to compute the final value. Required only by the 'Decimal' data type.",
                                                    "format": "double",
                                                    "type": "number"
                                                },
                                                "Signed": {
                                                    "description": "Indicates whether this value is signed. Required only by the 'Float' data type.",
                                                    "type": "boolean"
                                                },
                                                "Type": {
                                                    "description": "The type of this data field.",
                                                    "enum": [
                                                        "Boolean",
                                                        "Decimal",
                                                        "Float",
                                                        "VariableLengthByteArray"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Type",
                                                "Name"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "DeletedByUserID": {
                                        "description": "The ID of the user that deleted this definition. Read only.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "DeletedDate": {
                                        "description": "A timestamp of when this definition was deleted. Read only.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Description": {
                                        "description": "A description of this definition. May not be updated.",
                                        "type": "string"
                                    },
                                    "DurationAccuracy": {
                                        "description": "The number of bits used for timestamp verification. Defaults to 5. May not be updated.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "DurationAmount": {
                                        "description": "The amount of duration for the specified duration unit used to calculate the Authorization Code. Defaults to 1. May not be updated.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "DurationUnits": {
                                        "description": "The units of duration used to calculate the Authorization Code. Defaults to 'Days'. May not be updated.",
                                        "enum": [
                                            "Weeks",
                                            "Days",
                                            "Hours",
                                            "Minutes"
                                        ],
                                        "type": "string"
                                    },
                                    "HashLength": {
                                        "description": "The bit length of the hash data which will be used for the authorization code. Defaults to 20. May not be updated.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "ID": {
                                        "description": "The ID of the authorization code definition. Read only.",
                                        "type": "string"
                                    },
                                    "IsDeleted": {
                                        "description": "Indicates whether this definition is enabled. True if generating codes is disabled.",
                                        "type": "boolean"
                                    },
                                    "Name": {
                                        "description": "The name of the authorization code definition. May not be updated.",
                                        "type": "string"
                                    },
                                    "RandomLength": {
                                        "description": "The bit length of random data which will be included in the authorization code.  This is necessary to allow creation of \"identical\" authorization codes containing the same timestamp. Defaults to 5. May not be updated.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "ValidationFields": {
                                        "description": "The defined fields to verify when reading authorization codes generated from this definition. May not be updated.",
                                        "items": {
                                            "properties": {
                                                "Name": {
                                                    "description": "The name of the field.",
                                                    "type": "string"
                                                },
                                                "Type": {
                                                    "description": "The type for this validation field.",
                                                    "enum": [
                                                        "Boolean",
                                                        "Float",
                                                        "Int",
                                                        "StringCaseInsensitive",
                                                        "StringCaseSensitive"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Type",
                                                "Name"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "Name"
                                ],
                                "type": "object"
                            }
                        },
                        "text/xml": {
                            "schema": {
                                "description": "Represents the model used to define how a type of authorization code is generated.",
                                "properties": {
                                    "CreatedByUserID": {
                                        "description": "The ID of the user that created this definition. Read only.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "CreatedDate": {
                                        "description": "A timestamp of when this definition was created. Read only.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "DataFields": {
                                        "description": "The defined fields to include in authorization codes generated from this definition. May not be updated.",
                                        "items": {
                                            "properties": {
                                                "DigitsPrecision": {
                                                    "description": "The number of decimal digits to be used by this data field. Required only by the 'Float' data type. Must be in range 1 - 15.",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "MaxExponent": {
                                                    "description": "The maximum exponent to be used by this data field. Required only by the 'Float' data type. May not be greater than 307.",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "MaxValue": {
                                                    "description": "The maximum value that can be represented by this data field. Required only by the 'Decimal' data type.",
                                                    "format": "double",
                                                    "type": "number"
                                                },
                                                "MinExponent": {
                                                    "description": "The minimum exponent to be used by this data field. Required only by the 'Float' data type. May not be less than -292.",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "MinValue": {
                                                    "description": "The minimum value that can be represented by this data field. Required only by the 'Decimal' data type.",
                                                    "format": "double",
                                                    "type": "number"
                                                },
                                                "Name": {
                                                    "description": "The name of the field.",
                                                    "type": "string"
                                                },
                                                "ScaleFactor": {
                                                    "description": "The resolution of values that can be represented by this data field. The base value is multiplied by this to compute the final value. Required only by the 'Decimal' data type.",
                                                    "format": "double",
                                                    "type": "number"
                                                },
                                                "Signed": {
                                                    "description": "Indicates whether this value is signed. Required only by the 'Float' data type.",
                                                    "type": "boolean"
                                                },
                                                "Type": {
                                                    "description": "The type of this data field.",
                                                    "enum": [
                                                        "Boolean",
                                                        "Decimal",
                                                        "Float",
                                                        "VariableLengthByteArray"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Type",
                                                "Name"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "DeletedByUserID": {
                                        "description": "The ID of the user that deleted this definition. Read only.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "DeletedDate": {
                                        "description": "A timestamp of when this definition was deleted. Read only.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Description": {
                                        "description": "A description of this definition. May not be updated.",
                                        "type": "string"
                                    },
                                    "DurationAccuracy": {
                                        "description": "The number of bits used for timestamp verification. Defaults to 5. May not be updated.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "DurationAmount": {
                                        "description": "The amount of duration for the specified duration unit used to calculate the Authorization Code. Defaults to 1. May not be updated.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "DurationUnits": {
                                        "description": "The units of duration used to calculate the Authorization Code. Defaults to 'Days'. May not be updated.",
                                        "enum": [
                                            "Weeks",
                                            "Days",
                                            "Hours",
                                            "Minutes"
                                        ],
                                        "type": "string"
                                    },
                                    "HashLength": {
                                        "description": "The bit length of the hash data which will be used for the authorization code. Defaults to 20. May not be updated.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "ID": {
                                        "description": "The ID of the authorization code definition. Read only.",
                                        "type": "string"
                                    },
                                    "IsDeleted": {
                                        "description": "Indicates whether this definition is enabled. True if generating codes is disabled.",
                                        "type": "boolean"
                                    },
                                    "Name": {
                                        "description": "The name of the authorization code definition. May not be updated.",
                                        "type": "string"
                                    },
                                    "RandomLength": {
                                        "description": "The bit length of random data which will be included in the authorization code.  This is necessary to allow creation of \"identical\" authorization codes containing the same timestamp. Defaults to 5. May not be updated.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "ValidationFields": {
                                        "description": "The defined fields to verify when reading authorization codes generated from this definition. May not be updated.",
                                        "items": {
                                            "properties": {
                                                "Name": {
                                                    "description": "The name of the field.",
                                                    "type": "string"
                                                },
                                                "Type": {
                                                    "description": "The type for this validation field.",
                                                    "enum": [
                                                        "Boolean",
                                                        "Float",
                                                        "Int",
                                                        "StringCaseInsensitive",
                                                        "StringCaseSensitive"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Type",
                                                "Name"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "Name"
                                ],
                                "type": "object"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "description": "Represents the model used to define how a type of authorization code is generated.",
                                "properties": {
                                    "CreatedByUserID": {
                                        "description": "The ID of the user that created this definition. Read only.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "CreatedDate": {
                                        "description": "A timestamp of when this definition was created. Read only.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "DataFields": {
                                        "description": "The defined fields to include in authorization codes generated from this definition. May not be updated.",
                                        "items": {
                                            "properties": {
                                                "DigitsPrecision": {
                                                    "description": "The number of decimal digits to be used by this data field. Required only by the 'Float' data type. Must be in range 1 - 15.",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "MaxExponent": {
                                                    "description": "The maximum exponent to be used by this data field. Required only by the 'Float' data type. May not be greater than 307.",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "MaxValue": {
                                                    "description": "The maximum value that can be represented by this data field. Required only by the 'Decimal' data type.",
                                                    "format": "double",
                                                    "type": "number"
                                                },
                                                "MinExponent": {
                                                    "description": "The minimum exponent to be used by this data field. Required only by the 'Float' data type. May not be less than -292.",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "MinValue": {
                                                    "description": "The minimum value that can be represented by this data field. Required only by the 'Decimal' data type.",
                                                    "format": "double",
                                                    "type": "number"
                                                },
                                                "Name": {
                                                    "description": "The name of the field.",
                                                    "type": "string"
                                                },
                                                "ScaleFactor": {
                                                    "description": "The resolution of values that can be represented by this data field. The base value is multiplied by this to compute the final value. Required only by the 'Decimal' data type.",
                                                    "format": "double",
                                                    "type": "number"
                                                },
                                                "Signed": {
                                                    "description": "Indicates whether this value is signed. Required only by the 'Float' data type.",
                                                    "type": "boolean"
                                                },
                                                "Type": {
                                                    "description": "The type of this data field.",
                                                    "enum": [
                                                        "Boolean",
                                                        "Decimal",
                                                        "Float",
                                                        "VariableLengthByteArray"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Type",
                                                "Name"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "DeletedByUserID": {
                                        "description": "The ID of the user that deleted this definition. Read only.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "DeletedDate": {
                                        "description": "A timestamp of when this definition was deleted. Read only.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Description": {
                                        "description": "A description of this definition. May not be updated.",
                                        "type": "string"
                                    },
                                    "DurationAccuracy": {
                                        "description": "The number of bits used for timestamp verification. Defaults to 5. May not be updated.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "DurationAmount": {
                                        "description": "The amount of duration for the specified duration unit used to calculate the Authorization Code. Defaults to 1. May not be updated.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "DurationUnits": {
                                        "description": "The units of duration used to calculate the Authorization Code. Defaults to 'Days'. May not be updated.",
                                        "enum": [
                                            "Weeks",
                                            "Days",
                                            "Hours",
                                            "Minutes"
                                        ],
                                        "type": "string"
                                    },
                                    "HashLength": {
                                        "description": "The bit length of the hash data which will be used for the authorization code. Defaults to 20. May not be updated.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "ID": {
                                        "description": "The ID of the authorization code definition. Read only.",
                                        "type": "string"
                                    },
                                    "IsDeleted": {
                                        "description": "Indicates whether this definition is enabled. True if generating codes is disabled.",
                                        "type": "boolean"
                                    },
                                    "Name": {
                                        "description": "The name of the authorization code definition. May not be updated.",
                                        "type": "string"
                                    },
                                    "RandomLength": {
                                        "description": "The bit length of random data which will be included in the authorization code.  This is necessary to allow creation of \"identical\" authorization codes containing the same timestamp. Defaults to 5. May not be updated.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "ValidationFields": {
                                        "description": "The defined fields to verify when reading authorization codes generated from this definition. May not be updated.",
                                        "items": {
                                            "properties": {
                                                "Name": {
                                                    "description": "The name of the field.",
                                                    "type": "string"
                                                },
                                                "Type": {
                                                    "description": "The type for this validation field.",
                                                    "enum": [
                                                        "Boolean",
                                                        "Float",
                                                        "Int",
                                                        "StringCaseInsensitive",
                                                        "StringCaseSensitive"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Type",
                                                "Name"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "Name"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "An authorization code definition.",
                    "required": true
                }
            }
        },
        "/api/v2/AuthorizationCodeDefinitions/{id}": {
            "delete": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "AuthorizationCodeDefinitions_DeleteAuthorizationCodeDefinition",
                "parameters": [
                    {
                        "description": "The ID of the authorization code definition.",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Disable an authorization code definition",
                "tags": [
                    "AuthorizationCodeDefinitions"
                ]
            },
            "get": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "parameters": [
                    {
                        "description": "The ID of the authorization code definition.",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Represents the model used to define how a type of authorization code is generated.",
                                    "properties": {
                                        "CreatedByUserID": {
                                            "description": "The ID of the user that created this definition. Read only.",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "CreatedDate": {
                                            "description": "A timestamp of when this definition was created. Read only.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "DataFields": {
                                            "description": "The defined fields to include in authorization codes generated from this definition. May not be updated.",
                                            "items": {
                                                "properties": {
                                                    "DigitsPrecision": {
                                                        "description": "The number of decimal digits to be used by this data field. Required only by the 'Float' data type. Must be in range 1 - 15.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "MaxExponent": {
                                                        "description": "The maximum exponent to be used by this data field. Required only by the 'Float' data type. May not be greater than 307.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "MaxValue": {
                                                        "description": "The maximum value that can be represented by this data field. Required only by the 'Decimal' data type.",
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "MinExponent": {
                                                        "description": "The minimum exponent to be used by this data field. Required only by the 'Float' data type. May not be less than -292.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "MinValue": {
                                                        "description": "The minimum value that can be represented by this data field. Required only by the 'Decimal' data type.",
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the field.",
                                                        "type": "string"
                                                    },
                                                    "ScaleFactor": {
                                                        "description": "The resolution of values that can be represented by this data field. The base value is multiplied by this to compute the final value. Required only by the 'Decimal' data type.",
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "Signed": {
                                                        "description": "Indicates whether this value is signed. Required only by the 'Float' data type.",
                                                        "type": "boolean"
                                                    },
                                                    "Type": {
                                                        "description": "The type of this data field.",
                                                        "enum": [
                                                            "Boolean",
                                                            "Decimal",
                                                            "Float",
                                                            "VariableLengthByteArray"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "Type",
                                                    "Name"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "DeletedByUserID": {
                                            "description": "The ID of the user that deleted this definition. Read only.",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "DeletedDate": {
                                            "description": "A timestamp of when this definition was deleted. Read only.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "Description": {
                                            "description": "A description of this definition. May not be updated.",
                                            "type": "string"
                                        },
                                        "DurationAccuracy": {
                                            "description": "The number of bits used for timestamp verification. Defaults to 5. May not be updated.",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "DurationAmount": {
                                            "description": "The amount of duration for the specified duration unit used to calculate the Authorization Code. Defaults to 1. May not be updated.",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "DurationUnits": {
                                            "description": "The units of duration used to calculate the Authorization Code. Defaults to 'Days'. May not be updated.",
                                            "enum": [
                                                "Weeks",
                                                "Days",
                                                "Hours",
                                                "Minutes"
                                            ],
                                            "type": "string"
                                        },
                                        "HashLength": {
                                            "description": "The bit length of the hash data which will be used for the authorization code. Defaults to 20. May not be updated.",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "ID": {
                                            "description": "The ID of the authorization code definition. Read only.",
                                            "type": "string"
                                        },
                                        "IsDeleted": {
                                            "description": "Indicates whether this definition is enabled. True if generating codes is disabled.",
                                            "type": "boolean"
                                        },
                                        "Name": {
                                            "description": "The name of the authorization code definition. May not be updated.",
                                            "type": "string"
                                        },
                                        "RandomLength": {
                                            "description": "The bit length of random data which will be included in the authorization code.  This is necessary to allow creation of \"identical\" authorization codes containing the same timestamp. Defaults to 5. May not be updated.",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "ValidationFields": {
                                            "description": "The defined fields to verify when reading authorization codes generated from this definition. May not be updated.",
                                            "items": {
                                                "properties": {
                                                    "Name": {
                                                        "description": "The name of the field.",
                                                        "type": "string"
                                                    },
                                                    "Type": {
                                                        "description": "The type for this validation field.",
                                                        "enum": [
                                                            "Boolean",
                                                            "Float",
                                                            "Int",
                                                            "StringCaseInsensitive",
                                                            "StringCaseSensitive"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "Type",
                                                    "Name"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "required": [
                                        "Name"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "description": "Represents the model used to define how a type of authorization code is generated.",
                                    "properties": {
                                        "CreatedByUserID": {
                                            "description": "The ID of the user that created this definition. Read only.",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "CreatedDate": {
                                            "description": "A timestamp of when this definition was created. Read only.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "DataFields": {
                                            "description": "The defined fields to include in authorization codes generated from this definition. May not be updated.",
                                            "items": {
                                                "properties": {
                                                    "DigitsPrecision": {
                                                        "description": "The number of decimal digits to be used by this data field. Required only by the 'Float' data type. Must be in range 1 - 15.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "MaxExponent": {
                                                        "description": "The maximum exponent to be used by this data field. Required only by the 'Float' data type. May not be greater than 307.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "MaxValue": {
                                                        "description": "The maximum value that can be represented by this data field. Required only by the 'Decimal' data type.",
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "MinExponent": {
                                                        "description": "The minimum exponent to be used by this data field. Required only by the 'Float' data type. May not be less than -292.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "MinValue": {
                                                        "description": "The minimum value that can be represented by this data field. Required only by the 'Decimal' data type.",
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the field.",
                                                        "type": "string"
                                                    },
                                                    "ScaleFactor": {
                                                        "description": "The resolution of values that can be represented by this data field. The base value is multiplied by this to compute the final value. Required only by the 'Decimal' data type.",
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "Signed": {
                                                        "description": "Indicates whether this value is signed. Required only by the 'Float' data type.",
                                                        "type": "boolean"
                                                    },
                                                    "Type": {
                                                        "description": "The type of this data field.",
                                                        "enum": [
                                                            "Boolean",
                                                            "Decimal",
                                                            "Float",
                                                            "VariableLengthByteArray"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "Type",
                                                    "Name"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "DeletedByUserID": {
                                            "description": "The ID of the user that deleted this definition. Read only.",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "DeletedDate": {
                                            "description": "A timestamp of when this definition was deleted. Read only.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "Description": {
                                            "description": "A description of this definition. May not be updated.",
                                            "type": "string"
                                        },
                                        "DurationAccuracy": {
                                            "description": "The number of bits used for timestamp verification. Defaults to 5. May not be updated.",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "DurationAmount": {
                                            "description": "The amount of duration for the specified duration unit used to calculate the Authorization Code. Defaults to 1. May not be updated.",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "DurationUnits": {
                                            "description": "The units of duration used to calculate the Authorization Code. Defaults to 'Days'. May not be updated.",
                                            "enum": [
                                                "Weeks",
                                                "Days",
                                                "Hours",
                                                "Minutes"
                                            ],
                                            "type": "string"
                                        },
                                        "HashLength": {
                                            "description": "The bit length of the hash data which will be used for the authorization code. Defaults to 20. May not be updated.",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "ID": {
                                            "description": "The ID of the authorization code definition. Read only.",
                                            "type": "string"
                                        },
                                        "IsDeleted": {
                                            "description": "Indicates whether this definition is enabled. True if generating codes is disabled.",
                                            "type": "boolean"
                                        },
                                        "Name": {
                                            "description": "The name of the authorization code definition. May not be updated.",
                                            "type": "string"
                                        },
                                        "RandomLength": {
                                            "description": "The bit length of random data which will be included in the authorization code.  This is necessary to allow creation of \"identical\" authorization codes containing the same timestamp. Defaults to 5. May not be updated.",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "ValidationFields": {
                                            "description": "The defined fields to verify when reading authorization codes generated from this definition. May not be updated.",
                                            "items": {
                                                "properties": {
                                                    "Name": {
                                                        "description": "The name of the field.",
                                                        "type": "string"
                                                    },
                                                    "Type": {
                                                        "description": "The type for this validation field.",
                                                        "enum": [
                                                            "Boolean",
                                                            "Float",
                                                            "Int",
                                                            "StringCaseInsensitive",
                                                            "StringCaseSensitive"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "Type",
                                                    "Name"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "required": [
                                        "Name"
                                    ],
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "description": "Represents the model used to define how a type of authorization code is generated.",
                                    "properties": {
                                        "CreatedByUserID": {
                                            "description": "The ID of the user that created this definition. Read only.",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "CreatedDate": {
                                            "description": "A timestamp of when this definition was created. Read only.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "DataFields": {
                                            "description": "The defined fields to include in authorization codes generated from this definition. May not be updated.",
                                            "items": {
                                                "properties": {
                                                    "DigitsPrecision": {
                                                        "description": "The number of decimal digits to be used by this data field. Required only by the 'Float' data type. Must be in range 1 - 15.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "MaxExponent": {
                                                        "description": "The maximum exponent to be used by this data field. Required only by the 'Float' data type. May not be greater than 307.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "MaxValue": {
                                                        "description": "The maximum value that can be represented by this data field. Required only by the 'Decimal' data type.",
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "MinExponent": {
                                                        "description": "The minimum exponent to be used by this data field. Required only by the 'Float' data type. May not be less than -292.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "MinValue": {
                                                        "description": "The minimum value that can be represented by this data field. Required only by the 'Decimal' data type.",
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the field.",
                                                        "type": "string"
                                                    },
                                                    "ScaleFactor": {
                                                        "description": "The resolution of values that can be represented by this data field. The base value is multiplied by this to compute the final value. Required only by the 'Decimal' data type.",
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "Signed": {
                                                        "description": "Indicates whether this value is signed. Required only by the 'Float' data type.",
                                                        "type": "boolean"
                                                    },
                                                    "Type": {
                                                        "description": "The type of this data field.",
                                                        "enum": [
                                                            "Boolean",
                                                            "Decimal",
                                                            "Float",
                                                            "VariableLengthByteArray"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "Type",
                                                    "Name"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "DeletedByUserID": {
                                            "description": "The ID of the user that deleted this definition. Read only.",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "DeletedDate": {
                                            "description": "A timestamp of when this definition was deleted. Read only.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "Description": {
                                            "description": "A description of this definition. May not be updated.",
                                            "type": "string"
                                        },
                                        "DurationAccuracy": {
                                            "description": "The number of bits used for timestamp verification. Defaults to 5. May not be updated.",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "DurationAmount": {
                                            "description": "The amount of duration for the specified duration unit used to calculate the Authorization Code. Defaults to 1. May not be updated.",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "DurationUnits": {
                                            "description": "The units of duration used to calculate the Authorization Code. Defaults to 'Days'. May not be updated.",
                                            "enum": [
                                                "Weeks",
                                                "Days",
                                                "Hours",
                                                "Minutes"
                                            ],
                                            "type": "string"
                                        },
                                        "HashLength": {
                                            "description": "The bit length of the hash data which will be used for the authorization code. Defaults to 20. May not be updated.",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "ID": {
                                            "description": "The ID of the authorization code definition. Read only.",
                                            "type": "string"
                                        },
                                        "IsDeleted": {
                                            "description": "Indicates whether this definition is enabled. True if generating codes is disabled.",
                                            "type": "boolean"
                                        },
                                        "Name": {
                                            "description": "The name of the authorization code definition. May not be updated.",
                                            "type": "string"
                                        },
                                        "RandomLength": {
                                            "description": "The bit length of random data which will be included in the authorization code.  This is necessary to allow creation of \"identical\" authorization codes containing the same timestamp. Defaults to 5. May not be updated.",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "ValidationFields": {
                                            "description": "The defined fields to verify when reading authorization codes generated from this definition. May not be updated.",
                                            "items": {
                                                "properties": {
                                                    "Name": {
                                                        "description": "The name of the field.",
                                                        "type": "string"
                                                    },
                                                    "Type": {
                                                        "description": "The type for this validation field.",
                                                        "enum": [
                                                            "Boolean",
                                                            "Float",
                                                            "Int",
                                                            "StringCaseInsensitive",
                                                            "StringCaseSensitive"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "Type",
                                                    "Name"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "required": [
                                        "Name"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "description": "Represents the model used to define how a type of authorization code is generated.",
                                    "properties": {
                                        "CreatedByUserID": {
                                            "description": "The ID of the user that created this definition. Read only.",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "CreatedDate": {
                                            "description": "A timestamp of when this definition was created. Read only.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "DataFields": {
                                            "description": "The defined fields to include in authorization codes generated from this definition. May not be updated.",
                                            "items": {
                                                "properties": {
                                                    "DigitsPrecision": {
                                                        "description": "The number of decimal digits to be used by this data field. Required only by the 'Float' data type. Must be in range 1 - 15.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "MaxExponent": {
                                                        "description": "The maximum exponent to be used by this data field. Required only by the 'Float' data type. May not be greater than 307.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "MaxValue": {
                                                        "description": "The maximum value that can be represented by this data field. Required only by the 'Decimal' data type.",
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "MinExponent": {
                                                        "description": "The minimum exponent to be used by this data field. Required only by the 'Float' data type. May not be less than -292.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "MinValue": {
                                                        "description": "The minimum value that can be represented by this data field. Required only by the 'Decimal' data type.",
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the field.",
                                                        "type": "string"
                                                    },
                                                    "ScaleFactor": {
                                                        "description": "The resolution of values that can be represented by this data field. The base value is multiplied by this to compute the final value. Required only by the 'Decimal' data type.",
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "Signed": {
                                                        "description": "Indicates whether this value is signed. Required only by the 'Float' data type.",
                                                        "type": "boolean"
                                                    },
                                                    "Type": {
                                                        "description": "The type of this data field.",
                                                        "enum": [
                                                            "Boolean",
                                                            "Decimal",
                                                            "Float",
                                                            "VariableLengthByteArray"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "Type",
                                                    "Name"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "DeletedByUserID": {
                                            "description": "The ID of the user that deleted this definition. Read only.",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "DeletedDate": {
                                            "description": "A timestamp of when this definition was deleted. Read only.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "Description": {
                                            "description": "A description of this definition. May not be updated.",
                                            "type": "string"
                                        },
                                        "DurationAccuracy": {
                                            "description": "The number of bits used for timestamp verification. Defaults to 5. May not be updated.",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "DurationAmount": {
                                            "description": "The amount of duration for the specified duration unit used to calculate the Authorization Code. Defaults to 1. May not be updated.",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "DurationUnits": {
                                            "description": "The units of duration used to calculate the Authorization Code. Defaults to 'Days'. May not be updated.",
                                            "enum": [
                                                "Weeks",
                                                "Days",
                                                "Hours",
                                                "Minutes"
                                            ],
                                            "type": "string"
                                        },
                                        "HashLength": {
                                            "description": "The bit length of the hash data which will be used for the authorization code. Defaults to 20. May not be updated.",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "ID": {
                                            "description": "The ID of the authorization code definition. Read only.",
                                            "type": "string"
                                        },
                                        "IsDeleted": {
                                            "description": "Indicates whether this definition is enabled. True if generating codes is disabled.",
                                            "type": "boolean"
                                        },
                                        "Name": {
                                            "description": "The name of the authorization code definition. May not be updated.",
                                            "type": "string"
                                        },
                                        "RandomLength": {
                                            "description": "The bit length of random data which will be included in the authorization code.  This is necessary to allow creation of \"identical\" authorization codes containing the same timestamp. Defaults to 5. May not be updated.",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "ValidationFields": {
                                            "description": "The defined fields to verify when reading authorization codes generated from this definition. May not be updated.",
                                            "items": {
                                                "properties": {
                                                    "Name": {
                                                        "description": "The name of the field.",
                                                        "type": "string"
                                                    },
                                                    "Type": {
                                                        "description": "The type for this validation field.",
                                                        "enum": [
                                                            "Boolean",
                                                            "Float",
                                                            "Int",
                                                            "StringCaseInsensitive",
                                                            "StringCaseSensitive"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "Type",
                                                    "Name"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "required": [
                                        "Name"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get an authorization code definition by its ID",
                "tags": [
                    "AuthorizationCodeDefinitions"
                ]
            },
            "put": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "AuthorizationCodeDefinitions_PutAuthorizationCodeDefinition",
                "parameters": [
                    {
                        "description": "The ID of the authorization code definition.",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Update an authorization code definition",
                "tags": [
                    "AuthorizationCodeDefinitions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Represents the model used to define how a type of authorization code is generated.",
                                "properties": {
                                    "CreatedByUserID": {
                                        "description": "The ID of the user that created this definition. Read only.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "CreatedDate": {
                                        "description": "A timestamp of when this definition was created. Read only.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "DataFields": {
                                        "description": "The defined fields to include in authorization codes generated from this definition. May not be updated.",
                                        "items": {
                                            "properties": {
                                                "DigitsPrecision": {
                                                    "description": "The number of decimal digits to be used by this data field. Required only by the 'Float' data type. Must be in range 1 - 15.",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "MaxExponent": {
                                                    "description": "The maximum exponent to be used by this data field. Required only by the 'Float' data type. May not be greater than 307.",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "MaxValue": {
                                                    "description": "The maximum value that can be represented by this data field. Required only by the 'Decimal' data type.",
                                                    "format": "double",
                                                    "type": "number"
                                                },
                                                "MinExponent": {
                                                    "description": "The minimum exponent to be used by this data field. Required only by the 'Float' data type. May not be less than -292.",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "MinValue": {
                                                    "description": "The minimum value that can be represented by this data field. Required only by the 'Decimal' data type.",
                                                    "format": "double",
                                                    "type": "number"
                                                },
                                                "Name": {
                                                    "description": "The name of the field.",
                                                    "type": "string"
                                                },
                                                "ScaleFactor": {
                                                    "description": "The resolution of values that can be represented by this data field. The base value is multiplied by this to compute the final value. Required only by the 'Decimal' data type.",
                                                    "format": "double",
                                                    "type": "number"
                                                },
                                                "Signed": {
                                                    "description": "Indicates whether this value is signed. Required only by the 'Float' data type.",
                                                    "type": "boolean"
                                                },
                                                "Type": {
                                                    "description": "The type of this data field.",
                                                    "enum": [
                                                        "Boolean",
                                                        "Decimal",
                                                        "Float",
                                                        "VariableLengthByteArray"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Type",
                                                "Name"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "DeletedByUserID": {
                                        "description": "The ID of the user that deleted this definition. Read only.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "DeletedDate": {
                                        "description": "A timestamp of when this definition was deleted. Read only.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Description": {
                                        "description": "A description of this definition. May not be updated.",
                                        "type": "string"
                                    },
                                    "DurationAccuracy": {
                                        "description": "The number of bits used for timestamp verification. Defaults to 5. May not be updated.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "DurationAmount": {
                                        "description": "The amount of duration for the specified duration unit used to calculate the Authorization Code. Defaults to 1. May not be updated.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "DurationUnits": {
                                        "description": "The units of duration used to calculate the Authorization Code. Defaults to 'Days'. May not be updated.",
                                        "enum": [
                                            "Weeks",
                                            "Days",
                                            "Hours",
                                            "Minutes"
                                        ],
                                        "type": "string"
                                    },
                                    "HashLength": {
                                        "description": "The bit length of the hash data which will be used for the authorization code. Defaults to 20. May not be updated.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "ID": {
                                        "description": "The ID of the authorization code definition. Read only.",
                                        "type": "string"
                                    },
                                    "IsDeleted": {
                                        "description": "Indicates whether this definition is enabled. True if generating codes is disabled.",
                                        "type": "boolean"
                                    },
                                    "Name": {
                                        "description": "The name of the authorization code definition. May not be updated.",
                                        "type": "string"
                                    },
                                    "RandomLength": {
                                        "description": "The bit length of random data which will be included in the authorization code.  This is necessary to allow creation of \"identical\" authorization codes containing the same timestamp. Defaults to 5. May not be updated.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "ValidationFields": {
                                        "description": "The defined fields to verify when reading authorization codes generated from this definition. May not be updated.",
                                        "items": {
                                            "properties": {
                                                "Name": {
                                                    "description": "The name of the field.",
                                                    "type": "string"
                                                },
                                                "Type": {
                                                    "description": "The type for this validation field.",
                                                    "enum": [
                                                        "Boolean",
                                                        "Float",
                                                        "Int",
                                                        "StringCaseInsensitive",
                                                        "StringCaseSensitive"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Type",
                                                "Name"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "Name"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "description": "Represents the model used to define how a type of authorization code is generated.",
                                "properties": {
                                    "CreatedByUserID": {
                                        "description": "The ID of the user that created this definition. Read only.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "CreatedDate": {
                                        "description": "A timestamp of when this definition was created. Read only.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "DataFields": {
                                        "description": "The defined fields to include in authorization codes generated from this definition. May not be updated.",
                                        "items": {
                                            "properties": {
                                                "DigitsPrecision": {
                                                    "description": "The number of decimal digits to be used by this data field. Required only by the 'Float' data type. Must be in range 1 - 15.",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "MaxExponent": {
                                                    "description": "The maximum exponent to be used by this data field. Required only by the 'Float' data type. May not be greater than 307.",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "MaxValue": {
                                                    "description": "The maximum value that can be represented by this data field. Required only by the 'Decimal' data type.",
                                                    "format": "double",
                                                    "type": "number"
                                                },
                                                "MinExponent": {
                                                    "description": "The minimum exponent to be used by this data field. Required only by the 'Float' data type. May not be less than -292.",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "MinValue": {
                                                    "description": "The minimum value that can be represented by this data field. Required only by the 'Decimal' data type.",
                                                    "format": "double",
                                                    "type": "number"
                                                },
                                                "Name": {
                                                    "description": "The name of the field.",
                                                    "type": "string"
                                                },
                                                "ScaleFactor": {
                                                    "description": "The resolution of values that can be represented by this data field. The base value is multiplied by this to compute the final value. Required only by the 'Decimal' data type.",
                                                    "format": "double",
                                                    "type": "number"
                                                },
                                                "Signed": {
                                                    "description": "Indicates whether this value is signed. Required only by the 'Float' data type.",
                                                    "type": "boolean"
                                                },
                                                "Type": {
                                                    "description": "The type of this data field.",
                                                    "enum": [
                                                        "Boolean",
                                                        "Decimal",
                                                        "Float",
                                                        "VariableLengthByteArray"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Type",
                                                "Name"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "DeletedByUserID": {
                                        "description": "The ID of the user that deleted this definition. Read only.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "DeletedDate": {
                                        "description": "A timestamp of when this definition was deleted. Read only.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Description": {
                                        "description": "A description of this definition. May not be updated.",
                                        "type": "string"
                                    },
                                    "DurationAccuracy": {
                                        "description": "The number of bits used for timestamp verification. Defaults to 5. May not be updated.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "DurationAmount": {
                                        "description": "The amount of duration for the specified duration unit used to calculate the Authorization Code. Defaults to 1. May not be updated.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "DurationUnits": {
                                        "description": "The units of duration used to calculate the Authorization Code. Defaults to 'Days'. May not be updated.",
                                        "enum": [
                                            "Weeks",
                                            "Days",
                                            "Hours",
                                            "Minutes"
                                        ],
                                        "type": "string"
                                    },
                                    "HashLength": {
                                        "description": "The bit length of the hash data which will be used for the authorization code. Defaults to 20. May not be updated.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "ID": {
                                        "description": "The ID of the authorization code definition. Read only.",
                                        "type": "string"
                                    },
                                    "IsDeleted": {
                                        "description": "Indicates whether this definition is enabled. True if generating codes is disabled.",
                                        "type": "boolean"
                                    },
                                    "Name": {
                                        "description": "The name of the authorization code definition. May not be updated.",
                                        "type": "string"
                                    },
                                    "RandomLength": {
                                        "description": "The bit length of random data which will be included in the authorization code.  This is necessary to allow creation of \"identical\" authorization codes containing the same timestamp. Defaults to 5. May not be updated.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "ValidationFields": {
                                        "description": "The defined fields to verify when reading authorization codes generated from this definition. May not be updated.",
                                        "items": {
                                            "properties": {
                                                "Name": {
                                                    "description": "The name of the field.",
                                                    "type": "string"
                                                },
                                                "Type": {
                                                    "description": "The type for this validation field.",
                                                    "enum": [
                                                        "Boolean",
                                                        "Float",
                                                        "Int",
                                                        "StringCaseInsensitive",
                                                        "StringCaseSensitive"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Type",
                                                "Name"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "Name"
                                ],
                                "type": "object"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "description": "Represents the model used to define how a type of authorization code is generated.",
                                "properties": {
                                    "CreatedByUserID": {
                                        "description": "The ID of the user that created this definition. Read only.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "CreatedDate": {
                                        "description": "A timestamp of when this definition was created. Read only.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "DataFields": {
                                        "description": "The defined fields to include in authorization codes generated from this definition. May not be updated.",
                                        "items": {
                                            "properties": {
                                                "DigitsPrecision": {
                                                    "description": "The number of decimal digits to be used by this data field. Required only by the 'Float' data type. Must be in range 1 - 15.",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "MaxExponent": {
                                                    "description": "The maximum exponent to be used by this data field. Required only by the 'Float' data type. May not be greater than 307.",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "MaxValue": {
                                                    "description": "The maximum value that can be represented by this data field. Required only by the 'Decimal' data type.",
                                                    "format": "double",
                                                    "type": "number"
                                                },
                                                "MinExponent": {
                                                    "description": "The minimum exponent to be used by this data field. Required only by the 'Float' data type. May not be less than -292.",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "MinValue": {
                                                    "description": "The minimum value that can be represented by this data field. Required only by the 'Decimal' data type.",
                                                    "format": "double",
                                                    "type": "number"
                                                },
                                                "Name": {
                                                    "description": "The name of the field.",
                                                    "type": "string"
                                                },
                                                "ScaleFactor": {
                                                    "description": "The resolution of values that can be represented by this data field. The base value is multiplied by this to compute the final value. Required only by the 'Decimal' data type.",
                                                    "format": "double",
                                                    "type": "number"
                                                },
                                                "Signed": {
                                                    "description": "Indicates whether this value is signed. Required only by the 'Float' data type.",
                                                    "type": "boolean"
                                                },
                                                "Type": {
                                                    "description": "The type of this data field.",
                                                    "enum": [
                                                        "Boolean",
                                                        "Decimal",
                                                        "Float",
                                                        "VariableLengthByteArray"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Type",
                                                "Name"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "DeletedByUserID": {
                                        "description": "The ID of the user that deleted this definition. Read only.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "DeletedDate": {
                                        "description": "A timestamp of when this definition was deleted. Read only.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Description": {
                                        "description": "A description of this definition. May not be updated.",
                                        "type": "string"
                                    },
                                    "DurationAccuracy": {
                                        "description": "The number of bits used for timestamp verification. Defaults to 5. May not be updated.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "DurationAmount": {
                                        "description": "The amount of duration for the specified duration unit used to calculate the Authorization Code. Defaults to 1. May not be updated.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "DurationUnits": {
                                        "description": "The units of duration used to calculate the Authorization Code. Defaults to 'Days'. May not be updated.",
                                        "enum": [
                                            "Weeks",
                                            "Days",
                                            "Hours",
                                            "Minutes"
                                        ],
                                        "type": "string"
                                    },
                                    "HashLength": {
                                        "description": "The bit length of the hash data which will be used for the authorization code. Defaults to 20. May not be updated.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "ID": {
                                        "description": "The ID of the authorization code definition. Read only.",
                                        "type": "string"
                                    },
                                    "IsDeleted": {
                                        "description": "Indicates whether this definition is enabled. True if generating codes is disabled.",
                                        "type": "boolean"
                                    },
                                    "Name": {
                                        "description": "The name of the authorization code definition. May not be updated.",
                                        "type": "string"
                                    },
                                    "RandomLength": {
                                        "description": "The bit length of random data which will be included in the authorization code.  This is necessary to allow creation of \"identical\" authorization codes containing the same timestamp. Defaults to 5. May not be updated.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "ValidationFields": {
                                        "description": "The defined fields to verify when reading authorization codes generated from this definition. May not be updated.",
                                        "items": {
                                            "properties": {
                                                "Name": {
                                                    "description": "The name of the field.",
                                                    "type": "string"
                                                },
                                                "Type": {
                                                    "description": "The type for this validation field.",
                                                    "enum": [
                                                        "Boolean",
                                                        "Float",
                                                        "Int",
                                                        "StringCaseInsensitive",
                                                        "StringCaseSensitive"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Type",
                                                "Name"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "Name"
                                ],
                                "type": "object"
                            }
                        },
                        "text/xml": {
                            "schema": {
                                "description": "Represents the model used to define how a type of authorization code is generated.",
                                "properties": {
                                    "CreatedByUserID": {
                                        "description": "The ID of the user that created this definition. Read only.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "CreatedDate": {
                                        "description": "A timestamp of when this definition was created. Read only.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "DataFields": {
                                        "description": "The defined fields to include in authorization codes generated from this definition. May not be updated.",
                                        "items": {
                                            "properties": {
                                                "DigitsPrecision": {
                                                    "description": "The number of decimal digits to be used by this data field. Required only by the 'Float' data type. Must be in range 1 - 15.",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "MaxExponent": {
                                                    "description": "The maximum exponent to be used by this data field. Required only by the 'Float' data type. May not be greater than 307.",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "MaxValue": {
                                                    "description": "The maximum value that can be represented by this data field. Required only by the 'Decimal' data type.",
                                                    "format": "double",
                                                    "type": "number"
                                                },
                                                "MinExponent": {
                                                    "description": "The minimum exponent to be used by this data field. Required only by the 'Float' data type. May not be less than -292.",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "MinValue": {
                                                    "description": "The minimum value that can be represented by this data field. Required only by the 'Decimal' data type.",
                                                    "format": "double",
                                                    "type": "number"
                                                },
                                                "Name": {
                                                    "description": "The name of the field.",
                                                    "type": "string"
                                                },
                                                "ScaleFactor": {
                                                    "description": "The resolution of values that can be represented by this data field. The base value is multiplied by this to compute the final value. Required only by the 'Decimal' data type.",
                                                    "format": "double",
                                                    "type": "number"
                                                },
                                                "Signed": {
                                                    "description": "Indicates whether this value is signed. Required only by the 'Float' data type.",
                                                    "type": "boolean"
                                                },
                                                "Type": {
                                                    "description": "The type of this data field.",
                                                    "enum": [
                                                        "Boolean",
                                                        "Decimal",
                                                        "Float",
                                                        "VariableLengthByteArray"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Type",
                                                "Name"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "DeletedByUserID": {
                                        "description": "The ID of the user that deleted this definition. Read only.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "DeletedDate": {
                                        "description": "A timestamp of when this definition was deleted. Read only.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Description": {
                                        "description": "A description of this definition. May not be updated.",
                                        "type": "string"
                                    },
                                    "DurationAccuracy": {
                                        "description": "The number of bits used for timestamp verification. Defaults to 5. May not be updated.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "DurationAmount": {
                                        "description": "The amount of duration for the specified duration unit used to calculate the Authorization Code. Defaults to 1. May not be updated.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "DurationUnits": {
                                        "description": "The units of duration used to calculate the Authorization Code. Defaults to 'Days'. May not be updated.",
                                        "enum": [
                                            "Weeks",
                                            "Days",
                                            "Hours",
                                            "Minutes"
                                        ],
                                        "type": "string"
                                    },
                                    "HashLength": {
                                        "description": "The bit length of the hash data which will be used for the authorization code. Defaults to 20. May not be updated.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "ID": {
                                        "description": "The ID of the authorization code definition. Read only.",
                                        "type": "string"
                                    },
                                    "IsDeleted": {
                                        "description": "Indicates whether this definition is enabled. True if generating codes is disabled.",
                                        "type": "boolean"
                                    },
                                    "Name": {
                                        "description": "The name of the authorization code definition. May not be updated.",
                                        "type": "string"
                                    },
                                    "RandomLength": {
                                        "description": "The bit length of random data which will be included in the authorization code.  This is necessary to allow creation of \"identical\" authorization codes containing the same timestamp. Defaults to 5. May not be updated.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "ValidationFields": {
                                        "description": "The defined fields to verify when reading authorization codes generated from this definition. May not be updated.",
                                        "items": {
                                            "properties": {
                                                "Name": {
                                                    "description": "The name of the field.",
                                                    "type": "string"
                                                },
                                                "Type": {
                                                    "description": "The type for this validation field.",
                                                    "enum": [
                                                        "Boolean",
                                                        "Float",
                                                        "Int",
                                                        "StringCaseInsensitive",
                                                        "StringCaseSensitive"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Type",
                                                "Name"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "Name"
                                ],
                                "type": "object"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "description": "Represents the model used to define how a type of authorization code is generated.",
                                "properties": {
                                    "CreatedByUserID": {
                                        "description": "The ID of the user that created this definition. Read only.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "CreatedDate": {
                                        "description": "A timestamp of when this definition was created. Read only.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "DataFields": {
                                        "description": "The defined fields to include in authorization codes generated from this definition. May not be updated.",
                                        "items": {
                                            "properties": {
                                                "DigitsPrecision": {
                                                    "description": "The number of decimal digits to be used by this data field. Required only by the 'Float' data type. Must be in range 1 - 15.",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "MaxExponent": {
                                                    "description": "The maximum exponent to be used by this data field. Required only by the 'Float' data type. May not be greater than 307.",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "MaxValue": {
                                                    "description": "The maximum value that can be represented by this data field. Required only by the 'Decimal' data type.",
                                                    "format": "double",
                                                    "type": "number"
                                                },
                                                "MinExponent": {
                                                    "description": "The minimum exponent to be used by this data field. Required only by the 'Float' data type. May not be less than -292.",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "MinValue": {
                                                    "description": "The minimum value that can be represented by this data field. Required only by the 'Decimal' data type.",
                                                    "format": "double",
                                                    "type": "number"
                                                },
                                                "Name": {
                                                    "description": "The name of the field.",
                                                    "type": "string"
                                                },
                                                "ScaleFactor": {
                                                    "description": "The resolution of values that can be represented by this data field. The base value is multiplied by this to compute the final value. Required only by the 'Decimal' data type.",
                                                    "format": "double",
                                                    "type": "number"
                                                },
                                                "Signed": {
                                                    "description": "Indicates whether this value is signed. Required only by the 'Float' data type.",
                                                    "type": "boolean"
                                                },
                                                "Type": {
                                                    "description": "The type of this data field.",
                                                    "enum": [
                                                        "Boolean",
                                                        "Decimal",
                                                        "Float",
                                                        "VariableLengthByteArray"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Type",
                                                "Name"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "DeletedByUserID": {
                                        "description": "The ID of the user that deleted this definition. Read only.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "DeletedDate": {
                                        "description": "A timestamp of when this definition was deleted. Read only.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Description": {
                                        "description": "A description of this definition. May not be updated.",
                                        "type": "string"
                                    },
                                    "DurationAccuracy": {
                                        "description": "The number of bits used for timestamp verification. Defaults to 5. May not be updated.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "DurationAmount": {
                                        "description": "The amount of duration for the specified duration unit used to calculate the Authorization Code. Defaults to 1. May not be updated.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "DurationUnits": {
                                        "description": "The units of duration used to calculate the Authorization Code. Defaults to 'Days'. May not be updated.",
                                        "enum": [
                                            "Weeks",
                                            "Days",
                                            "Hours",
                                            "Minutes"
                                        ],
                                        "type": "string"
                                    },
                                    "HashLength": {
                                        "description": "The bit length of the hash data which will be used for the authorization code. Defaults to 20. May not be updated.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "ID": {
                                        "description": "The ID of the authorization code definition. Read only.",
                                        "type": "string"
                                    },
                                    "IsDeleted": {
                                        "description": "Indicates whether this definition is enabled. True if generating codes is disabled.",
                                        "type": "boolean"
                                    },
                                    "Name": {
                                        "description": "The name of the authorization code definition. May not be updated.",
                                        "type": "string"
                                    },
                                    "RandomLength": {
                                        "description": "The bit length of random data which will be included in the authorization code.  This is necessary to allow creation of \"identical\" authorization codes containing the same timestamp. Defaults to 5. May not be updated.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "ValidationFields": {
                                        "description": "The defined fields to verify when reading authorization codes generated from this definition. May not be updated.",
                                        "items": {
                                            "properties": {
                                                "Name": {
                                                    "description": "The name of the field.",
                                                    "type": "string"
                                                },
                                                "Type": {
                                                    "description": "The type for this validation field.",
                                                    "enum": [
                                                        "Boolean",
                                                        "Float",
                                                        "Int",
                                                        "StringCaseInsensitive",
                                                        "StringCaseSensitive"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Type",
                                                "Name"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "Name"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "An authorization code definition.",
                    "required": true
                }
            }
        },
        "/api/v2/AuthorizationCodes": {
            "get": {
                "deprecated": false,
                "description": "Additional searches: validationParameters[Name]=Value and dataParameters[Name]=Value. These can be used to search for authorization codes that have been generated using specified values for data or validation parameters.",
                "operationId": "AuthorizationCodes_GetAuthorizationCodes",
                "parameters": [
                    {
                        "description": "Optional. If provided, searches for entities with the provided authorization code.",
                        "in": "query",
                        "name": "code",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Optional. The page limit.  If not specified, the default page limit is 10.",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "Optional. The page offset.  If not specified, the default page offset is 0.",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "Optional. If specified, filters codes by definition id.",
                        "in": "query",
                        "name": "definitionID",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Optional. If specified, filters codes to those created by the given User ID.",
                        "in": "query",
                        "name": "createdByUserID",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "Optional. If specified, filters codes to those deleted by the given User ID.",
                        "in": "query",
                        "name": "deletedByUserID",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "Optional. Whether to include deleted codes. 'False' by default.",
                        "in": "query",
                        "name": "includeDeleted",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "description": "Represents the model containing an authorization code used to unlock a feature in machines and EDT",
                                                "properties": {
                                                    "Code": {
                                                        "description": "The code to enter to unlock a feature. Read only.",
                                                        "type": "string"
                                                    },
                                                    "CreatedByUserID": {
                                                        "description": "The ID of the user that created this authorization code. Read only.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "CreatedDate": {
                                                        "description": "A timestamp of when this code was created. Read only.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "DataParameters": {
                                                        "description": "The parameters and values contained as data in this authorization code. May not be updated.",
                                                        "items": {
                                                            "description": "A parameter used to create an authorization code.",
                                                            "properties": {
                                                                "Name": {
                                                                    "description": "The name of the parameter. May not be updated.",
                                                                    "type": "string"
                                                                },
                                                                "Value": {
                                                                    "description": "The value of the parameter. May not be updated.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "Name",
                                                                "Value"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "DefinitionID": {
                                                        "description": "The id of the definition for this authorization code. May not be updated.",
                                                        "type": "string"
                                                    },
                                                    "DeletedByUserID": {
                                                        "description": "The ID of the user that deleted this authorization code. Read only.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "DeletedDate": {
                                                        "description": "A timestamp of when this authorization code was deleted. Read only.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "ID": {
                                                        "description": "The identifier for the authorization code. Read only.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "IsDeleted": {
                                                        "description": "Indicates whether this code is deleted.",
                                                        "type": "boolean"
                                                    },
                                                    "ValidationParameters": {
                                                        "description": "The parameters and values used to validate this authorization code. May not be updated.",
                                                        "items": {
                                                            "description": "A parameter used to create an authorization code.",
                                                            "properties": {
                                                                "Name": {
                                                                    "description": "The name of the parameter. May not be updated.",
                                                                    "type": "string"
                                                                },
                                                                "Value": {
                                                                    "description": "The value of the parameter. May not be updated.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "Name",
                                                                "Value"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "description": "Represents the model containing an authorization code used to unlock a feature in machines and EDT",
                                                "properties": {
                                                    "Code": {
                                                        "description": "The code to enter to unlock a feature. Read only.",
                                                        "type": "string"
                                                    },
                                                    "CreatedByUserID": {
                                                        "description": "The ID of the user that created this authorization code. Read only.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "CreatedDate": {
                                                        "description": "A timestamp of when this code was created. Read only.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "DataParameters": {
                                                        "description": "The parameters and values contained as data in this authorization code. May not be updated.",
                                                        "items": {
                                                            "description": "A parameter used to create an authorization code.",
                                                            "properties": {
                                                                "Name": {
                                                                    "description": "The name of the parameter. May not be updated.",
                                                                    "type": "string"
                                                                },
                                                                "Value": {
                                                                    "description": "The value of the parameter. May not be updated.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "Name",
                                                                "Value"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "DefinitionID": {
                                                        "description": "The id of the definition for this authorization code. May not be updated.",
                                                        "type": "string"
                                                    },
                                                    "DeletedByUserID": {
                                                        "description": "The ID of the user that deleted this authorization code. Read only.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "DeletedDate": {
                                                        "description": "A timestamp of when this authorization code was deleted. Read only.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "ID": {
                                                        "description": "The identifier for the authorization code. Read only.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "IsDeleted": {
                                                        "description": "Indicates whether this code is deleted.",
                                                        "type": "boolean"
                                                    },
                                                    "ValidationParameters": {
                                                        "description": "The parameters and values used to validate this authorization code. May not be updated.",
                                                        "items": {
                                                            "description": "A parameter used to create an authorization code.",
                                                            "properties": {
                                                                "Name": {
                                                                    "description": "The name of the parameter. May not be updated.",
                                                                    "type": "string"
                                                                },
                                                                "Value": {
                                                                    "description": "The value of the parameter. May not be updated.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "Name",
                                                                "Value"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "description": "Represents the model containing an authorization code used to unlock a feature in machines and EDT",
                                                "properties": {
                                                    "Code": {
                                                        "description": "The code to enter to unlock a feature. Read only.",
                                                        "type": "string"
                                                    },
                                                    "CreatedByUserID": {
                                                        "description": "The ID of the user that created this authorization code. Read only.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "CreatedDate": {
                                                        "description": "A timestamp of when this code was created. Read only.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "DataParameters": {
                                                        "description": "The parameters and values contained as data in this authorization code. May not be updated.",
                                                        "items": {
                                                            "description": "A parameter used to create an authorization code.",
                                                            "properties": {
                                                                "Name": {
                                                                    "description": "The name of the parameter. May not be updated.",
                                                                    "type": "string"
                                                                },
                                                                "Value": {
                                                                    "description": "The value of the parameter. May not be updated.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "Name",
                                                                "Value"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "DefinitionID": {
                                                        "description": "The id of the definition for this authorization code. May not be updated.",
                                                        "type": "string"
                                                    },
                                                    "DeletedByUserID": {
                                                        "description": "The ID of the user that deleted this authorization code. Read only.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "DeletedDate": {
                                                        "description": "A timestamp of when this authorization code was deleted. Read only.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "ID": {
                                                        "description": "The identifier for the authorization code. Read only.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "IsDeleted": {
                                                        "description": "Indicates whether this code is deleted.",
                                                        "type": "boolean"
                                                    },
                                                    "ValidationParameters": {
                                                        "description": "The parameters and values used to validate this authorization code. May not be updated.",
                                                        "items": {
                                                            "description": "A parameter used to create an authorization code.",
                                                            "properties": {
                                                                "Name": {
                                                                    "description": "The name of the parameter. May not be updated.",
                                                                    "type": "string"
                                                                },
                                                                "Value": {
                                                                    "description": "The value of the parameter. May not be updated.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "Name",
                                                                "Value"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "description": "Represents the model containing an authorization code used to unlock a feature in machines and EDT",
                                                "properties": {
                                                    "Code": {
                                                        "description": "The code to enter to unlock a feature. Read only.",
                                                        "type": "string"
                                                    },
                                                    "CreatedByUserID": {
                                                        "description": "The ID of the user that created this authorization code. Read only.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "CreatedDate": {
                                                        "description": "A timestamp of when this code was created. Read only.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "DataParameters": {
                                                        "description": "The parameters and values contained as data in this authorization code. May not be updated.",
                                                        "items": {
                                                            "description": "A parameter used to create an authorization code.",
                                                            "properties": {
                                                                "Name": {
                                                                    "description": "The name of the parameter. May not be updated.",
                                                                    "type": "string"
                                                                },
                                                                "Value": {
                                                                    "description": "The value of the parameter. May not be updated.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "Name",
                                                                "Value"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "DefinitionID": {
                                                        "description": "The id of the definition for this authorization code. May not be updated.",
                                                        "type": "string"
                                                    },
                                                    "DeletedByUserID": {
                                                        "description": "The ID of the user that deleted this authorization code. Read only.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "DeletedDate": {
                                                        "description": "A timestamp of when this authorization code was deleted. Read only.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "ID": {
                                                        "description": "The identifier for the authorization code. Read only.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "IsDeleted": {
                                                        "description": "Indicates whether this code is deleted.",
                                                        "type": "boolean"
                                                    },
                                                    "ValidationParameters": {
                                                        "description": "The parameters and values used to validate this authorization code. May not be updated.",
                                                        "items": {
                                                            "description": "A parameter used to create an authorization code.",
                                                            "properties": {
                                                                "Name": {
                                                                    "description": "The name of the parameter. May not be updated.",
                                                                    "type": "string"
                                                                },
                                                                "Value": {
                                                                    "description": "The value of the parameter. May not be updated.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "Name",
                                                                "Value"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get authorization codes.",
                "tags": [
                    "AuthorizationCodes"
                ]
            },
            "post": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "AuthorizationCodes_PostAuthorizationCode",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Generates an authorization code using the provided definition and parameters.",
                "tags": [
                    "AuthorizationCodes"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Represents the model containing an authorization code used to unlock a feature in machines and EDT",
                                "properties": {
                                    "Code": {
                                        "description": "The code to enter to unlock a feature. Read only.",
                                        "type": "string"
                                    },
                                    "CreatedByUserID": {
                                        "description": "The ID of the user that created this authorization code. Read only.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "CreatedDate": {
                                        "description": "A timestamp of when this code was created. Read only.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "DataParameters": {
                                        "description": "The parameters and values contained as data in this authorization code. May not be updated.",
                                        "items": {
                                            "description": "A parameter used to create an authorization code.",
                                            "properties": {
                                                "Name": {
                                                    "description": "The name of the parameter. May not be updated.",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "The value of the parameter. May not be updated.",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Name",
                                                "Value"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "DefinitionID": {
                                        "description": "The id of the definition for this authorization code. May not be updated.",
                                        "type": "string"
                                    },
                                    "DeletedByUserID": {
                                        "description": "The ID of the user that deleted this authorization code. Read only.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "DeletedDate": {
                                        "description": "A timestamp of when this authorization code was deleted. Read only.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "ID": {
                                        "description": "The identifier for the authorization code. Read only.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "IsDeleted": {
                                        "description": "Indicates whether this code is deleted.",
                                        "type": "boolean"
                                    },
                                    "ValidationParameters": {
                                        "description": "The parameters and values used to validate this authorization code. May not be updated.",
                                        "items": {
                                            "description": "A parameter used to create an authorization code.",
                                            "properties": {
                                                "Name": {
                                                    "description": "The name of the parameter. May not be updated.",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "The value of the parameter. May not be updated.",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Name",
                                                "Value"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "description": "Represents the model containing an authorization code used to unlock a feature in machines and EDT",
                                "properties": {
                                    "Code": {
                                        "description": "The code to enter to unlock a feature. Read only.",
                                        "type": "string"
                                    },
                                    "CreatedByUserID": {
                                        "description": "The ID of the user that created this authorization code. Read only.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "CreatedDate": {
                                        "description": "A timestamp of when this code was created. Read only.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "DataParameters": {
                                        "description": "The parameters and values contained as data in this authorization code. May not be updated.",
                                        "items": {
                                            "description": "A parameter used to create an authorization code.",
                                            "properties": {
                                                "Name": {
                                                    "description": "The name of the parameter. May not be updated.",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "The value of the parameter. May not be updated.",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Name",
                                                "Value"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "DefinitionID": {
                                        "description": "The id of the definition for this authorization code. May not be updated.",
                                        "type": "string"
                                    },
                                    "DeletedByUserID": {
                                        "description": "The ID of the user that deleted this authorization code. Read only.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "DeletedDate": {
                                        "description": "A timestamp of when this authorization code was deleted. Read only.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "ID": {
                                        "description": "The identifier for the authorization code. Read only.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "IsDeleted": {
                                        "description": "Indicates whether this code is deleted.",
                                        "type": "boolean"
                                    },
                                    "ValidationParameters": {
                                        "description": "The parameters and values used to validate this authorization code. May not be updated.",
                                        "items": {
                                            "description": "A parameter used to create an authorization code.",
                                            "properties": {
                                                "Name": {
                                                    "description": "The name of the parameter. May not be updated.",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "The value of the parameter. May not be updated.",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Name",
                                                "Value"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "description": "Represents the model containing an authorization code used to unlock a feature in machines and EDT",
                                "properties": {
                                    "Code": {
                                        "description": "The code to enter to unlock a feature. Read only.",
                                        "type": "string"
                                    },
                                    "CreatedByUserID": {
                                        "description": "The ID of the user that created this authorization code. Read only.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "CreatedDate": {
                                        "description": "A timestamp of when this code was created. Read only.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "DataParameters": {
                                        "description": "The parameters and values contained as data in this authorization code. May not be updated.",
                                        "items": {
                                            "description": "A parameter used to create an authorization code.",
                                            "properties": {
                                                "Name": {
                                                    "description": "The name of the parameter. May not be updated.",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "The value of the parameter. May not be updated.",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Name",
                                                "Value"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "DefinitionID": {
                                        "description": "The id of the definition for this authorization code. May not be updated.",
                                        "type": "string"
                                    },
                                    "DeletedByUserID": {
                                        "description": "The ID of the user that deleted this authorization code. Read only.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "DeletedDate": {
                                        "description": "A timestamp of when this authorization code was deleted. Read only.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "ID": {
                                        "description": "The identifier for the authorization code. Read only.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "IsDeleted": {
                                        "description": "Indicates whether this code is deleted.",
                                        "type": "boolean"
                                    },
                                    "ValidationParameters": {
                                        "description": "The parameters and values used to validate this authorization code. May not be updated.",
                                        "items": {
                                            "description": "A parameter used to create an authorization code.",
                                            "properties": {
                                                "Name": {
                                                    "description": "The name of the parameter. May not be updated.",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "The value of the parameter. May not be updated.",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Name",
                                                "Value"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "text/xml": {
                            "schema": {
                                "description": "Represents the model containing an authorization code used to unlock a feature in machines and EDT",
                                "properties": {
                                    "Code": {
                                        "description": "The code to enter to unlock a feature. Read only.",
                                        "type": "string"
                                    },
                                    "CreatedByUserID": {
                                        "description": "The ID of the user that created this authorization code. Read only.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "CreatedDate": {
                                        "description": "A timestamp of when this code was created. Read only.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "DataParameters": {
                                        "description": "The parameters and values contained as data in this authorization code. May not be updated.",
                                        "items": {
                                            "description": "A parameter used to create an authorization code.",
                                            "properties": {
                                                "Name": {
                                                    "description": "The name of the parameter. May not be updated.",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "The value of the parameter. May not be updated.",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Name",
                                                "Value"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "DefinitionID": {
                                        "description": "The id of the definition for this authorization code. May not be updated.",
                                        "type": "string"
                                    },
                                    "DeletedByUserID": {
                                        "description": "The ID of the user that deleted this authorization code. Read only.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "DeletedDate": {
                                        "description": "A timestamp of when this authorization code was deleted. Read only.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "ID": {
                                        "description": "The identifier for the authorization code. Read only.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "IsDeleted": {
                                        "description": "Indicates whether this code is deleted.",
                                        "type": "boolean"
                                    },
                                    "ValidationParameters": {
                                        "description": "The parameters and values used to validate this authorization code. May not be updated.",
                                        "items": {
                                            "description": "A parameter used to create an authorization code.",
                                            "properties": {
                                                "Name": {
                                                    "description": "The name of the parameter. May not be updated.",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "The value of the parameter. May not be updated.",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Name",
                                                "Value"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "description": "Represents the model containing an authorization code used to unlock a feature in machines and EDT",
                                "properties": {
                                    "Code": {
                                        "description": "The code to enter to unlock a feature. Read only.",
                                        "type": "string"
                                    },
                                    "CreatedByUserID": {
                                        "description": "The ID of the user that created this authorization code. Read only.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "CreatedDate": {
                                        "description": "A timestamp of when this code was created. Read only.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "DataParameters": {
                                        "description": "The parameters and values contained as data in this authorization code. May not be updated.",
                                        "items": {
                                            "description": "A parameter used to create an authorization code.",
                                            "properties": {
                                                "Name": {
                                                    "description": "The name of the parameter. May not be updated.",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "The value of the parameter. May not be updated.",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Name",
                                                "Value"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "DefinitionID": {
                                        "description": "The id of the definition for this authorization code. May not be updated.",
                                        "type": "string"
                                    },
                                    "DeletedByUserID": {
                                        "description": "The ID of the user that deleted this authorization code. Read only.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "DeletedDate": {
                                        "description": "A timestamp of when this authorization code was deleted. Read only.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "ID": {
                                        "description": "The identifier for the authorization code. Read only.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "IsDeleted": {
                                        "description": "Indicates whether this code is deleted.",
                                        "type": "boolean"
                                    },
                                    "ValidationParameters": {
                                        "description": "The parameters and values used to validate this authorization code. May not be updated.",
                                        "items": {
                                            "description": "A parameter used to create an authorization code.",
                                            "properties": {
                                                "Name": {
                                                    "description": "The name of the parameter. May not be updated.",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "The value of the parameter. May not be updated.",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Name",
                                                "Value"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "description": "The model from which to generate an authorization code.",
                    "required": true
                }
            }
        },
        "/api/v2/AuthorizationCodes/{id}": {
            "delete": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "AuthorizationCodes_DeleteAuthorizationCode",
                "parameters": [
                    {
                        "description": "The id of the authorization code.",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Hide an authorization code.",
                "tags": [
                    "AuthorizationCodes"
                ]
            },
            "get": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "AuthorizationCodes_GetAuthorizationCode",
                "parameters": [
                    {
                        "description": "The id of the authorization code.",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Represents the model containing an authorization code used to unlock a feature in machines and EDT",
                                    "properties": {
                                        "Code": {
                                            "description": "The code to enter to unlock a feature. Read only.",
                                            "type": "string"
                                        },
                                        "CreatedByUserID": {
                                            "description": "The ID of the user that created this authorization code. Read only.",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "CreatedDate": {
                                            "description": "A timestamp of when this code was created. Read only.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "DataParameters": {
                                            "description": "The parameters and values contained as data in this authorization code. May not be updated.",
                                            "items": {
                                                "description": "A parameter used to create an authorization code.",
                                                "properties": {
                                                    "Name": {
                                                        "description": "The name of the parameter. May not be updated.",
                                                        "type": "string"
                                                    },
                                                    "Value": {
                                                        "description": "The value of the parameter. May not be updated.",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "Name",
                                                    "Value"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "DefinitionID": {
                                            "description": "The id of the definition for this authorization code. May not be updated.",
                                            "type": "string"
                                        },
                                        "DeletedByUserID": {
                                            "description": "The ID of the user that deleted this authorization code. Read only.",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "DeletedDate": {
                                            "description": "A timestamp of when this authorization code was deleted. Read only.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "ID": {
                                            "description": "The identifier for the authorization code. Read only.",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "IsDeleted": {
                                            "description": "Indicates whether this code is deleted.",
                                            "type": "boolean"
                                        },
                                        "ValidationParameters": {
                                            "description": "The parameters and values used to validate this authorization code. May not be updated.",
                                            "items": {
                                                "description": "A parameter used to create an authorization code.",
                                                "properties": {
                                                    "Name": {
                                                        "description": "The name of the parameter. May not be updated.",
                                                        "type": "string"
                                                    },
                                                    "Value": {
                                                        "description": "The value of the parameter. May not be updated.",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "Name",
                                                    "Value"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "description": "Represents the model containing an authorization code used to unlock a feature in machines and EDT",
                                    "properties": {
                                        "Code": {
                                            "description": "The code to enter to unlock a feature. Read only.",
                                            "type": "string"
                                        },
                                        "CreatedByUserID": {
                                            "description": "The ID of the user that created this authorization code. Read only.",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "CreatedDate": {
                                            "description": "A timestamp of when this code was created. Read only.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "DataParameters": {
                                            "description": "The parameters and values contained as data in this authorization code. May not be updated.",
                                            "items": {
                                                "description": "A parameter used to create an authorization code.",
                                                "properties": {
                                                    "Name": {
                                                        "description": "The name of the parameter. May not be updated.",
                                                        "type": "string"
                                                    },
                                                    "Value": {
                                                        "description": "The value of the parameter. May not be updated.",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "Name",
                                                    "Value"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "DefinitionID": {
                                            "description": "The id of the definition for this authorization code. May not be updated.",
                                            "type": "string"
                                        },
                                        "DeletedByUserID": {
                                            "description": "The ID of the user that deleted this authorization code. Read only.",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "DeletedDate": {
                                            "description": "A timestamp of when this authorization code was deleted. Read only.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "ID": {
                                            "description": "The identifier for the authorization code. Read only.",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "IsDeleted": {
                                            "description": "Indicates whether this code is deleted.",
                                            "type": "boolean"
                                        },
                                        "ValidationParameters": {
                                            "description": "The parameters and values used to validate this authorization code. May not be updated.",
                                            "items": {
                                                "description": "A parameter used to create an authorization code.",
                                                "properties": {
                                                    "Name": {
                                                        "description": "The name of the parameter. May not be updated.",
                                                        "type": "string"
                                                    },
                                                    "Value": {
                                                        "description": "The value of the parameter. May not be updated.",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "Name",
                                                    "Value"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "description": "Represents the model containing an authorization code used to unlock a feature in machines and EDT",
                                    "properties": {
                                        "Code": {
                                            "description": "The code to enter to unlock a feature. Read only.",
                                            "type": "string"
                                        },
                                        "CreatedByUserID": {
                                            "description": "The ID of the user that created this authorization code. Read only.",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "CreatedDate": {
                                            "description": "A timestamp of when this code was created. Read only.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "DataParameters": {
                                            "description": "The parameters and values contained as data in this authorization code. May not be updated.",
                                            "items": {
                                                "description": "A parameter used to create an authorization code.",
                                                "properties": {
                                                    "Name": {
                                                        "description": "The name of the parameter. May not be updated.",
                                                        "type": "string"
                                                    },
                                                    "Value": {
                                                        "description": "The value of the parameter. May not be updated.",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "Name",
                                                    "Value"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "DefinitionID": {
                                            "description": "The id of the definition for this authorization code. May not be updated.",
                                            "type": "string"
                                        },
                                        "DeletedByUserID": {
                                            "description": "The ID of the user that deleted this authorization code. Read only.",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "DeletedDate": {
                                            "description": "A timestamp of when this authorization code was deleted. Read only.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "ID": {
                                            "description": "The identifier for the authorization code. Read only.",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "IsDeleted": {
                                            "description": "Indicates whether this code is deleted.",
                                            "type": "boolean"
                                        },
                                        "ValidationParameters": {
                                            "description": "The parameters and values used to validate this authorization code. May not be updated.",
                                            "items": {
                                                "description": "A parameter used to create an authorization code.",
                                                "properties": {
                                                    "Name": {
                                                        "description": "The name of the parameter. May not be updated.",
                                                        "type": "string"
                                                    },
                                                    "Value": {
                                                        "description": "The value of the parameter. May not be updated.",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "Name",
                                                    "Value"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "description": "Represents the model containing an authorization code used to unlock a feature in machines and EDT",
                                    "properties": {
                                        "Code": {
                                            "description": "The code to enter to unlock a feature. Read only.",
                                            "type": "string"
                                        },
                                        "CreatedByUserID": {
                                            "description": "The ID of the user that created this authorization code. Read only.",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "CreatedDate": {
                                            "description": "A timestamp of when this code was created. Read only.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "DataParameters": {
                                            "description": "The parameters and values contained as data in this authorization code. May not be updated.",
                                            "items": {
                                                "description": "A parameter used to create an authorization code.",
                                                "properties": {
                                                    "Name": {
                                                        "description": "The name of the parameter. May not be updated.",
                                                        "type": "string"
                                                    },
                                                    "Value": {
                                                        "description": "The value of the parameter. May not be updated.",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "Name",
                                                    "Value"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "DefinitionID": {
                                            "description": "The id of the definition for this authorization code. May not be updated.",
                                            "type": "string"
                                        },
                                        "DeletedByUserID": {
                                            "description": "The ID of the user that deleted this authorization code. Read only.",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "DeletedDate": {
                                            "description": "A timestamp of when this authorization code was deleted. Read only.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "ID": {
                                            "description": "The identifier for the authorization code. Read only.",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "IsDeleted": {
                                            "description": "Indicates whether this code is deleted.",
                                            "type": "boolean"
                                        },
                                        "ValidationParameters": {
                                            "description": "The parameters and values used to validate this authorization code. May not be updated.",
                                            "items": {
                                                "description": "A parameter used to create an authorization code.",
                                                "properties": {
                                                    "Name": {
                                                        "description": "The name of the parameter. May not be updated.",
                                                        "type": "string"
                                                    },
                                                    "Value": {
                                                        "description": "The value of the parameter. May not be updated.",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "Name",
                                                    "Value"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get an authorization code by its ID.",
                "tags": [
                    "AuthorizationCodes"
                ]
            },
            "put": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "AuthorizationCodes_PutAuthorizationCode",
                "parameters": [
                    {
                        "description": "The id of the authorization code.",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Update an authorization code.",
                "tags": [
                    "AuthorizationCodes"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Represents the model containing an authorization code used to unlock a feature in machines and EDT",
                                "properties": {
                                    "Code": {
                                        "description": "The code to enter to unlock a feature. Read only.",
                                        "type": "string"
                                    },
                                    "CreatedByUserID": {
                                        "description": "The ID of the user that created this authorization code. Read only.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "CreatedDate": {
                                        "description": "A timestamp of when this code was created. Read only.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "DataParameters": {
                                        "description": "The parameters and values contained as data in this authorization code. May not be updated.",
                                        "items": {
                                            "description": "A parameter used to create an authorization code.",
                                            "properties": {
                                                "Name": {
                                                    "description": "The name of the parameter. May not be updated.",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "The value of the parameter. May not be updated.",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Name",
                                                "Value"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "DefinitionID": {
                                        "description": "The id of the definition for this authorization code. May not be updated.",
                                        "type": "string"
                                    },
                                    "DeletedByUserID": {
                                        "description": "The ID of the user that deleted this authorization code. Read only.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "DeletedDate": {
                                        "description": "A timestamp of when this authorization code was deleted. Read only.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "ID": {
                                        "description": "The identifier for the authorization code. Read only.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "IsDeleted": {
                                        "description": "Indicates whether this code is deleted.",
                                        "type": "boolean"
                                    },
                                    "ValidationParameters": {
                                        "description": "The parameters and values used to validate this authorization code. May not be updated.",
                                        "items": {
                                            "description": "A parameter used to create an authorization code.",
                                            "properties": {
                                                "Name": {
                                                    "description": "The name of the parameter. May not be updated.",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "The value of the parameter. May not be updated.",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Name",
                                                "Value"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "description": "Represents the model containing an authorization code used to unlock a feature in machines and EDT",
                                "properties": {
                                    "Code": {
                                        "description": "The code to enter to unlock a feature. Read only.",
                                        "type": "string"
                                    },
                                    "CreatedByUserID": {
                                        "description": "The ID of the user that created this authorization code. Read only.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "CreatedDate": {
                                        "description": "A timestamp of when this code was created. Read only.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "DataParameters": {
                                        "description": "The parameters and values contained as data in this authorization code. May not be updated.",
                                        "items": {
                                            "description": "A parameter used to create an authorization code.",
                                            "properties": {
                                                "Name": {
                                                    "description": "The name of the parameter. May not be updated.",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "The value of the parameter. May not be updated.",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Name",
                                                "Value"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "DefinitionID": {
                                        "description": "The id of the definition for this authorization code. May not be updated.",
                                        "type": "string"
                                    },
                                    "DeletedByUserID": {
                                        "description": "The ID of the user that deleted this authorization code. Read only.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "DeletedDate": {
                                        "description": "A timestamp of when this authorization code was deleted. Read only.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "ID": {
                                        "description": "The identifier for the authorization code. Read only.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "IsDeleted": {
                                        "description": "Indicates whether this code is deleted.",
                                        "type": "boolean"
                                    },
                                    "ValidationParameters": {
                                        "description": "The parameters and values used to validate this authorization code. May not be updated.",
                                        "items": {
                                            "description": "A parameter used to create an authorization code.",
                                            "properties": {
                                                "Name": {
                                                    "description": "The name of the parameter. May not be updated.",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "The value of the parameter. May not be updated.",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Name",
                                                "Value"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "description": "Represents the model containing an authorization code used to unlock a feature in machines and EDT",
                                "properties": {
                                    "Code": {
                                        "description": "The code to enter to unlock a feature. Read only.",
                                        "type": "string"
                                    },
                                    "CreatedByUserID": {
                                        "description": "The ID of the user that created this authorization code. Read only.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "CreatedDate": {
                                        "description": "A timestamp of when this code was created. Read only.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "DataParameters": {
                                        "description": "The parameters and values contained as data in this authorization code. May not be updated.",
                                        "items": {
                                            "description": "A parameter used to create an authorization code.",
                                            "properties": {
                                                "Name": {
                                                    "description": "The name of the parameter. May not be updated.",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "The value of the parameter. May not be updated.",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Name",
                                                "Value"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "DefinitionID": {
                                        "description": "The id of the definition for this authorization code. May not be updated.",
                                        "type": "string"
                                    },
                                    "DeletedByUserID": {
                                        "description": "The ID of the user that deleted this authorization code. Read only.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "DeletedDate": {
                                        "description": "A timestamp of when this authorization code was deleted. Read only.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "ID": {
                                        "description": "The identifier for the authorization code. Read only.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "IsDeleted": {
                                        "description": "Indicates whether this code is deleted.",
                                        "type": "boolean"
                                    },
                                    "ValidationParameters": {
                                        "description": "The parameters and values used to validate this authorization code. May not be updated.",
                                        "items": {
                                            "description": "A parameter used to create an authorization code.",
                                            "properties": {
                                                "Name": {
                                                    "description": "The name of the parameter. May not be updated.",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "The value of the parameter. May not be updated.",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Name",
                                                "Value"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "text/xml": {
                            "schema": {
                                "description": "Represents the model containing an authorization code used to unlock a feature in machines and EDT",
                                "properties": {
                                    "Code": {
                                        "description": "The code to enter to unlock a feature. Read only.",
                                        "type": "string"
                                    },
                                    "CreatedByUserID": {
                                        "description": "The ID of the user that created this authorization code. Read only.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "CreatedDate": {
                                        "description": "A timestamp of when this code was created. Read only.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "DataParameters": {
                                        "description": "The parameters and values contained as data in this authorization code. May not be updated.",
                                        "items": {
                                            "description": "A parameter used to create an authorization code.",
                                            "properties": {
                                                "Name": {
                                                    "description": "The name of the parameter. May not be updated.",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "The value of the parameter. May not be updated.",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Name",
                                                "Value"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "DefinitionID": {
                                        "description": "The id of the definition for this authorization code. May not be updated.",
                                        "type": "string"
                                    },
                                    "DeletedByUserID": {
                                        "description": "The ID of the user that deleted this authorization code. Read only.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "DeletedDate": {
                                        "description": "A timestamp of when this authorization code was deleted. Read only.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "ID": {
                                        "description": "The identifier for the authorization code. Read only.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "IsDeleted": {
                                        "description": "Indicates whether this code is deleted.",
                                        "type": "boolean"
                                    },
                                    "ValidationParameters": {
                                        "description": "The parameters and values used to validate this authorization code. May not be updated.",
                                        "items": {
                                            "description": "A parameter used to create an authorization code.",
                                            "properties": {
                                                "Name": {
                                                    "description": "The name of the parameter. May not be updated.",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "The value of the parameter. May not be updated.",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Name",
                                                "Value"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "description": "Represents the model containing an authorization code used to unlock a feature in machines and EDT",
                                "properties": {
                                    "Code": {
                                        "description": "The code to enter to unlock a feature. Read only.",
                                        "type": "string"
                                    },
                                    "CreatedByUserID": {
                                        "description": "The ID of the user that created this authorization code. Read only.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "CreatedDate": {
                                        "description": "A timestamp of when this code was created. Read only.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "DataParameters": {
                                        "description": "The parameters and values contained as data in this authorization code. May not be updated.",
                                        "items": {
                                            "description": "A parameter used to create an authorization code.",
                                            "properties": {
                                                "Name": {
                                                    "description": "The name of the parameter. May not be updated.",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "The value of the parameter. May not be updated.",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Name",
                                                "Value"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "DefinitionID": {
                                        "description": "The id of the definition for this authorization code. May not be updated.",
                                        "type": "string"
                                    },
                                    "DeletedByUserID": {
                                        "description": "The ID of the user that deleted this authorization code. Read only.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "DeletedDate": {
                                        "description": "A timestamp of when this authorization code was deleted. Read only.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "ID": {
                                        "description": "The identifier for the authorization code. Read only.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "IsDeleted": {
                                        "description": "Indicates whether this code is deleted.",
                                        "type": "boolean"
                                    },
                                    "ValidationParameters": {
                                        "description": "The parameters and values used to validate this authorization code. May not be updated.",
                                        "items": {
                                            "description": "A parameter used to create an authorization code.",
                                            "properties": {
                                                "Name": {
                                                    "description": "The name of the parameter. May not be updated.",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "The value of the parameter. May not be updated.",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Name",
                                                "Value"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "description": "The model from which to update an authorization code.",
                    "required": true
                }
            }
        },
        "/api/v2/Brands": {
            "get": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "Brands_Brands",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Gets a list of Brands.",
                "tags": [
                    "Brands"
                ]
            }
        },
        "/api/v2/Bundles": {
            "get": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "Bundles_GetBundles",
                "parameters": [
                    {
                        "description": "Optional. Filter by UpdateGroup ID.",
                        "in": "query",
                        "name": "UpdateGroupID",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Optional. Filter by active status.",
                        "in": "query",
                        "name": "Active",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "Optional. The page limit. The default page limit is 10.",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "Optional. The page offset. The default page offset is 0.",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "properties": {
                                                    "Active": {
                                                        "description": "Default Value: false. During the creation of the Bundle, this field must be false.",
                                                        "type": "boolean"
                                                    },
                                                    "BundleID": {
                                                        "description": "Read-Only.",
                                                        "type": "string"
                                                    },
                                                    "BundleNumber": {
                                                        "description": "The bundle number",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "Description": {
                                                        "description": "The Bundle description.",
                                                        "type": "string"
                                                    },
                                                    "UpdateGroupID": {
                                                        "description": "The update group this bundle belongs to.",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "Description",
                                                    "UpdateGroupID",
                                                    "BundleNumber"
                                                ],
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "properties": {
                                                    "Active": {
                                                        "description": "Default Value: false. During the creation of the Bundle, this field must be false.",
                                                        "type": "boolean"
                                                    },
                                                    "BundleID": {
                                                        "description": "Read-Only.",
                                                        "type": "string"
                                                    },
                                                    "BundleNumber": {
                                                        "description": "The bundle number",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "Description": {
                                                        "description": "The Bundle description.",
                                                        "type": "string"
                                                    },
                                                    "UpdateGroupID": {
                                                        "description": "The update group this bundle belongs to.",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "Description",
                                                    "UpdateGroupID",
                                                    "BundleNumber"
                                                ],
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get the list of bundles.",
                "tags": [
                    "Bundles"
                ]
            },
            "post": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "Bundles_PostBundle",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Add a Bundle to the Update System.",
                "tags": [
                    "Bundles"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Active": {
                                        "description": "Default Value: false. During the creation of the Bundle, this field must be false.",
                                        "type": "boolean"
                                    },
                                    "BundleID": {
                                        "description": "Read-Only.",
                                        "type": "string"
                                    },
                                    "BundleNumber": {
                                        "description": "The bundle number",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Description": {
                                        "description": "The Bundle description.",
                                        "type": "string"
                                    },
                                    "UpdateGroupID": {
                                        "description": "The update group this bundle belongs to.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Description",
                                    "UpdateGroupID",
                                    "BundleNumber"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "Active": {
                                        "description": "Default Value: false. During the creation of the Bundle, this field must be false.",
                                        "type": "boolean"
                                    },
                                    "BundleID": {
                                        "description": "Read-Only.",
                                        "type": "string"
                                    },
                                    "BundleNumber": {
                                        "description": "The bundle number",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Description": {
                                        "description": "The Bundle description.",
                                        "type": "string"
                                    },
                                    "UpdateGroupID": {
                                        "description": "The update group this bundle belongs to.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Description",
                                    "UpdateGroupID",
                                    "BundleNumber"
                                ],
                                "type": "object"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "properties": {
                                    "Active": {
                                        "description": "Default Value: false. During the creation of the Bundle, this field must be false.",
                                        "type": "boolean"
                                    },
                                    "BundleID": {
                                        "description": "Read-Only.",
                                        "type": "string"
                                    },
                                    "BundleNumber": {
                                        "description": "The bundle number",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Description": {
                                        "description": "The Bundle description.",
                                        "type": "string"
                                    },
                                    "UpdateGroupID": {
                                        "description": "The update group this bundle belongs to.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Description",
                                    "UpdateGroupID",
                                    "BundleNumber"
                                ],
                                "type": "object"
                            }
                        },
                        "text/xml": {
                            "schema": {
                                "properties": {
                                    "Active": {
                                        "description": "Default Value: false. During the creation of the Bundle, this field must be false.",
                                        "type": "boolean"
                                    },
                                    "BundleID": {
                                        "description": "Read-Only.",
                                        "type": "string"
                                    },
                                    "BundleNumber": {
                                        "description": "The bundle number",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Description": {
                                        "description": "The Bundle description.",
                                        "type": "string"
                                    },
                                    "UpdateGroupID": {
                                        "description": "The update group this bundle belongs to.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Description",
                                    "UpdateGroupID",
                                    "BundleNumber"
                                ],
                                "type": "object"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "Active": {
                                        "description": "Default Value: false. During the creation of the Bundle, this field must be false.",
                                        "type": "boolean"
                                    },
                                    "BundleID": {
                                        "description": "Read-Only.",
                                        "type": "string"
                                    },
                                    "BundleNumber": {
                                        "description": "The bundle number",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Description": {
                                        "description": "The Bundle description.",
                                        "type": "string"
                                    },
                                    "UpdateGroupID": {
                                        "description": "The update group this bundle belongs to.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Description",
                                    "UpdateGroupID",
                                    "BundleNumber"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The bundle to add",
                    "required": true
                }
            }
        },
        "/api/v2/Bundles/{ID}": {
            "delete": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "Bundles_DeleteBundle",
                "parameters": [
                    {
                        "description": "The Bundle ID to Delete",
                        "in": "path",
                        "name": "ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Delete a Bundle.",
                "tags": [
                    "Bundles"
                ]
            },
            "get": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "Bundles_GetBundle",
                "parameters": [
                    {
                        "description": "The Bundle ID",
                        "in": "path",
                        "name": "ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Active": {
                                            "description": "Default Value: false. During the creation of the Bundle, this field must be false.",
                                            "type": "boolean"
                                        },
                                        "BundleID": {
                                            "description": "Read-Only.",
                                            "type": "string"
                                        },
                                        "BundleNumber": {
                                            "description": "The bundle number",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Description": {
                                            "description": "The Bundle description.",
                                            "type": "string"
                                        },
                                        "UpdateGroupID": {
                                            "description": "The update group this bundle belongs to.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "Description",
                                        "UpdateGroupID",
                                        "BundleNumber"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "Active": {
                                            "description": "Default Value: false. During the creation of the Bundle, this field must be false.",
                                            "type": "boolean"
                                        },
                                        "BundleID": {
                                            "description": "Read-Only.",
                                            "type": "string"
                                        },
                                        "BundleNumber": {
                                            "description": "The bundle number",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Description": {
                                            "description": "The Bundle description.",
                                            "type": "string"
                                        },
                                        "UpdateGroupID": {
                                            "description": "The update group this bundle belongs to.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "Description",
                                        "UpdateGroupID",
                                        "BundleNumber"
                                    ],
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "Active": {
                                            "description": "Default Value: false. During the creation of the Bundle, this field must be false.",
                                            "type": "boolean"
                                        },
                                        "BundleID": {
                                            "description": "Read-Only.",
                                            "type": "string"
                                        },
                                        "BundleNumber": {
                                            "description": "The bundle number",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Description": {
                                            "description": "The Bundle description.",
                                            "type": "string"
                                        },
                                        "UpdateGroupID": {
                                            "description": "The update group this bundle belongs to.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "Description",
                                        "UpdateGroupID",
                                        "BundleNumber"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "Active": {
                                            "description": "Default Value: false. During the creation of the Bundle, this field must be false.",
                                            "type": "boolean"
                                        },
                                        "BundleID": {
                                            "description": "Read-Only.",
                                            "type": "string"
                                        },
                                        "BundleNumber": {
                                            "description": "The bundle number",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Description": {
                                            "description": "The Bundle description.",
                                            "type": "string"
                                        },
                                        "UpdateGroupID": {
                                            "description": "The update group this bundle belongs to.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "Description",
                                        "UpdateGroupID",
                                        "BundleNumber"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get a specific Bundle by ID.",
                "tags": [
                    "Bundles"
                ]
            },
            "put": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "Bundles_PutBundle",
                "parameters": [
                    {
                        "description": "The unique ID of the Bundle",
                        "in": "path",
                        "name": "ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Modify a Bundle in the Update System.",
                "tags": [
                    "Bundles"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Active": {
                                        "description": "Default Value: false. During the creation of the Bundle, this field must be false.",
                                        "type": "boolean"
                                    },
                                    "BundleID": {
                                        "description": "Read-Only.",
                                        "type": "string"
                                    },
                                    "BundleNumber": {
                                        "description": "The bundle number",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Description": {
                                        "description": "The Bundle description.",
                                        "type": "string"
                                    },
                                    "UpdateGroupID": {
                                        "description": "The update group this bundle belongs to.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Description",
                                    "UpdateGroupID",
                                    "BundleNumber"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "Active": {
                                        "description": "Default Value: false. During the creation of the Bundle, this field must be false.",
                                        "type": "boolean"
                                    },
                                    "BundleID": {
                                        "description": "Read-Only.",
                                        "type": "string"
                                    },
                                    "BundleNumber": {
                                        "description": "The bundle number",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Description": {
                                        "description": "The Bundle description.",
                                        "type": "string"
                                    },
                                    "UpdateGroupID": {
                                        "description": "The update group this bundle belongs to.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Description",
                                    "UpdateGroupID",
                                    "BundleNumber"
                                ],
                                "type": "object"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "properties": {
                                    "Active": {
                                        "description": "Default Value: false. During the creation of the Bundle, this field must be false.",
                                        "type": "boolean"
                                    },
                                    "BundleID": {
                                        "description": "Read-Only.",
                                        "type": "string"
                                    },
                                    "BundleNumber": {
                                        "description": "The bundle number",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Description": {
                                        "description": "The Bundle description.",
                                        "type": "string"
                                    },
                                    "UpdateGroupID": {
                                        "description": "The update group this bundle belongs to.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Description",
                                    "UpdateGroupID",
                                    "BundleNumber"
                                ],
                                "type": "object"
                            }
                        },
                        "text/xml": {
                            "schema": {
                                "properties": {
                                    "Active": {
                                        "description": "Default Value: false. During the creation of the Bundle, this field must be false.",
                                        "type": "boolean"
                                    },
                                    "BundleID": {
                                        "description": "Read-Only.",
                                        "type": "string"
                                    },
                                    "BundleNumber": {
                                        "description": "The bundle number",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Description": {
                                        "description": "The Bundle description.",
                                        "type": "string"
                                    },
                                    "UpdateGroupID": {
                                        "description": "The update group this bundle belongs to.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Description",
                                    "UpdateGroupID",
                                    "BundleNumber"
                                ],
                                "type": "object"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "Active": {
                                        "description": "Default Value: false. During the creation of the Bundle, this field must be false.",
                                        "type": "boolean"
                                    },
                                    "BundleID": {
                                        "description": "Read-Only.",
                                        "type": "string"
                                    },
                                    "BundleNumber": {
                                        "description": "The bundle number",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Description": {
                                        "description": "The Bundle description.",
                                        "type": "string"
                                    },
                                    "UpdateGroupID": {
                                        "description": "The update group this bundle belongs to.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Description",
                                    "UpdateGroupID",
                                    "BundleNumber"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The bundle to modify",
                    "required": true
                }
            }
        },
        "/api/v2/Clients": {
            "get": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "parameters": [
                    {
                        "description": "Optional. Filter clients by Tag. Wildcards are supported (*).",
                        "in": "query",
                        "name": "Tag",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Optional. The page limit. The default page limit is 10.",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "Optional. The page offset. The default page offset is 0.",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "properties": {
                                                    "ClientID": {
                                                        "description": "Read Only. The id of the client",
                                                        "type": "string"
                                                    },
                                                    "LastCheckin": {
                                                        "description": "Read Only. The time of the client's last checkin with the server.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "Tag": {
                                                        "description": "A description of the client that can be used for easy reference",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "properties": {
                                                    "ClientID": {
                                                        "description": "Read Only. The id of the client",
                                                        "type": "string"
                                                    },
                                                    "LastCheckin": {
                                                        "description": "Read Only. The time of the client's last checkin with the server.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "Tag": {
                                                        "description": "A description of the client that can be used for easy reference",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get a List of Clients in the Update System.",
                "tags": [
                    "Clients"
                ]
            }
        },
        "/api/v2/Clients/{ClientID}/CachedFiles": {
            "get": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "UpdateSystem_GetCachedFiles",
                "parameters": [
                    {
                        "description": "The ClientID of the Client",
                        "in": "path",
                        "name": "ClientID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Only Expired Files (true|false)",
                        "in": "query",
                        "name": "Expired",
                        "required": true,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get a list of Cached Files installed on the client Machine.",
                "tags": [
                    "UpdateSystem"
                ]
            }
        },
        "/api/v2/Clients/{ClientID}/PackageReports": {
            "get": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "parameters": [
                    {
                        "description": "The Client ID",
                        "in": "path",
                        "name": "ClientID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "Categories": {
                                                "description": "The package report's categories.",
                                                "items": {
                                                    "properties": {
                                                        "Values": {
                                                            "items": {
                                                                "properties": {
                                                                    "Key": {
                                                                        "description": "The attribute name",
                                                                        "type": "string"
                                                                    },
                                                                    "TimeStamp": {
                                                                        "description": "Read Only. The timestamp.",
                                                                        "format": "date-time",
                                                                        "type": "string"
                                                                    },
                                                                    "Value": {
                                                                        "description": "The value",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "Key"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "category": {
                                                            "description": "The category name",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "category"
                                                    ],
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "PackageDescription": {
                                                "description": "Read Only. The package description",
                                                "type": "string"
                                            },
                                            "PackageID": {
                                                "description": "The PackageID.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "Categories": {
                                                "description": "The package report's categories.",
                                                "items": {
                                                    "properties": {
                                                        "Values": {
                                                            "items": {
                                                                "properties": {
                                                                    "Key": {
                                                                        "description": "The attribute name",
                                                                        "type": "string"
                                                                    },
                                                                    "TimeStamp": {
                                                                        "description": "Read Only. The timestamp.",
                                                                        "format": "date-time",
                                                                        "type": "string"
                                                                    },
                                                                    "Value": {
                                                                        "description": "The value",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "Key"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "category": {
                                                            "description": "The category name",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "category"
                                                    ],
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "PackageDescription": {
                                                "description": "Read Only. The package description",
                                                "type": "string"
                                            },
                                            "PackageID": {
                                                "description": "The PackageID.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "Categories": {
                                                "description": "The package report's categories.",
                                                "items": {
                                                    "properties": {
                                                        "Values": {
                                                            "items": {
                                                                "properties": {
                                                                    "Key": {
                                                                        "description": "The attribute name",
                                                                        "type": "string"
                                                                    },
                                                                    "TimeStamp": {
                                                                        "description": "Read Only. The timestamp.",
                                                                        "format": "date-time",
                                                                        "type": "string"
                                                                    },
                                                                    "Value": {
                                                                        "description": "The value",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "Key"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "category": {
                                                            "description": "The category name",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "category"
                                                    ],
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "PackageDescription": {
                                                "description": "Read Only. The package description",
                                                "type": "string"
                                            },
                                            "PackageID": {
                                                "description": "The PackageID.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "Categories": {
                                                "description": "The package report's categories.",
                                                "items": {
                                                    "properties": {
                                                        "Values": {
                                                            "items": {
                                                                "properties": {
                                                                    "Key": {
                                                                        "description": "The attribute name",
                                                                        "type": "string"
                                                                    },
                                                                    "TimeStamp": {
                                                                        "description": "Read Only. The timestamp.",
                                                                        "format": "date-time",
                                                                        "type": "string"
                                                                    },
                                                                    "Value": {
                                                                        "description": "The value",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "Key"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "category": {
                                                            "description": "The category name",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "category"
                                                    ],
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "PackageDescription": {
                                                "description": "Read Only. The package description",
                                                "type": "string"
                                            },
                                            "PackageID": {
                                                "description": "The PackageID.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get the package reports for a client.",
                "tags": [
                    "PackageReports"
                ]
            },
            "put": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "parameters": [
                    {
                        "description": "The Client ID",
                        "in": "path",
                        "name": "ClientID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Submit a package report",
                "tags": [
                    "PackageReports"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Categories": {
                                        "description": "The package report's categories.",
                                        "items": {
                                            "properties": {
                                                "Values": {
                                                    "items": {
                                                        "properties": {
                                                            "Key": {
                                                                "description": "The attribute name",
                                                                "type": "string"
                                                            },
                                                            "TimeStamp": {
                                                                "description": "Read Only. The timestamp.",
                                                                "format": "date-time",
                                                                "type": "string"
                                                            },
                                                            "Value": {
                                                                "description": "The value",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "Key"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "category": {
                                                    "description": "The category name",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "category"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "PackageDescription": {
                                        "description": "Read Only. The package description",
                                        "type": "string"
                                    },
                                    "PackageID": {
                                        "description": "The PackageID.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "Categories": {
                                        "description": "The package report's categories.",
                                        "items": {
                                            "properties": {
                                                "Values": {
                                                    "items": {
                                                        "properties": {
                                                            "Key": {
                                                                "description": "The attribute name",
                                                                "type": "string"
                                                            },
                                                            "TimeStamp": {
                                                                "description": "Read Only. The timestamp.",
                                                                "format": "date-time",
                                                                "type": "string"
                                                            },
                                                            "Value": {
                                                                "description": "The value",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "Key"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "category": {
                                                    "description": "The category name",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "category"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "PackageDescription": {
                                        "description": "Read Only. The package description",
                                        "type": "string"
                                    },
                                    "PackageID": {
                                        "description": "The PackageID.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "properties": {
                                    "Categories": {
                                        "description": "The package report's categories.",
                                        "items": {
                                            "properties": {
                                                "Values": {
                                                    "items": {
                                                        "properties": {
                                                            "Key": {
                                                                "description": "The attribute name",
                                                                "type": "string"
                                                            },
                                                            "TimeStamp": {
                                                                "description": "Read Only. The timestamp.",
                                                                "format": "date-time",
                                                                "type": "string"
                                                            },
                                                            "Value": {
                                                                "description": "The value",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "Key"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "category": {
                                                    "description": "The category name",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "category"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "PackageDescription": {
                                        "description": "Read Only. The package description",
                                        "type": "string"
                                    },
                                    "PackageID": {
                                        "description": "The PackageID.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "text/xml": {
                            "schema": {
                                "properties": {
                                    "Categories": {
                                        "description": "The package report's categories.",
                                        "items": {
                                            "properties": {
                                                "Values": {
                                                    "items": {
                                                        "properties": {
                                                            "Key": {
                                                                "description": "The attribute name",
                                                                "type": "string"
                                                            },
                                                            "TimeStamp": {
                                                                "description": "Read Only. The timestamp.",
                                                                "format": "date-time",
                                                                "type": "string"
                                                            },
                                                            "Value": {
                                                                "description": "The value",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "Key"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "category": {
                                                    "description": "The category name",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "category"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "PackageDescription": {
                                        "description": "Read Only. The package description",
                                        "type": "string"
                                    },
                                    "PackageID": {
                                        "description": "The PackageID.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "Categories": {
                                        "description": "The package report's categories.",
                                        "items": {
                                            "properties": {
                                                "Values": {
                                                    "items": {
                                                        "properties": {
                                                            "Key": {
                                                                "description": "The attribute name",
                                                                "type": "string"
                                                            },
                                                            "TimeStamp": {
                                                                "description": "Read Only. The timestamp.",
                                                                "format": "date-time",
                                                                "type": "string"
                                                            },
                                                            "Value": {
                                                                "description": "The value",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "Key"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "category": {
                                                    "description": "The category name",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "category"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "PackageDescription": {
                                        "description": "Read Only. The package description",
                                        "type": "string"
                                    },
                                    "PackageID": {
                                        "description": "The PackageID.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "description": "The Package Report",
                    "required": true
                }
            }
        },
        "/api/v2/Clients/{ClientID}/PackageReports/Batch": {
            "put": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "PackageReports_Batch",
                "parameters": [
                    {
                        "description": "The Client ID",
                        "in": "path",
                        "name": "ClientID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Submit a batch of package reports",
                "tags": [
                    "PackageReports"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "properties": {
                                        "Categories": {
                                            "description": "The package report's categories.",
                                            "items": {
                                                "properties": {
                                                    "Values": {
                                                        "items": {
                                                            "properties": {
                                                                "Key": {
                                                                    "description": "The attribute name",
                                                                    "type": "string"
                                                                },
                                                                "TimeStamp": {
                                                                    "description": "Read Only. The timestamp.",
                                                                    "format": "date-time",
                                                                    "type": "string"
                                                                },
                                                                "Value": {
                                                                    "description": "The value",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "Key"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "category": {
                                                        "description": "The category name",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "category"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "PackageDescription": {
                                            "description": "Read Only. The package description",
                                            "type": "string"
                                        },
                                        "PackageID": {
                                            "description": "The PackageID.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "items": {
                                    "properties": {
                                        "Categories": {
                                            "description": "The package report's categories.",
                                            "items": {
                                                "properties": {
                                                    "Values": {
                                                        "items": {
                                                            "properties": {
                                                                "Key": {
                                                                    "description": "The attribute name",
                                                                    "type": "string"
                                                                },
                                                                "TimeStamp": {
                                                                    "description": "Read Only. The timestamp.",
                                                                    "format": "date-time",
                                                                    "type": "string"
                                                                },
                                                                "Value": {
                                                                    "description": "The value",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "Key"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "category": {
                                                        "description": "The category name",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "category"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "PackageDescription": {
                                            "description": "Read Only. The package description",
                                            "type": "string"
                                        },
                                        "PackageID": {
                                            "description": "The PackageID.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "items": {
                                    "properties": {
                                        "Categories": {
                                            "description": "The package report's categories.",
                                            "items": {
                                                "properties": {
                                                    "Values": {
                                                        "items": {
                                                            "properties": {
                                                                "Key": {
                                                                    "description": "The attribute name",
                                                                    "type": "string"
                                                                },
                                                                "TimeStamp": {
                                                                    "description": "Read Only. The timestamp.",
                                                                    "format": "date-time",
                                                                    "type": "string"
                                                                },
                                                                "Value": {
                                                                    "description": "The value",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "Key"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "category": {
                                                        "description": "The category name",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "category"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "PackageDescription": {
                                            "description": "Read Only. The package description",
                                            "type": "string"
                                        },
                                        "PackageID": {
                                            "description": "The PackageID.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "text/xml": {
                            "schema": {
                                "items": {
                                    "properties": {
                                        "Categories": {
                                            "description": "The package report's categories.",
                                            "items": {
                                                "properties": {
                                                    "Values": {
                                                        "items": {
                                                            "properties": {
                                                                "Key": {
                                                                    "description": "The attribute name",
                                                                    "type": "string"
                                                                },
                                                                "TimeStamp": {
                                                                    "description": "Read Only. The timestamp.",
                                                                    "format": "date-time",
                                                                    "type": "string"
                                                                },
                                                                "Value": {
                                                                    "description": "The value",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "Key"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "category": {
                                                        "description": "The category name",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "category"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "PackageDescription": {
                                            "description": "Read Only. The package description",
                                            "type": "string"
                                        },
                                        "PackageID": {
                                            "description": "The PackageID.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "items": {
                                    "properties": {
                                        "Categories": {
                                            "description": "The package report's categories.",
                                            "items": {
                                                "properties": {
                                                    "Values": {
                                                        "items": {
                                                            "properties": {
                                                                "Key": {
                                                                    "description": "The attribute name",
                                                                    "type": "string"
                                                                },
                                                                "TimeStamp": {
                                                                    "description": "Read Only. The timestamp.",
                                                                    "format": "date-time",
                                                                    "type": "string"
                                                                },
                                                                "Value": {
                                                                    "description": "The value",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "Key"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "category": {
                                                        "description": "The category name",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "category"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "PackageDescription": {
                                            "description": "Read Only. The package description",
                                            "type": "string"
                                        },
                                        "PackageID": {
                                            "description": "The PackageID.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        }
                    },
                    "description": "The Package Reports",
                    "required": true
                }
            }
        },
        "/api/v2/Clients/{ID}": {
            "get": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "parameters": [
                    {
                        "description": "The Client ID",
                        "in": "path",
                        "name": "ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "ClientID": {
                                            "description": "Read Only. The id of the client",
                                            "type": "string"
                                        },
                                        "LastCheckin": {
                                            "description": "Read Only. The time of the client's last checkin with the server.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "Tag": {
                                            "description": "A description of the client that can be used for easy reference",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "ClientID": {
                                            "description": "Read Only. The id of the client",
                                            "type": "string"
                                        },
                                        "LastCheckin": {
                                            "description": "Read Only. The time of the client's last checkin with the server.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "Tag": {
                                            "description": "A description of the client that can be used for easy reference",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "ClientID": {
                                            "description": "Read Only. The id of the client",
                                            "type": "string"
                                        },
                                        "LastCheckin": {
                                            "description": "Read Only. The time of the client's last checkin with the server.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "Tag": {
                                            "description": "A description of the client that can be used for easy reference",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "ClientID": {
                                            "description": "Read Only. The id of the client",
                                            "type": "string"
                                        },
                                        "LastCheckin": {
                                            "description": "Read Only. The time of the client's last checkin with the server.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "Tag": {
                                            "description": "A description of the client that can be used for easy reference",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get a Client in the Update System.",
                "tags": [
                    "Clients"
                ]
            },
            "put": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "Clients_Put",
                "parameters": [
                    {
                        "description": "The Client ID",
                        "in": "path",
                        "name": "ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Update a Client.",
                "tags": [
                    "Clients"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ClientID": {
                                        "description": "Read Only. The id of the client",
                                        "type": "string"
                                    },
                                    "LastCheckin": {
                                        "description": "Read Only. The time of the client's last checkin with the server.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Tag": {
                                        "description": "A description of the client that can be used for easy reference",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "ClientID": {
                                        "description": "Read Only. The id of the client",
                                        "type": "string"
                                    },
                                    "LastCheckin": {
                                        "description": "Read Only. The time of the client's last checkin with the server.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Tag": {
                                        "description": "A description of the client that can be used for easy reference",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "properties": {
                                    "ClientID": {
                                        "description": "Read Only. The id of the client",
                                        "type": "string"
                                    },
                                    "LastCheckin": {
                                        "description": "Read Only. The time of the client's last checkin with the server.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Tag": {
                                        "description": "A description of the client that can be used for easy reference",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "text/xml": {
                            "schema": {
                                "properties": {
                                    "ClientID": {
                                        "description": "Read Only. The id of the client",
                                        "type": "string"
                                    },
                                    "LastCheckin": {
                                        "description": "Read Only. The time of the client's last checkin with the server.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Tag": {
                                        "description": "A description of the client that can be used for easy reference",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "ClientID": {
                                        "description": "Read Only. The id of the client",
                                        "type": "string"
                                    },
                                    "LastCheckin": {
                                        "description": "Read Only. The time of the client's last checkin with the server.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Tag": {
                                        "description": "A description of the client that can be used for easy reference",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "description": "Updated Client Object.",
                    "required": true
                }
            }
        },
        "/api/v2/Clients/{ID}/AvailableUpdateGroupSubscriptions": {
            "get": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "Clients_GetAvailableSubscriptions",
                "parameters": [
                    {
                        "description": "The Client ID",
                        "in": "path",
                        "name": "ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Optional. Filter by Update Group.",
                        "in": "query",
                        "name": "UpdateGroupID",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Optional. The page limit. The default page limit is 10.",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "Optional. The page offset. The default page offset is 0.",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "properties": {
                                                    "AvailableSubscriptions": {
                                                        "description": "The available subscriptions for this update group.",
                                                        "items": {
                                                            "properties": {
                                                                "PackageType": {
                                                                    "description": "The PackageType this subscription is for.",
                                                                    "properties": {
                                                                        "Attribute": {
                                                                            "description": "The inventory attribute (from the InventoryPackage) used to determine what version of this package type is installed.",
                                                                            "type": "string"
                                                                        },
                                                                        "Category": {
                                                                            "description": "The inventory category (from the InventoryPackage) used to determine what version of this package type is installed.",
                                                                            "type": "string"
                                                                        },
                                                                        "Description": {
                                                                            "description": "The description of the package type",
                                                                            "type": "string"
                                                                        },
                                                                        "Icon": {
                                                                            "description": "Optional.  The icon to use for the PackageType, in base 64",
                                                                            "type": "string"
                                                                        },
                                                                        "InventoryFrequency": {
                                                                            "description": "The number of minutes to wait before requesting another inventory.  The default value is 1440 (24 hours).",
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        },
                                                                        "InventoryPackage": {
                                                                            "description": "The inventory package used to determine what version of this package type is installed.",
                                                                            "type": "string"
                                                                        },
                                                                        "LocalizedDescription": {
                                                                            "description": "Optional. The StringID used to localize the description of the PackageType",
                                                                            "type": "string"
                                                                        },
                                                                        "LocalizedName": {
                                                                            "description": "Optional. The StringID used to localize the name of the PackageType",
                                                                            "type": "string"
                                                                        },
                                                                        "MaxDeltaPackages": {
                                                                            "description": "The maximum number of \"chained\" delta packages to use when updating the client",
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        },
                                                                        "PackageTypeID": {
                                                                            "description": "Read Only. The package type id.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "Description"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "SubscriptionType": {
                                                                    "description": "The type of subscription supported.",
                                                                    "enum": [
                                                                        "Required",
                                                                        "IncludeByDefault",
                                                                        "ExcludeByDefault"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "UpdateGroup": {
                                                        "description": "The Update Group this subscription is for.",
                                                        "properties": {
                                                            "Description": {
                                                                "description": "The description of the update group",
                                                                "type": "string"
                                                            },
                                                            "ID": {
                                                                "type": "string"
                                                            },
                                                            "InventoryFrequency": {
                                                                "description": "The time in minutes between inventory checks. Default value is 1440 minutes (one day).",
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "InventoryPackage": {
                                                                "description": "The Package ID of the package used for inventory",
                                                                "type": "string"
                                                            },
                                                            "LocalizedDescription": {
                                                                "description": "Optional. The StringID used to localize the description of the update group",
                                                                "type": "string"
                                                            },
                                                            "LocalizedName": {
                                                                "description": "Optional. The StringID used to localize the name of the update group",
                                                                "type": "string"
                                                            },
                                                            "ReportField": {
                                                                "description": "A field to return in the status report for this update group.\r\n            Specify the field with the format [Label]: {[InventoryPackageID].[Category].[Attribute]}.  (i.e. example: {bec778ca-278d-424a-867a-4653a1a19e86.MyCategory.MyAttribute})",
                                                                "type": "string"
                                                            },
                                                            "UpdateType": {
                                                                "description": "The update type name",
                                                                "type": "string"
                                                            },
                                                            "ValidatingField": {
                                                                "description": "A field used for validation in the status report for this update group.\r\n            Specify the field with the format [Label]: {[InventoryPackageID].[Category].[Attribute]}.  (i.e. example: {bec778ca-278d-424a-867a-4653a1a19e86.MyCategory.MyAttribute})",
                                                                "type": "string"
                                                            },
                                                            "ValueToValidate": {
                                                                "description": "The value to validate the ValidationField against.",
                                                                "type": "string"
                                                            },
                                                            "Version": {
                                                                "description": "The version of the UpdateGroup, this value is incremented with each modification to a related Bundle or PackageType",
                                                                "format": "byte",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "Description",
                                                            "UpdateType"
                                                        ],
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "properties": {
                                                    "AvailableSubscriptions": {
                                                        "description": "The available subscriptions for this update group.",
                                                        "items": {
                                                            "properties": {
                                                                "PackageType": {
                                                                    "description": "The PackageType this subscription is for.",
                                                                    "properties": {
                                                                        "Attribute": {
                                                                            "description": "The inventory attribute (from the InventoryPackage) used to determine what version of this package type is installed.",
                                                                            "type": "string"
                                                                        },
                                                                        "Category": {
                                                                            "description": "The inventory category (from the InventoryPackage) used to determine what version of this package type is installed.",
                                                                            "type": "string"
                                                                        },
                                                                        "Description": {
                                                                            "description": "The description of the package type",
                                                                            "type": "string"
                                                                        },
                                                                        "Icon": {
                                                                            "description": "Optional.  The icon to use for the PackageType, in base 64",
                                                                            "type": "string"
                                                                        },
                                                                        "InventoryFrequency": {
                                                                            "description": "The number of minutes to wait before requesting another inventory.  The default value is 1440 (24 hours).",
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        },
                                                                        "InventoryPackage": {
                                                                            "description": "The inventory package used to determine what version of this package type is installed.",
                                                                            "type": "string"
                                                                        },
                                                                        "LocalizedDescription": {
                                                                            "description": "Optional. The StringID used to localize the description of the PackageType",
                                                                            "type": "string"
                                                                        },
                                                                        "LocalizedName": {
                                                                            "description": "Optional. The StringID used to localize the name of the PackageType",
                                                                            "type": "string"
                                                                        },
                                                                        "MaxDeltaPackages": {
                                                                            "description": "The maximum number of \"chained\" delta packages to use when updating the client",
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        },
                                                                        "PackageTypeID": {
                                                                            "description": "Read Only. The package type id.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "Description"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "SubscriptionType": {
                                                                    "description": "The type of subscription supported.",
                                                                    "enum": [
                                                                        "Required",
                                                                        "IncludeByDefault",
                                                                        "ExcludeByDefault"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "UpdateGroup": {
                                                        "description": "The Update Group this subscription is for.",
                                                        "properties": {
                                                            "Description": {
                                                                "description": "The description of the update group",
                                                                "type": "string"
                                                            },
                                                            "ID": {
                                                                "type": "string"
                                                            },
                                                            "InventoryFrequency": {
                                                                "description": "The time in minutes between inventory checks. Default value is 1440 minutes (one day).",
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "InventoryPackage": {
                                                                "description": "The Package ID of the package used for inventory",
                                                                "type": "string"
                                                            },
                                                            "LocalizedDescription": {
                                                                "description": "Optional. The StringID used to localize the description of the update group",
                                                                "type": "string"
                                                            },
                                                            "LocalizedName": {
                                                                "description": "Optional. The StringID used to localize the name of the update group",
                                                                "type": "string"
                                                            },
                                                            "ReportField": {
                                                                "description": "A field to return in the status report for this update group.\r\n            Specify the field with the format [Label]: {[InventoryPackageID].[Category].[Attribute]}.  (i.e. example: {bec778ca-278d-424a-867a-4653a1a19e86.MyCategory.MyAttribute})",
                                                                "type": "string"
                                                            },
                                                            "UpdateType": {
                                                                "description": "The update type name",
                                                                "type": "string"
                                                            },
                                                            "ValidatingField": {
                                                                "description": "A field used for validation in the status report for this update group.\r\n            Specify the field with the format [Label]: {[InventoryPackageID].[Category].[Attribute]}.  (i.e. example: {bec778ca-278d-424a-867a-4653a1a19e86.MyCategory.MyAttribute})",
                                                                "type": "string"
                                                            },
                                                            "ValueToValidate": {
                                                                "description": "The value to validate the ValidationField against.",
                                                                "type": "string"
                                                            },
                                                            "Version": {
                                                                "description": "The version of the UpdateGroup, this value is incremented with each modification to a related Bundle or PackageType",
                                                                "format": "byte",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "Description",
                                                            "UpdateType"
                                                        ],
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get a Client's Available Update Group Subscriptions",
                "tags": [
                    "Clients"
                ]
            }
        },
        "/api/v2/Clients/{ID}/UpdateGroupSubscriptions": {
            "get": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "Clients_GetSubscriptions",
                "parameters": [
                    {
                        "description": "The Client ID",
                        "in": "path",
                        "name": "ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Optional. Filter by Update Group.",
                        "in": "query",
                        "name": "UpdateGroupID",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Optional. The page limit. The default page limit is 10.",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "Optional. The page offset. The default page offset is 0.",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "properties": {
                                                    "ClientID": {
                                                        "description": "The ClientID.",
                                                        "type": "string"
                                                    },
                                                    "Include": {
                                                        "description": "True to receive content of type indicated by PackageTypeID.",
                                                        "type": "boolean"
                                                    },
                                                    "PackageTypeID": {
                                                        "description": "The PackageType to set subscription status for",
                                                        "type": "string"
                                                    },
                                                    "UpdateGroupID": {
                                                        "description": "The Update Group this subscription is relevant for.",
                                                        "type": "string"
                                                    },
                                                    "UpdateGroupSubscriptionID": {
                                                        "description": "The Update Group Subscription ID.  This ID will be automatically assigned when creating an Update Group Subscription.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    }
                                                },
                                                "required": [
                                                    "UpdateGroupID",
                                                    "PackageTypeID",
                                                    "ClientID",
                                                    "Include"
                                                ],
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "properties": {
                                                    "ClientID": {
                                                        "description": "The ClientID.",
                                                        "type": "string"
                                                    },
                                                    "Include": {
                                                        "description": "True to receive content of type indicated by PackageTypeID.",
                                                        "type": "boolean"
                                                    },
                                                    "PackageTypeID": {
                                                        "description": "The PackageType to set subscription status for",
                                                        "type": "string"
                                                    },
                                                    "UpdateGroupID": {
                                                        "description": "The Update Group this subscription is relevant for.",
                                                        "type": "string"
                                                    },
                                                    "UpdateGroupSubscriptionID": {
                                                        "description": "The Update Group Subscription ID.  This ID will be automatically assigned when creating an Update Group Subscription.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    }
                                                },
                                                "required": [
                                                    "UpdateGroupID",
                                                    "PackageTypeID",
                                                    "ClientID",
                                                    "Include"
                                                ],
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get a Client's Current Update Group Subscriptions",
                "tags": [
                    "Clients"
                ]
            }
        },
        "/api/v2/ContentDefinitions": {
            "get": {
                "deprecated": false,
                "description": "Gets a collection of ContentDefinitions. When successful, the response is a PagedResponse of ContentDefinitions.\r\n            If unsuccessful, an appropriate ApiError is returned.",
                "operationId": "ContentDefinitions_GetContentDefinitions",
                "parameters": [
                    {
                        "description": "Optional. The page limit.  If not specified, the default page limit is 10.",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "Optional. The page offset.  If not specified, the default page offset is 0.",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "Optional. Filter by UserID.",
                        "in": "query",
                        "name": "userID",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "properties": {
                                                    "ContentDefinitionID": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "Description": {
                                                        "type": "string"
                                                    },
                                                    "Name": {
                                                        "type": "string"
                                                    },
                                                    "PackageTypeID": {
                                                        "type": "string"
                                                    },
                                                    "TypeID": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "properties": {
                                                    "ContentDefinitionID": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "Description": {
                                                        "type": "string"
                                                    },
                                                    "Name": {
                                                        "type": "string"
                                                    },
                                                    "PackageTypeID": {
                                                        "type": "string"
                                                    },
                                                    "TypeID": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get ContentDefinitions",
                "tags": [
                    "ContentDefinitions"
                ]
            },
            "post": {
                "deprecated": false,
                "description": "Creates a ContentDefinition.  The body of the POST is the ContentDefinition to create.\r\n            The ContentDefinitionID will be assigned on creation of the Job.  When successful, the response\r\n            is the JobID.  If unsuccessful, an appropriate ApiError is returned.",
                "operationId": "ContentDefinitions_PostContentDefinition",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Create a ContentDefinition",
                "tags": [
                    "ContentDefinitions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ContentDefinitionID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Description": {
                                        "type": "string"
                                    },
                                    "Name": {
                                        "type": "string"
                                    },
                                    "PackageTypeID": {
                                        "type": "string"
                                    },
                                    "TypeID": {
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "ContentDefinitionID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Description": {
                                        "type": "string"
                                    },
                                    "Name": {
                                        "type": "string"
                                    },
                                    "PackageTypeID": {
                                        "type": "string"
                                    },
                                    "TypeID": {
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "properties": {
                                    "ContentDefinitionID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Description": {
                                        "type": "string"
                                    },
                                    "Name": {
                                        "type": "string"
                                    },
                                    "PackageTypeID": {
                                        "type": "string"
                                    },
                                    "TypeID": {
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "text/xml": {
                            "schema": {
                                "properties": {
                                    "ContentDefinitionID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Description": {
                                        "type": "string"
                                    },
                                    "Name": {
                                        "type": "string"
                                    },
                                    "PackageTypeID": {
                                        "type": "string"
                                    },
                                    "TypeID": {
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "ContentDefinitionID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Description": {
                                        "type": "string"
                                    },
                                    "Name": {
                                        "type": "string"
                                    },
                                    "PackageTypeID": {
                                        "type": "string"
                                    },
                                    "TypeID": {
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "description": "The ContentDefinition to create.",
                    "required": true
                }
            }
        },
        "/api/v2/ContentDefinitions/{contentDefinitionID}": {
            "delete": {
                "deprecated": false,
                "description": "Deletes an ContentDefinition. When successful, the response is empty.  If unsuccessful, an appropriate\r\n            ApiError is returned.",
                "operationId": "ContentDefinitions_DeleteContentDefinition",
                "parameters": [
                    {
                        "description": "The ID of the ContentDefinition to delete",
                        "in": "path",
                        "name": "contentDefinitionID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Delete a ContentDefinition",
                "tags": [
                    "ContentDefinitions"
                ]
            },
            "get": {
                "deprecated": false,
                "description": "Gets a ContentDefinition by ID. When successful, the response is the requested ContentDefinition.\r\n            If unsuccessful, an appropriate ApiError is returned.",
                "operationId": "ContentDefinitions_GetContentDefinition",
                "parameters": [
                    {
                        "description": "The ID of the ContentDefinition to get.",
                        "in": "path",
                        "name": "contentDefinitionID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "ContentDefinitionID": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Description": {
                                            "type": "string"
                                        },
                                        "Name": {
                                            "type": "string"
                                        },
                                        "PackageTypeID": {
                                            "type": "string"
                                        },
                                        "TypeID": {
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "ContentDefinitionID": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Description": {
                                            "type": "string"
                                        },
                                        "Name": {
                                            "type": "string"
                                        },
                                        "PackageTypeID": {
                                            "type": "string"
                                        },
                                        "TypeID": {
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "ContentDefinitionID": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Description": {
                                            "type": "string"
                                        },
                                        "Name": {
                                            "type": "string"
                                        },
                                        "PackageTypeID": {
                                            "type": "string"
                                        },
                                        "TypeID": {
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "ContentDefinitionID": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Description": {
                                            "type": "string"
                                        },
                                        "Name": {
                                            "type": "string"
                                        },
                                        "PackageTypeID": {
                                            "type": "string"
                                        },
                                        "TypeID": {
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get a ContentDefinition by ID",
                "tags": [
                    "ContentDefinitions"
                ]
            },
            "put": {
                "deprecated": false,
                "description": "Updates a ContentDefinition.  The body of the PUT is the updated ContentDefinition.  \r\n            When successful, the response is empty.  If unsuccessful, an appropriate ApiError is returned.",
                "operationId": "ContentDefinitions_PutContentDefinition",
                "parameters": [
                    {
                        "description": "The ID of the ContentDefinition to update",
                        "in": "path",
                        "name": "contentDefinitionID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Update a ContentDefinition",
                "tags": [
                    "ContentDefinitions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ContentDefinitionID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Description": {
                                        "type": "string"
                                    },
                                    "Name": {
                                        "type": "string"
                                    },
                                    "PackageTypeID": {
                                        "type": "string"
                                    },
                                    "TypeID": {
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "ContentDefinitionID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Description": {
                                        "type": "string"
                                    },
                                    "Name": {
                                        "type": "string"
                                    },
                                    "PackageTypeID": {
                                        "type": "string"
                                    },
                                    "TypeID": {
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "properties": {
                                    "ContentDefinitionID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Description": {
                                        "type": "string"
                                    },
                                    "Name": {
                                        "type": "string"
                                    },
                                    "PackageTypeID": {
                                        "type": "string"
                                    },
                                    "TypeID": {
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "text/xml": {
                            "schema": {
                                "properties": {
                                    "ContentDefinitionID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Description": {
                                        "type": "string"
                                    },
                                    "Name": {
                                        "type": "string"
                                    },
                                    "PackageTypeID": {
                                        "type": "string"
                                    },
                                    "TypeID": {
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "ContentDefinitionID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Description": {
                                        "type": "string"
                                    },
                                    "Name": {
                                        "type": "string"
                                    },
                                    "PackageTypeID": {
                                        "type": "string"
                                    },
                                    "TypeID": {
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "description": "The updated ContentDefinition",
                    "required": true
                }
            }
        },
        "/api/v2/ContentReleases": {
            "get": {
                "deprecated": false,
                "description": "Gets a collection of ContentReleaseVersion. When successful, the response is a PagedResponse of ContentReleaseVersion.\r\n            If unsuccessful, an appropriate ApiError is returned.",
                "parameters": [
                    {
                        "description": "Optional. The page limit.  If not specified, the default page limit is 10.",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "Optional. The page offset.  If not specified, the default page offset is 0.",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "Optional. Filter by deleted.",
                        "in": "query",
                        "name": "deleted",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "Optional. Filter by releaseID.",
                        "in": "query",
                        "name": "releaseID",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "Optional. Filter by UserID.",
                        "in": "query",
                        "name": "userId",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "Optional. Filter by ContentDefinitionID.",
                        "in": "query",
                        "name": "contentDefinitionID",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "Optional. Filter by Version.",
                        "in": "query",
                        "name": "version",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "properties": {
                                                    "ContentDefinitionID": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "ContentReleaseID": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "Deleted": {
                                                        "type": "boolean"
                                                    },
                                                    "PublisherUserID": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "ReleaseID": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "TestReportUrl": {
                                                        "type": "string"
                                                    },
                                                    "UpdatedDate": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "Version": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "properties": {
                                                    "ContentDefinitionID": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "ContentReleaseID": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "Deleted": {
                                                        "type": "boolean"
                                                    },
                                                    "PublisherUserID": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "ReleaseID": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "TestReportUrl": {
                                                        "type": "string"
                                                    },
                                                    "UpdatedDate": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "Version": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get ContentReleaseVersion",
                "tags": [
                    "ContentRelease"
                ]
            },
            "post": {
                "deprecated": false,
                "description": "Creates a ContentReleaseVersion.  The body of the POST is the ContentReleaseVersion to create.\r\n            The ContentReleaseId will be assigned on creation of the Job.  When successful, the response\r\n            is the contentReleaseId.  If unsuccessful, an appropriate ApiError is returned.",
                "operationId": "ContentRelease_PostContentRelease",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Create a ContentReleaseVersion",
                "tags": [
                    "ContentRelease"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ContentDefinitionID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "ContentReleaseID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Deleted": {
                                        "type": "boolean"
                                    },
                                    "PublisherUserID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "ReleaseID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "TestReportUrl": {
                                        "type": "string"
                                    },
                                    "UpdatedDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Version": {
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "ContentDefinitionID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "ContentReleaseID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Deleted": {
                                        "type": "boolean"
                                    },
                                    "PublisherUserID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "ReleaseID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "TestReportUrl": {
                                        "type": "string"
                                    },
                                    "UpdatedDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Version": {
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "properties": {
                                    "ContentDefinitionID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "ContentReleaseID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Deleted": {
                                        "type": "boolean"
                                    },
                                    "PublisherUserID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "ReleaseID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "TestReportUrl": {
                                        "type": "string"
                                    },
                                    "UpdatedDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Version": {
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "text/xml": {
                            "schema": {
                                "properties": {
                                    "ContentDefinitionID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "ContentReleaseID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Deleted": {
                                        "type": "boolean"
                                    },
                                    "PublisherUserID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "ReleaseID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "TestReportUrl": {
                                        "type": "string"
                                    },
                                    "UpdatedDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Version": {
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "ContentDefinitionID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "ContentReleaseID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Deleted": {
                                        "type": "boolean"
                                    },
                                    "PublisherUserID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "ReleaseID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "TestReportUrl": {
                                        "type": "string"
                                    },
                                    "UpdatedDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Version": {
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "description": "The ContentReleaseVersion to create.",
                    "required": true
                }
            }
        },
        "/api/v2/ContentReleases/{ContentReleaseId}": {
            "delete": {
                "deprecated": false,
                "description": "Deletes an ContentReleaseVersion. When successful, the response is empty.  If unsuccessful, an appropriate\r\n            ApiError is returned.",
                "operationId": "ContentRelease_DeleteContentReleaseVersionn",
                "parameters": [
                    {
                        "description": "The ID of the ContentReleaseVersion to delete",
                        "in": "path",
                        "name": "ContentReleaseId",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Delete a ContentReleaseVersion",
                "tags": [
                    "ContentRelease"
                ]
            },
            "get": {
                "deprecated": false,
                "description": "Gets a ContentReleaseVersion by ID. When successful, the response is the requested ContentReleaseVersion.\r\n            If unsuccessful, an appropriate ApiError is returned.",
                "parameters": [
                    {
                        "description": "The ID of the ContentReleaseVersion to get.",
                        "in": "path",
                        "name": "ContentReleaseId",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "ContentDefinitionID": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "ContentReleaseID": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Deleted": {
                                            "type": "boolean"
                                        },
                                        "PublisherUserID": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "ReleaseID": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "TestReportUrl": {
                                            "type": "string"
                                        },
                                        "UpdatedDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "Version": {
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "ContentDefinitionID": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "ContentReleaseID": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Deleted": {
                                            "type": "boolean"
                                        },
                                        "PublisherUserID": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "ReleaseID": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "TestReportUrl": {
                                            "type": "string"
                                        },
                                        "UpdatedDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "Version": {
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "ContentDefinitionID": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "ContentReleaseID": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Deleted": {
                                            "type": "boolean"
                                        },
                                        "PublisherUserID": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "ReleaseID": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "TestReportUrl": {
                                            "type": "string"
                                        },
                                        "UpdatedDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "Version": {
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "ContentDefinitionID": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "ContentReleaseID": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Deleted": {
                                            "type": "boolean"
                                        },
                                        "PublisherUserID": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "ReleaseID": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "TestReportUrl": {
                                            "type": "string"
                                        },
                                        "UpdatedDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "Version": {
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get a Content Release Version by ID",
                "tags": [
                    "ContentRelease"
                ]
            },
            "put": {
                "deprecated": false,
                "description": "Updates a ContentReleaseVersion.  The body of the PUT is the updated ContentReleaseVersion.  \r\n            When successful, the response is empty.  If unsuccessful, an appropriate ApiError is returned.",
                "operationId": "ContentRelease_PutContentDefinition",
                "parameters": [
                    {
                        "description": "The ID of the ContentReleaseVersion to update",
                        "in": "path",
                        "name": "ContentReleaseId",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Update a ContentReleaseVersion",
                "tags": [
                    "ContentRelease"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ContentDefinitionID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "ContentReleaseID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Deleted": {
                                        "type": "boolean"
                                    },
                                    "PublisherUserID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "ReleaseID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "TestReportUrl": {
                                        "type": "string"
                                    },
                                    "UpdatedDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Version": {
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "ContentDefinitionID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "ContentReleaseID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Deleted": {
                                        "type": "boolean"
                                    },
                                    "PublisherUserID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "ReleaseID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "TestReportUrl": {
                                        "type": "string"
                                    },
                                    "UpdatedDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Version": {
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "properties": {
                                    "ContentDefinitionID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "ContentReleaseID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Deleted": {
                                        "type": "boolean"
                                    },
                                    "PublisherUserID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "ReleaseID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "TestReportUrl": {
                                        "type": "string"
                                    },
                                    "UpdatedDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Version": {
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "text/xml": {
                            "schema": {
                                "properties": {
                                    "ContentDefinitionID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "ContentReleaseID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Deleted": {
                                        "type": "boolean"
                                    },
                                    "PublisherUserID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "ReleaseID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "TestReportUrl": {
                                        "type": "string"
                                    },
                                    "UpdatedDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Version": {
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "ContentDefinitionID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "ContentReleaseID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Deleted": {
                                        "type": "boolean"
                                    },
                                    "PublisherUserID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "ReleaseID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "TestReportUrl": {
                                        "type": "string"
                                    },
                                    "UpdatedDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Version": {
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "description": "The updated ContentReleaseVersion",
                    "required": true
                }
            }
        },
        "/api/v2/ContentSubmissionTypes": {
            "get": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "ContentSubmissionTypes_GetContentSubmissionTypes",
                "parameters": [
                    {
                        "in": "query",
                        "name": "enabled",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "AttributeTemplate": {
                                                "type": "string"
                                            },
                                            "CategoryTemplate": {
                                                "type": "string"
                                            },
                                            "Description": {
                                                "type": "string"
                                            },
                                            "Enabled": {
                                                "type": "boolean"
                                            },
                                            "ID": {
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "InventoryPackageID": {
                                                "type": "string"
                                            },
                                            "JobID": {
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "Name": {
                                                "type": "string"
                                            },
                                            "ReleaseNotesDescription": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "Name",
                                            "Description"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "AttributeTemplate": {
                                                "type": "string"
                                            },
                                            "CategoryTemplate": {
                                                "type": "string"
                                            },
                                            "Description": {
                                                "type": "string"
                                            },
                                            "Enabled": {
                                                "type": "boolean"
                                            },
                                            "ID": {
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "InventoryPackageID": {
                                                "type": "string"
                                            },
                                            "JobID": {
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "Name": {
                                                "type": "string"
                                            },
                                            "ReleaseNotesDescription": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "Name",
                                            "Description"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "AttributeTemplate": {
                                                "type": "string"
                                            },
                                            "CategoryTemplate": {
                                                "type": "string"
                                            },
                                            "Description": {
                                                "type": "string"
                                            },
                                            "Enabled": {
                                                "type": "boolean"
                                            },
                                            "ID": {
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "InventoryPackageID": {
                                                "type": "string"
                                            },
                                            "JobID": {
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "Name": {
                                                "type": "string"
                                            },
                                            "ReleaseNotesDescription": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "Name",
                                            "Description"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "AttributeTemplate": {
                                                "type": "string"
                                            },
                                            "CategoryTemplate": {
                                                "type": "string"
                                            },
                                            "Description": {
                                                "type": "string"
                                            },
                                            "Enabled": {
                                                "type": "boolean"
                                            },
                                            "ID": {
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "InventoryPackageID": {
                                                "type": "string"
                                            },
                                            "JobID": {
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "Name": {
                                                "type": "string"
                                            },
                                            "ReleaseNotesDescription": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "Name",
                                            "Description"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Returns available Content Submission Types.",
                "tags": [
                    "ContentSubmissionTypes"
                ]
            },
            "post": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "ContentSubmissionTypes_PostContentSubmissionType",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Add a Content Submission Type",
                "tags": [
                    "ContentSubmissionTypes"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "AttributeTemplate": {
                                        "type": "string"
                                    },
                                    "CategoryTemplate": {
                                        "type": "string"
                                    },
                                    "Description": {
                                        "type": "string"
                                    },
                                    "Enabled": {
                                        "type": "boolean"
                                    },
                                    "ID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "InventoryPackageID": {
                                        "type": "string"
                                    },
                                    "JobID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Name": {
                                        "type": "string"
                                    },
                                    "ReleaseNotesDescription": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Name",
                                    "Description"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "AttributeTemplate": {
                                        "type": "string"
                                    },
                                    "CategoryTemplate": {
                                        "type": "string"
                                    },
                                    "Description": {
                                        "type": "string"
                                    },
                                    "Enabled": {
                                        "type": "boolean"
                                    },
                                    "ID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "InventoryPackageID": {
                                        "type": "string"
                                    },
                                    "JobID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Name": {
                                        "type": "string"
                                    },
                                    "ReleaseNotesDescription": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Name",
                                    "Description"
                                ],
                                "type": "object"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "properties": {
                                    "AttributeTemplate": {
                                        "type": "string"
                                    },
                                    "CategoryTemplate": {
                                        "type": "string"
                                    },
                                    "Description": {
                                        "type": "string"
                                    },
                                    "Enabled": {
                                        "type": "boolean"
                                    },
                                    "ID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "InventoryPackageID": {
                                        "type": "string"
                                    },
                                    "JobID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Name": {
                                        "type": "string"
                                    },
                                    "ReleaseNotesDescription": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Name",
                                    "Description"
                                ],
                                "type": "object"
                            }
                        },
                        "text/xml": {
                            "schema": {
                                "properties": {
                                    "AttributeTemplate": {
                                        "type": "string"
                                    },
                                    "CategoryTemplate": {
                                        "type": "string"
                                    },
                                    "Description": {
                                        "type": "string"
                                    },
                                    "Enabled": {
                                        "type": "boolean"
                                    },
                                    "ID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "InventoryPackageID": {
                                        "type": "string"
                                    },
                                    "JobID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Name": {
                                        "type": "string"
                                    },
                                    "ReleaseNotesDescription": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Name",
                                    "Description"
                                ],
                                "type": "object"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "AttributeTemplate": {
                                        "type": "string"
                                    },
                                    "CategoryTemplate": {
                                        "type": "string"
                                    },
                                    "Description": {
                                        "type": "string"
                                    },
                                    "Enabled": {
                                        "type": "boolean"
                                    },
                                    "ID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "InventoryPackageID": {
                                        "type": "string"
                                    },
                                    "JobID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Name": {
                                        "type": "string"
                                    },
                                    "ReleaseNotesDescription": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Name",
                                    "Description"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The Content Submission Type",
                    "required": true
                }
            }
        },
        "/api/v2/ContentSubmissionTypes/{id}": {
            "delete": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "ContentSubmissionTypes_DeleteContentSubmissionType",
                "parameters": [
                    {
                        "description": "The ID of the Content Submission Type",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Remove a Content Submission Type",
                "tags": [
                    "ContentSubmissionTypes"
                ]
            },
            "get": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "ContentSubmissionTypes_GetContentSubmissionType",
                "parameters": [
                    {
                        "description": "The ID of the Content Submission Type",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "AttributeTemplate": {
                                            "type": "string"
                                        },
                                        "CategoryTemplate": {
                                            "type": "string"
                                        },
                                        "Description": {
                                            "type": "string"
                                        },
                                        "Enabled": {
                                            "type": "boolean"
                                        },
                                        "ID": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "InventoryPackageID": {
                                            "type": "string"
                                        },
                                        "JobID": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Name": {
                                            "type": "string"
                                        },
                                        "ReleaseNotesDescription": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "Name",
                                        "Description"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "AttributeTemplate": {
                                            "type": "string"
                                        },
                                        "CategoryTemplate": {
                                            "type": "string"
                                        },
                                        "Description": {
                                            "type": "string"
                                        },
                                        "Enabled": {
                                            "type": "boolean"
                                        },
                                        "ID": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "InventoryPackageID": {
                                            "type": "string"
                                        },
                                        "JobID": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Name": {
                                            "type": "string"
                                        },
                                        "ReleaseNotesDescription": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "Name",
                                        "Description"
                                    ],
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "AttributeTemplate": {
                                            "type": "string"
                                        },
                                        "CategoryTemplate": {
                                            "type": "string"
                                        },
                                        "Description": {
                                            "type": "string"
                                        },
                                        "Enabled": {
                                            "type": "boolean"
                                        },
                                        "ID": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "InventoryPackageID": {
                                            "type": "string"
                                        },
                                        "JobID": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Name": {
                                            "type": "string"
                                        },
                                        "ReleaseNotesDescription": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "Name",
                                        "Description"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "AttributeTemplate": {
                                            "type": "string"
                                        },
                                        "CategoryTemplate": {
                                            "type": "string"
                                        },
                                        "Description": {
                                            "type": "string"
                                        },
                                        "Enabled": {
                                            "type": "boolean"
                                        },
                                        "ID": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "InventoryPackageID": {
                                            "type": "string"
                                        },
                                        "JobID": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Name": {
                                            "type": "string"
                                        },
                                        "ReleaseNotesDescription": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "Name",
                                        "Description"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a Content Submission Type by its ID.",
                "tags": [
                    "ContentSubmissionTypes"
                ]
            },
            "put": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "ContentSubmissionTypes_PutContentSubmissionType",
                "parameters": [
                    {
                        "description": "The ID of the Content Submission Type",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Update a Content Submission Type",
                "tags": [
                    "ContentSubmissionTypes"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "AttributeTemplate": {
                                        "type": "string"
                                    },
                                    "CategoryTemplate": {
                                        "type": "string"
                                    },
                                    "Description": {
                                        "type": "string"
                                    },
                                    "Enabled": {
                                        "type": "boolean"
                                    },
                                    "ID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "InventoryPackageID": {
                                        "type": "string"
                                    },
                                    "JobID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Name": {
                                        "type": "string"
                                    },
                                    "ReleaseNotesDescription": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Name",
                                    "Description"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "AttributeTemplate": {
                                        "type": "string"
                                    },
                                    "CategoryTemplate": {
                                        "type": "string"
                                    },
                                    "Description": {
                                        "type": "string"
                                    },
                                    "Enabled": {
                                        "type": "boolean"
                                    },
                                    "ID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "InventoryPackageID": {
                                        "type": "string"
                                    },
                                    "JobID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Name": {
                                        "type": "string"
                                    },
                                    "ReleaseNotesDescription": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Name",
                                    "Description"
                                ],
                                "type": "object"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "properties": {
                                    "AttributeTemplate": {
                                        "type": "string"
                                    },
                                    "CategoryTemplate": {
                                        "type": "string"
                                    },
                                    "Description": {
                                        "type": "string"
                                    },
                                    "Enabled": {
                                        "type": "boolean"
                                    },
                                    "ID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "InventoryPackageID": {
                                        "type": "string"
                                    },
                                    "JobID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Name": {
                                        "type": "string"
                                    },
                                    "ReleaseNotesDescription": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Name",
                                    "Description"
                                ],
                                "type": "object"
                            }
                        },
                        "text/xml": {
                            "schema": {
                                "properties": {
                                    "AttributeTemplate": {
                                        "type": "string"
                                    },
                                    "CategoryTemplate": {
                                        "type": "string"
                                    },
                                    "Description": {
                                        "type": "string"
                                    },
                                    "Enabled": {
                                        "type": "boolean"
                                    },
                                    "ID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "InventoryPackageID": {
                                        "type": "string"
                                    },
                                    "JobID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Name": {
                                        "type": "string"
                                    },
                                    "ReleaseNotesDescription": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Name",
                                    "Description"
                                ],
                                "type": "object"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "AttributeTemplate": {
                                        "type": "string"
                                    },
                                    "CategoryTemplate": {
                                        "type": "string"
                                    },
                                    "Description": {
                                        "type": "string"
                                    },
                                    "Enabled": {
                                        "type": "boolean"
                                    },
                                    "ID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "InventoryPackageID": {
                                        "type": "string"
                                    },
                                    "JobID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Name": {
                                        "type": "string"
                                    },
                                    "ReleaseNotesDescription": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Name",
                                    "Description"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The Content Submission Type",
                    "required": true
                }
            }
        },
        "/api/v2/ContentSubmissions": {
            "get": {
                "deprecated": false,
                "description": "Gets a collection of ContentSubmissions. When successful, the response is a PagedResponse of ContentSubmissions.\r\n            If unsuccessful, an appropriate ApiError is returned.",
                "operationId": "ContentSubmissions_GetContentSubmissions",
                "parameters": [
                    {
                        "description": "Optional. The page limit.  If not specified, the default page limit is 10.",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "Optional. The page offset.  If not specified, the default page offset is 0.",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "Optional. Filter by UserID.",
                        "in": "query",
                        "name": "userID",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "Optional. Filter by ContentDefinitionID",
                        "in": "query",
                        "name": "contentDefinitionID",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "properties": {
                                                    "ContentDefinitionID": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "ContentSubmissionID": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "JobRunID": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "PackageID": {
                                                        "type": "string"
                                                    },
                                                    "ReleaseNotes": {
                                                        "type": "string"
                                                    },
                                                    "Repository": {
                                                        "type": "string"
                                                    },
                                                    "Revision": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "SubmissionDate": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "UserID": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "Version": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "properties": {
                                                    "ContentDefinitionID": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "ContentSubmissionID": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "JobRunID": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "PackageID": {
                                                        "type": "string"
                                                    },
                                                    "ReleaseNotes": {
                                                        "type": "string"
                                                    },
                                                    "Repository": {
                                                        "type": "string"
                                                    },
                                                    "Revision": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "SubmissionDate": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "UserID": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "Version": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get ContentSubmissions",
                "tags": [
                    "ContentSubmissions"
                ]
            },
            "post": {
                "deprecated": false,
                "description": "Creates a ContentSubmission.  The body of the POST is the ContentSubmission to create.\r\n            The ContentSubmissionID will be assigned on creation of the Job.  When successful, the response\r\n            is the ContentSubmissionID.  If unsuccessful, an appropriate ApiError is returned.",
                "operationId": "ContentSubmissions_PostContentSubmission",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Create a ContentSubmission",
                "tags": [
                    "ContentSubmissions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ContentDefinitionID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "ContentSubmissionID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "JobRunID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "PackageID": {
                                        "type": "string"
                                    },
                                    "ReleaseNotes": {
                                        "type": "string"
                                    },
                                    "Repository": {
                                        "type": "string"
                                    },
                                    "Revision": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "SubmissionDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "UserID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Version": {
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "ContentDefinitionID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "ContentSubmissionID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "JobRunID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "PackageID": {
                                        "type": "string"
                                    },
                                    "ReleaseNotes": {
                                        "type": "string"
                                    },
                                    "Repository": {
                                        "type": "string"
                                    },
                                    "Revision": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "SubmissionDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "UserID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Version": {
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "properties": {
                                    "ContentDefinitionID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "ContentSubmissionID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "JobRunID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "PackageID": {
                                        "type": "string"
                                    },
                                    "ReleaseNotes": {
                                        "type": "string"
                                    },
                                    "Repository": {
                                        "type": "string"
                                    },
                                    "Revision": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "SubmissionDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "UserID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Version": {
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "text/xml": {
                            "schema": {
                                "properties": {
                                    "ContentDefinitionID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "ContentSubmissionID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "JobRunID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "PackageID": {
                                        "type": "string"
                                    },
                                    "ReleaseNotes": {
                                        "type": "string"
                                    },
                                    "Repository": {
                                        "type": "string"
                                    },
                                    "Revision": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "SubmissionDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "UserID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Version": {
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "ContentDefinitionID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "ContentSubmissionID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "JobRunID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "PackageID": {
                                        "type": "string"
                                    },
                                    "ReleaseNotes": {
                                        "type": "string"
                                    },
                                    "Repository": {
                                        "type": "string"
                                    },
                                    "Revision": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "SubmissionDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "UserID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Version": {
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "description": "The ContentSubmission to create.",
                    "required": true
                }
            }
        },
        "/api/v2/ContentSubmissions/{contentSubmissionID}": {
            "delete": {
                "deprecated": false,
                "description": "Deletes an ContentSubmission. When successful, the response is empty.  If unsuccessful, an appropriate\r\n            ApiError is returned.",
                "operationId": "ContentSubmissions_DeleteContentSubmission",
                "parameters": [
                    {
                        "description": "The ID of the ContentSubmission to delete",
                        "in": "path",
                        "name": "contentSubmissionID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Delete a ContentSubmission",
                "tags": [
                    "ContentSubmissions"
                ]
            },
            "get": {
                "deprecated": false,
                "description": "Gets a ContentSubmission by ID. When successful, the response is the requested ContentSubmission.\r\n            If unsuccessful, an appropriate ApiError is returned.",
                "operationId": "ContentSubmissions_GetContentSubmission",
                "parameters": [
                    {
                        "description": "The ID of the ContentSubmission to get.",
                        "in": "path",
                        "name": "contentSubmissionID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "ContentDefinitionID": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "ContentSubmissionID": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "JobRunID": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "PackageID": {
                                            "type": "string"
                                        },
                                        "ReleaseNotes": {
                                            "type": "string"
                                        },
                                        "Repository": {
                                            "type": "string"
                                        },
                                        "Revision": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "SubmissionDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "UserID": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Version": {
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "ContentDefinitionID": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "ContentSubmissionID": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "JobRunID": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "PackageID": {
                                            "type": "string"
                                        },
                                        "ReleaseNotes": {
                                            "type": "string"
                                        },
                                        "Repository": {
                                            "type": "string"
                                        },
                                        "Revision": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "SubmissionDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "UserID": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Version": {
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "ContentDefinitionID": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "ContentSubmissionID": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "JobRunID": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "PackageID": {
                                            "type": "string"
                                        },
                                        "ReleaseNotes": {
                                            "type": "string"
                                        },
                                        "Repository": {
                                            "type": "string"
                                        },
                                        "Revision": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "SubmissionDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "UserID": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Version": {
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "ContentDefinitionID": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "ContentSubmissionID": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "JobRunID": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "PackageID": {
                                            "type": "string"
                                        },
                                        "ReleaseNotes": {
                                            "type": "string"
                                        },
                                        "Repository": {
                                            "type": "string"
                                        },
                                        "Revision": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "SubmissionDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "UserID": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Version": {
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get a ContentSubmission by ID",
                "tags": [
                    "ContentSubmissions"
                ]
            },
            "put": {
                "deprecated": false,
                "description": "Updates a ContentSubmission.  The body of the PUT is the updated ContentSubmission.  \r\n            When successful, the response is empty.  If unsuccessful, an appropriate ApiError is returned.",
                "operationId": "ContentSubmissions_PutContentSubmission",
                "parameters": [
                    {
                        "description": "The ID of the ContentSubmission to update",
                        "in": "path",
                        "name": "contentSubmissionID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Update a ContentSubmission",
                "tags": [
                    "ContentSubmissions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ContentDefinitionID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "ContentSubmissionID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "JobRunID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "PackageID": {
                                        "type": "string"
                                    },
                                    "ReleaseNotes": {
                                        "type": "string"
                                    },
                                    "Repository": {
                                        "type": "string"
                                    },
                                    "Revision": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "SubmissionDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "UserID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Version": {
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "ContentDefinitionID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "ContentSubmissionID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "JobRunID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "PackageID": {
                                        "type": "string"
                                    },
                                    "ReleaseNotes": {
                                        "type": "string"
                                    },
                                    "Repository": {
                                        "type": "string"
                                    },
                                    "Revision": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "SubmissionDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "UserID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Version": {
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "properties": {
                                    "ContentDefinitionID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "ContentSubmissionID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "JobRunID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "PackageID": {
                                        "type": "string"
                                    },
                                    "ReleaseNotes": {
                                        "type": "string"
                                    },
                                    "Repository": {
                                        "type": "string"
                                    },
                                    "Revision": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "SubmissionDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "UserID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Version": {
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "text/xml": {
                            "schema": {
                                "properties": {
                                    "ContentDefinitionID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "ContentSubmissionID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "JobRunID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "PackageID": {
                                        "type": "string"
                                    },
                                    "ReleaseNotes": {
                                        "type": "string"
                                    },
                                    "Repository": {
                                        "type": "string"
                                    },
                                    "Revision": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "SubmissionDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "UserID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Version": {
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "ContentDefinitionID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "ContentSubmissionID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "JobRunID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "PackageID": {
                                        "type": "string"
                                    },
                                    "ReleaseNotes": {
                                        "type": "string"
                                    },
                                    "Repository": {
                                        "type": "string"
                                    },
                                    "Revision": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "SubmissionDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "UserID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Version": {
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "description": "The updated ContentSubmission",
                    "required": true
                }
            }
        },
        "/api/v2/DealerByCountry": {
            "get": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "DealerByCountry_GetCountries",
                "parameters": [
                    {
                        "description": "Optional. The page limit. The default page limit is 10.",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "Optional. The page offset. The default page offset is 0.",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "properties": {
                                                    "Count": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "Country": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "properties": {
                                                    "Count": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "Country": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get a total count of dealers per country",
                "tags": [
                    "DealerByCountry"
                ]
            }
        },
        "/api/v2/Dealers": {
            "get": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "Dealers_GetDealers",
                "parameters": [
                    {
                        "description": "The brand to filter by.",
                        "in": "query",
                        "name": "Brand",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The country to filter by.",
                        "in": "query",
                        "name": "ShippingCountry",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The partial Dealer Name to filter by. Wildcard supported (*).",
                        "in": "query",
                        "name": "DealerName",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Optional. The page limit. The default page limit is 10.",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "Optional. The page offset. The default page offset is 0.",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "properties": {
                                                    "BillingAddress": {
                                                        "type": "string"
                                                    },
                                                    "BillingAddress2": {
                                                        "type": "string"
                                                    },
                                                    "BillingAddress3": {
                                                        "type": "string"
                                                    },
                                                    "BillingAddress4": {
                                                        "type": "string"
                                                    },
                                                    "BillingCity": {
                                                        "type": "string"
                                                    },
                                                    "BillingCountry": {
                                                        "type": "string"
                                                    },
                                                    "BillingCountryCode": {
                                                        "type": "string"
                                                    },
                                                    "BillingState": {
                                                        "type": "string"
                                                    },
                                                    "BillingZip": {
                                                        "type": "string"
                                                    },
                                                    "Brands": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "readOnly": true,
                                                        "type": "array"
                                                    },
                                                    "DealerCode": {
                                                        "type": "string"
                                                    },
                                                    "DealerName": {
                                                        "type": "string"
                                                    },
                                                    "DealerStatus": {
                                                        "type": "string"
                                                    },
                                                    "DealerStatusUpdateDate": {
                                                        "type": "string"
                                                    },
                                                    "Filler": {
                                                        "type": "string"
                                                    },
                                                    "IsValid": {
                                                        "readOnly": true,
                                                        "type": "boolean"
                                                    },
                                                    "LanguagePreference": {
                                                        "type": "string"
                                                    },
                                                    "Region1": {
                                                        "type": "string"
                                                    },
                                                    "Region2": {
                                                        "type": "string"
                                                    },
                                                    "RegionMapping": {
                                                        "type": "string"
                                                    },
                                                    "RoleBrand": {
                                                        "type": "string"
                                                    },
                                                    "ShippingAddress2": {
                                                        "type": "string"
                                                    },
                                                    "ShippingAddress3": {
                                                        "type": "string"
                                                    },
                                                    "ShippingAddress4": {
                                                        "type": "string"
                                                    },
                                                    "ShippingCity": {
                                                        "type": "string"
                                                    },
                                                    "ShippingCountry": {
                                                        "type": "string"
                                                    },
                                                    "ShippingState": {
                                                        "type": "string"
                                                    },
                                                    "ShippingStreet": {
                                                        "type": "string"
                                                    },
                                                    "ShippingZip": {
                                                        "type": "string"
                                                    },
                                                    "Telephone": {
                                                        "type": "string"
                                                    },
                                                    "VATCode": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "properties": {
                                                    "BillingAddress": {
                                                        "type": "string"
                                                    },
                                                    "BillingAddress2": {
                                                        "type": "string"
                                                    },
                                                    "BillingAddress3": {
                                                        "type": "string"
                                                    },
                                                    "BillingAddress4": {
                                                        "type": "string"
                                                    },
                                                    "BillingCity": {
                                                        "type": "string"
                                                    },
                                                    "BillingCountry": {
                                                        "type": "string"
                                                    },
                                                    "BillingCountryCode": {
                                                        "type": "string"
                                                    },
                                                    "BillingState": {
                                                        "type": "string"
                                                    },
                                                    "BillingZip": {
                                                        "type": "string"
                                                    },
                                                    "Brands": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "readOnly": true,
                                                        "type": "array"
                                                    },
                                                    "DealerCode": {
                                                        "type": "string"
                                                    },
                                                    "DealerName": {
                                                        "type": "string"
                                                    },
                                                    "DealerStatus": {
                                                        "type": "string"
                                                    },
                                                    "DealerStatusUpdateDate": {
                                                        "type": "string"
                                                    },
                                                    "Filler": {
                                                        "type": "string"
                                                    },
                                                    "IsValid": {
                                                        "readOnly": true,
                                                        "type": "boolean"
                                                    },
                                                    "LanguagePreference": {
                                                        "type": "string"
                                                    },
                                                    "Region1": {
                                                        "type": "string"
                                                    },
                                                    "Region2": {
                                                        "type": "string"
                                                    },
                                                    "RegionMapping": {
                                                        "type": "string"
                                                    },
                                                    "RoleBrand": {
                                                        "type": "string"
                                                    },
                                                    "ShippingAddress2": {
                                                        "type": "string"
                                                    },
                                                    "ShippingAddress3": {
                                                        "type": "string"
                                                    },
                                                    "ShippingAddress4": {
                                                        "type": "string"
                                                    },
                                                    "ShippingCity": {
                                                        "type": "string"
                                                    },
                                                    "ShippingCountry": {
                                                        "type": "string"
                                                    },
                                                    "ShippingState": {
                                                        "type": "string"
                                                    },
                                                    "ShippingStreet": {
                                                        "type": "string"
                                                    },
                                                    "ShippingZip": {
                                                        "type": "string"
                                                    },
                                                    "Telephone": {
                                                        "type": "string"
                                                    },
                                                    "VATCode": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get a list of dealers.",
                "tags": [
                    "Dealers"
                ]
            }
        },
        "/api/v2/Dealers/{DealerCode}": {
            "get": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "Dealers_GetDealerbyDealerCode",
                "parameters": [
                    {
                        "description": "The Dealer Code to Search for",
                        "in": "path",
                        "name": "DealerCode",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "BillingAddress": {
                                            "type": "string"
                                        },
                                        "BillingAddress2": {
                                            "type": "string"
                                        },
                                        "BillingAddress3": {
                                            "type": "string"
                                        },
                                        "BillingAddress4": {
                                            "type": "string"
                                        },
                                        "BillingCity": {
                                            "type": "string"
                                        },
                                        "BillingCountry": {
                                            "type": "string"
                                        },
                                        "BillingCountryCode": {
                                            "type": "string"
                                        },
                                        "BillingState": {
                                            "type": "string"
                                        },
                                        "BillingZip": {
                                            "type": "string"
                                        },
                                        "Brands": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "DealerCode": {
                                            "type": "string"
                                        },
                                        "DealerName": {
                                            "type": "string"
                                        },
                                        "DealerStatus": {
                                            "type": "string"
                                        },
                                        "DealerStatusUpdateDate": {
                                            "type": "string"
                                        },
                                        "Filler": {
                                            "type": "string"
                                        },
                                        "IsValid": {
                                            "readOnly": true,
                                            "type": "boolean"
                                        },
                                        "LanguagePreference": {
                                            "type": "string"
                                        },
                                        "Region1": {
                                            "type": "string"
                                        },
                                        "Region2": {
                                            "type": "string"
                                        },
                                        "RegionMapping": {
                                            "type": "string"
                                        },
                                        "RoleBrand": {
                                            "type": "string"
                                        },
                                        "ShippingAddress2": {
                                            "type": "string"
                                        },
                                        "ShippingAddress3": {
                                            "type": "string"
                                        },
                                        "ShippingAddress4": {
                                            "type": "string"
                                        },
                                        "ShippingCity": {
                                            "type": "string"
                                        },
                                        "ShippingCountry": {
                                            "type": "string"
                                        },
                                        "ShippingState": {
                                            "type": "string"
                                        },
                                        "ShippingStreet": {
                                            "type": "string"
                                        },
                                        "ShippingZip": {
                                            "type": "string"
                                        },
                                        "Telephone": {
                                            "type": "string"
                                        },
                                        "VATCode": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "BillingAddress": {
                                            "type": "string"
                                        },
                                        "BillingAddress2": {
                                            "type": "string"
                                        },
                                        "BillingAddress3": {
                                            "type": "string"
                                        },
                                        "BillingAddress4": {
                                            "type": "string"
                                        },
                                        "BillingCity": {
                                            "type": "string"
                                        },
                                        "BillingCountry": {
                                            "type": "string"
                                        },
                                        "BillingCountryCode": {
                                            "type": "string"
                                        },
                                        "BillingState": {
                                            "type": "string"
                                        },
                                        "BillingZip": {
                                            "type": "string"
                                        },
                                        "Brands": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "DealerCode": {
                                            "type": "string"
                                        },
                                        "DealerName": {
                                            "type": "string"
                                        },
                                        "DealerStatus": {
                                            "type": "string"
                                        },
                                        "DealerStatusUpdateDate": {
                                            "type": "string"
                                        },
                                        "Filler": {
                                            "type": "string"
                                        },
                                        "IsValid": {
                                            "readOnly": true,
                                            "type": "boolean"
                                        },
                                        "LanguagePreference": {
                                            "type": "string"
                                        },
                                        "Region1": {
                                            "type": "string"
                                        },
                                        "Region2": {
                                            "type": "string"
                                        },
                                        "RegionMapping": {
                                            "type": "string"
                                        },
                                        "RoleBrand": {
                                            "type": "string"
                                        },
                                        "ShippingAddress2": {
                                            "type": "string"
                                        },
                                        "ShippingAddress3": {
                                            "type": "string"
                                        },
                                        "ShippingAddress4": {
                                            "type": "string"
                                        },
                                        "ShippingCity": {
                                            "type": "string"
                                        },
                                        "ShippingCountry": {
                                            "type": "string"
                                        },
                                        "ShippingState": {
                                            "type": "string"
                                        },
                                        "ShippingStreet": {
                                            "type": "string"
                                        },
                                        "ShippingZip": {
                                            "type": "string"
                                        },
                                        "Telephone": {
                                            "type": "string"
                                        },
                                        "VATCode": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "BillingAddress": {
                                            "type": "string"
                                        },
                                        "BillingAddress2": {
                                            "type": "string"
                                        },
                                        "BillingAddress3": {
                                            "type": "string"
                                        },
                                        "BillingAddress4": {
                                            "type": "string"
                                        },
                                        "BillingCity": {
                                            "type": "string"
                                        },
                                        "BillingCountry": {
                                            "type": "string"
                                        },
                                        "BillingCountryCode": {
                                            "type": "string"
                                        },
                                        "BillingState": {
                                            "type": "string"
                                        },
                                        "BillingZip": {
                                            "type": "string"
                                        },
                                        "Brands": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "DealerCode": {
                                            "type": "string"
                                        },
                                        "DealerName": {
                                            "type": "string"
                                        },
                                        "DealerStatus": {
                                            "type": "string"
                                        },
                                        "DealerStatusUpdateDate": {
                                            "type": "string"
                                        },
                                        "Filler": {
                                            "type": "string"
                                        },
                                        "IsValid": {
                                            "readOnly": true,
                                            "type": "boolean"
                                        },
                                        "LanguagePreference": {
                                            "type": "string"
                                        },
                                        "Region1": {
                                            "type": "string"
                                        },
                                        "Region2": {
                                            "type": "string"
                                        },
                                        "RegionMapping": {
                                            "type": "string"
                                        },
                                        "RoleBrand": {
                                            "type": "string"
                                        },
                                        "ShippingAddress2": {
                                            "type": "string"
                                        },
                                        "ShippingAddress3": {
                                            "type": "string"
                                        },
                                        "ShippingAddress4": {
                                            "type": "string"
                                        },
                                        "ShippingCity": {
                                            "type": "string"
                                        },
                                        "ShippingCountry": {
                                            "type": "string"
                                        },
                                        "ShippingState": {
                                            "type": "string"
                                        },
                                        "ShippingStreet": {
                                            "type": "string"
                                        },
                                        "ShippingZip": {
                                            "type": "string"
                                        },
                                        "Telephone": {
                                            "type": "string"
                                        },
                                        "VATCode": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "BillingAddress": {
                                            "type": "string"
                                        },
                                        "BillingAddress2": {
                                            "type": "string"
                                        },
                                        "BillingAddress3": {
                                            "type": "string"
                                        },
                                        "BillingAddress4": {
                                            "type": "string"
                                        },
                                        "BillingCity": {
                                            "type": "string"
                                        },
                                        "BillingCountry": {
                                            "type": "string"
                                        },
                                        "BillingCountryCode": {
                                            "type": "string"
                                        },
                                        "BillingState": {
                                            "type": "string"
                                        },
                                        "BillingZip": {
                                            "type": "string"
                                        },
                                        "Brands": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "DealerCode": {
                                            "type": "string"
                                        },
                                        "DealerName": {
                                            "type": "string"
                                        },
                                        "DealerStatus": {
                                            "type": "string"
                                        },
                                        "DealerStatusUpdateDate": {
                                            "type": "string"
                                        },
                                        "Filler": {
                                            "type": "string"
                                        },
                                        "IsValid": {
                                            "readOnly": true,
                                            "type": "boolean"
                                        },
                                        "LanguagePreference": {
                                            "type": "string"
                                        },
                                        "Region1": {
                                            "type": "string"
                                        },
                                        "Region2": {
                                            "type": "string"
                                        },
                                        "RegionMapping": {
                                            "type": "string"
                                        },
                                        "RoleBrand": {
                                            "type": "string"
                                        },
                                        "ShippingAddress2": {
                                            "type": "string"
                                        },
                                        "ShippingAddress3": {
                                            "type": "string"
                                        },
                                        "ShippingAddress4": {
                                            "type": "string"
                                        },
                                        "ShippingCity": {
                                            "type": "string"
                                        },
                                        "ShippingCountry": {
                                            "type": "string"
                                        },
                                        "ShippingState": {
                                            "type": "string"
                                        },
                                        "ShippingStreet": {
                                            "type": "string"
                                        },
                                        "ShippingZip": {
                                            "type": "string"
                                        },
                                        "Telephone": {
                                            "type": "string"
                                        },
                                        "VATCode": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Lookup a dealer using a dealer code.",
                "tags": [
                    "Dealers"
                ]
            }
        },
        "/api/v2/LicenseActivations": {
            "post": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "LicenseActivations_Post",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Key": {
                                            "description": "The license key in base64 format.  This is only provided when the LicenseData is a new license.",
                                            "type": "string"
                                        },
                                        "LicenseData": {
                                            "description": "The license data in base64 format.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "Key": {
                                            "description": "The license key in base64 format.  This is only provided when the LicenseData is a new license.",
                                            "type": "string"
                                        },
                                        "LicenseData": {
                                            "description": "The license data in base64 format.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "Key": {
                                            "description": "The license key in base64 format.  This is only provided when the LicenseData is a new license.",
                                            "type": "string"
                                        },
                                        "LicenseData": {
                                            "description": "The license data in base64 format.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "Key": {
                                            "description": "The license key in base64 format.  This is only provided when the LicenseData is a new license.",
                                            "type": "string"
                                        },
                                        "LicenseData": {
                                            "description": "The license data in base64 format.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Create a license activation.",
                "tags": [
                    "LicenseActivations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "DealerCode": {
                                        "description": "The Dealer Code of the dealer activating the license",
                                        "type": "string"
                                    },
                                    "LicenseActivationType": {
                                        "description": "The type of license to create (e.g. EDT, EDT Lite)",
                                        "enum": [
                                            "EDT",
                                            "EDTLite"
                                        ],
                                        "type": "string"
                                    },
                                    "PostalCode": {
                                        "description": "The dealer's postal code (zip code)",
                                        "type": "string"
                                    },
                                    "SystemInfo": {
                                        "description": "Information about  the system being activated",
                                        "type": "string"
                                    },
                                    "VoucherCode": {
                                        "description": "The Voucher Code to use for activation",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "VoucherCode",
                                    "DealerCode",
                                    "PostalCode",
                                    "SystemInfo"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "DealerCode": {
                                        "description": "The Dealer Code of the dealer activating the license",
                                        "type": "string"
                                    },
                                    "LicenseActivationType": {
                                        "description": "The type of license to create (e.g. EDT, EDT Lite)",
                                        "enum": [
                                            "EDT",
                                            "EDTLite"
                                        ],
                                        "type": "string"
                                    },
                                    "PostalCode": {
                                        "description": "The dealer's postal code (zip code)",
                                        "type": "string"
                                    },
                                    "SystemInfo": {
                                        "description": "Information about  the system being activated",
                                        "type": "string"
                                    },
                                    "VoucherCode": {
                                        "description": "The Voucher Code to use for activation",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "VoucherCode",
                                    "DealerCode",
                                    "PostalCode",
                                    "SystemInfo"
                                ],
                                "type": "object"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "properties": {
                                    "DealerCode": {
                                        "description": "The Dealer Code of the dealer activating the license",
                                        "type": "string"
                                    },
                                    "LicenseActivationType": {
                                        "description": "The type of license to create (e.g. EDT, EDT Lite)",
                                        "enum": [
                                            "EDT",
                                            "EDTLite"
                                        ],
                                        "type": "string"
                                    },
                                    "PostalCode": {
                                        "description": "The dealer's postal code (zip code)",
                                        "type": "string"
                                    },
                                    "SystemInfo": {
                                        "description": "Information about  the system being activated",
                                        "type": "string"
                                    },
                                    "VoucherCode": {
                                        "description": "The Voucher Code to use for activation",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "VoucherCode",
                                    "DealerCode",
                                    "PostalCode",
                                    "SystemInfo"
                                ],
                                "type": "object"
                            }
                        },
                        "text/xml": {
                            "schema": {
                                "properties": {
                                    "DealerCode": {
                                        "description": "The Dealer Code of the dealer activating the license",
                                        "type": "string"
                                    },
                                    "LicenseActivationType": {
                                        "description": "The type of license to create (e.g. EDT, EDT Lite)",
                                        "enum": [
                                            "EDT",
                                            "EDTLite"
                                        ],
                                        "type": "string"
                                    },
                                    "PostalCode": {
                                        "description": "The dealer's postal code (zip code)",
                                        "type": "string"
                                    },
                                    "SystemInfo": {
                                        "description": "Information about  the system being activated",
                                        "type": "string"
                                    },
                                    "VoucherCode": {
                                        "description": "The Voucher Code to use for activation",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "VoucherCode",
                                    "DealerCode",
                                    "PostalCode",
                                    "SystemInfo"
                                ],
                                "type": "object"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "DealerCode": {
                                        "description": "The Dealer Code of the dealer activating the license",
                                        "type": "string"
                                    },
                                    "LicenseActivationType": {
                                        "description": "The type of license to create (e.g. EDT, EDT Lite)",
                                        "enum": [
                                            "EDT",
                                            "EDTLite"
                                        ],
                                        "type": "string"
                                    },
                                    "PostalCode": {
                                        "description": "The dealer's postal code (zip code)",
                                        "type": "string"
                                    },
                                    "SystemInfo": {
                                        "description": "Information about  the system being activated",
                                        "type": "string"
                                    },
                                    "VoucherCode": {
                                        "description": "The Voucher Code to use for activation",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "VoucherCode",
                                    "DealerCode",
                                    "PostalCode",
                                    "SystemInfo"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The data required for creating the license.",
                    "required": true
                }
            }
        },
        "/api/v2/LicenseActivations/RegisterEDTLite": {
            "post": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "LicenseActivations_PostRegisterEDTLite",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "boolean"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Register an EDT Lite with the Server",
                "tags": [
                    "LicenseActivations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Registration for an EDT Lite",
                                "properties": {
                                    "DealerCode": {
                                        "description": "The dealer code with which the EDT Lite was created.",
                                        "type": "string"
                                    },
                                    "ExpirationDate": {
                                        "description": "The date at which the content of the EDT Lite expires.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "InstanceID": {
                                        "description": "The identifier for the EDT Lite.",
                                        "type": "string"
                                    },
                                    "VoucherCode": {
                                        "description": "The voucher code with which the EDT Lite was created.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "InstanceID",
                                    "VoucherCode",
                                    "ExpirationDate"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "description": "Registration for an EDT Lite",
                                "properties": {
                                    "DealerCode": {
                                        "description": "The dealer code with which the EDT Lite was created.",
                                        "type": "string"
                                    },
                                    "ExpirationDate": {
                                        "description": "The date at which the content of the EDT Lite expires.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "InstanceID": {
                                        "description": "The identifier for the EDT Lite.",
                                        "type": "string"
                                    },
                                    "VoucherCode": {
                                        "description": "The voucher code with which the EDT Lite was created.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "InstanceID",
                                    "VoucherCode",
                                    "ExpirationDate"
                                ],
                                "type": "object"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "description": "Registration for an EDT Lite",
                                "properties": {
                                    "DealerCode": {
                                        "description": "The dealer code with which the EDT Lite was created.",
                                        "type": "string"
                                    },
                                    "ExpirationDate": {
                                        "description": "The date at which the content of the EDT Lite expires.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "InstanceID": {
                                        "description": "The identifier for the EDT Lite.",
                                        "type": "string"
                                    },
                                    "VoucherCode": {
                                        "description": "The voucher code with which the EDT Lite was created.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "InstanceID",
                                    "VoucherCode",
                                    "ExpirationDate"
                                ],
                                "type": "object"
                            }
                        },
                        "text/xml": {
                            "schema": {
                                "description": "Registration for an EDT Lite",
                                "properties": {
                                    "DealerCode": {
                                        "description": "The dealer code with which the EDT Lite was created.",
                                        "type": "string"
                                    },
                                    "ExpirationDate": {
                                        "description": "The date at which the content of the EDT Lite expires.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "InstanceID": {
                                        "description": "The identifier for the EDT Lite.",
                                        "type": "string"
                                    },
                                    "VoucherCode": {
                                        "description": "The voucher code with which the EDT Lite was created.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "InstanceID",
                                    "VoucherCode",
                                    "ExpirationDate"
                                ],
                                "type": "object"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "description": "Registration for an EDT Lite",
                                "properties": {
                                    "DealerCode": {
                                        "description": "The dealer code with which the EDT Lite was created.",
                                        "type": "string"
                                    },
                                    "ExpirationDate": {
                                        "description": "The date at which the content of the EDT Lite expires.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "InstanceID": {
                                        "description": "The identifier for the EDT Lite.",
                                        "type": "string"
                                    },
                                    "VoucherCode": {
                                        "description": "The voucher code with which the EDT Lite was created.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "InstanceID",
                                    "VoucherCode",
                                    "ExpirationDate"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The information required for registration.",
                    "required": true
                }
            }
        },
        "/api/v2/LicenseActivations/{ID}": {
            "put": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "LicenseActivations_Put",
                "parameters": [
                    {
                        "description": "The ID of the license.",
                        "in": "path",
                        "name": "ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Key": {
                                            "description": "The license key in base64 format.  This is only provided when the LicenseData is a new license.",
                                            "type": "string"
                                        },
                                        "LicenseData": {
                                            "description": "The license data in base64 format.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "Key": {
                                            "description": "The license key in base64 format.  This is only provided when the LicenseData is a new license.",
                                            "type": "string"
                                        },
                                        "LicenseData": {
                                            "description": "The license data in base64 format.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "Key": {
                                            "description": "The license key in base64 format.  This is only provided when the LicenseData is a new license.",
                                            "type": "string"
                                        },
                                        "LicenseData": {
                                            "description": "The license data in base64 format.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "Key": {
                                            "description": "The license key in base64 format.  This is only provided when the LicenseData is a new license.",
                                            "type": "string"
                                        },
                                        "LicenseData": {
                                            "description": "The license data in base64 format.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Update a license activiation.",
                "tags": [
                    "LicenseActivations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "LicenseVersion": {
                                        "description": "The license version to update",
                                        "type": "string"
                                    },
                                    "SystemInfo": {
                                        "description": "Information about  the system being activated",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "LicenseVersion"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "LicenseVersion": {
                                        "description": "The license version to update",
                                        "type": "string"
                                    },
                                    "SystemInfo": {
                                        "description": "Information about  the system being activated",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "LicenseVersion"
                                ],
                                "type": "object"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "properties": {
                                    "LicenseVersion": {
                                        "description": "The license version to update",
                                        "type": "string"
                                    },
                                    "SystemInfo": {
                                        "description": "Information about  the system being activated",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "LicenseVersion"
                                ],
                                "type": "object"
                            }
                        },
                        "text/xml": {
                            "schema": {
                                "properties": {
                                    "LicenseVersion": {
                                        "description": "The license version to update",
                                        "type": "string"
                                    },
                                    "SystemInfo": {
                                        "description": "Information about  the system being activated",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "LicenseVersion"
                                ],
                                "type": "object"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "LicenseVersion": {
                                        "description": "The license version to update",
                                        "type": "string"
                                    },
                                    "SystemInfo": {
                                        "description": "Information about  the system being activated",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "LicenseVersion"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The data required for updating the license.",
                    "required": true
                }
            }
        },
        "/api/v2/LicenseActivations/{ID}/Confirm": {
            "put": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "LicenseActivations_PutConfirm",
                "parameters": [
                    {
                        "description": "The ID of the license",
                        "in": "path",
                        "name": "ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Confirm that the client has applied the updated license.",
                "tags": [
                    "LicenseActivations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "LicenseVersion": {
                                        "description": "The license version to confirm",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "LicenseVersion"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "LicenseVersion": {
                                        "description": "The license version to confirm",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "LicenseVersion"
                                ],
                                "type": "object"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "properties": {
                                    "LicenseVersion": {
                                        "description": "The license version to confirm",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "LicenseVersion"
                                ],
                                "type": "object"
                            }
                        },
                        "text/xml": {
                            "schema": {
                                "properties": {
                                    "LicenseVersion": {
                                        "description": "The license version to confirm",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "LicenseVersion"
                                ],
                                "type": "object"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "LicenseVersion": {
                                        "description": "The license version to confirm",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "LicenseVersion"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The license data.",
                    "required": true
                }
            }
        },
        "/api/v2/Licenses": {
            "get": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "parameters": [
                    {
                        "description": "Optional. Filter by VoucherCode",
                        "in": "query",
                        "name": "VoucherCode",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Optional. Filter by DealerCode",
                        "in": "query",
                        "name": "DealerCode",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Optional. Filter by Status.  By default only active licenses will be returned.",
                        "in": "query",
                        "name": "Status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Active",
                                "Inactive",
                                "All"
                            ]
                        }
                    },
                    {
                        "description": "Optional. The page limit. The default page limit is 10.",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "Optional. The page offset. The default page offset is 0.",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "properties": {
                                                    "Active": {
                                                        "description": "True if license is active.",
                                                        "type": "boolean"
                                                    },
                                                    "CreatedDate": {
                                                        "description": "The date the license was created.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "DeactivatedDate": {
                                                        "description": "The date the license was deactivated.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "LicenseActivationType": {
                                                        "description": "The type of license (e.g. EDT, EDT Lite)",
                                                        "enum": [
                                                            "EDT",
                                                            "EDTLite"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "LicenseID": {
                                                        "description": "The LicenseID",
                                                        "type": "string"
                                                    },
                                                    "LicenseVersion": {
                                                        "description": "The version of the license.",
                                                        "type": "string"
                                                    },
                                                    "RefreshDate": {
                                                        "description": "The date the license was refreshed.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "SystemInfo": {
                                                        "description": "Information about the system which is licensed.",
                                                        "type": "string"
                                                    },
                                                    "UpdatedLicenseVersion": {
                                                        "description": "The updated version of the license.  A value in this field indicates that the update has not been confirmed.",
                                                        "type": "string"
                                                    },
                                                    "VoucherCode": {
                                                        "description": "The voucher code that generated the license.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "properties": {
                                                    "Active": {
                                                        "description": "True if license is active.",
                                                        "type": "boolean"
                                                    },
                                                    "CreatedDate": {
                                                        "description": "The date the license was created.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "DeactivatedDate": {
                                                        "description": "The date the license was deactivated.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "LicenseActivationType": {
                                                        "description": "The type of license (e.g. EDT, EDT Lite)",
                                                        "enum": [
                                                            "EDT",
                                                            "EDTLite"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "LicenseID": {
                                                        "description": "The LicenseID",
                                                        "type": "string"
                                                    },
                                                    "LicenseVersion": {
                                                        "description": "The version of the license.",
                                                        "type": "string"
                                                    },
                                                    "RefreshDate": {
                                                        "description": "The date the license was refreshed.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "SystemInfo": {
                                                        "description": "Information about the system which is licensed.",
                                                        "type": "string"
                                                    },
                                                    "UpdatedLicenseVersion": {
                                                        "description": "The updated version of the license.  A value in this field indicates that the update has not been confirmed.",
                                                        "type": "string"
                                                    },
                                                    "VoucherCode": {
                                                        "description": "The voucher code that generated the license.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Gets a list of licenses with the specified criteria.",
                "tags": [
                    "Licenses"
                ]
            }
        },
        "/api/v2/Licenses/{ID}": {
            "get": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "parameters": [
                    {
                        "description": "The ID of the license to get.",
                        "in": "path",
                        "name": "ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Active": {
                                            "description": "True if license is active.",
                                            "type": "boolean"
                                        },
                                        "CreatedDate": {
                                            "description": "The date the license was created.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "DeactivatedDate": {
                                            "description": "The date the license was deactivated.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "LicenseActivationType": {
                                            "description": "The type of license (e.g. EDT, EDT Lite)",
                                            "enum": [
                                                "EDT",
                                                "EDTLite"
                                            ],
                                            "type": "string"
                                        },
                                        "LicenseID": {
                                            "description": "The LicenseID",
                                            "type": "string"
                                        },
                                        "LicenseVersion": {
                                            "description": "The version of the license.",
                                            "type": "string"
                                        },
                                        "RefreshDate": {
                                            "description": "The date the license was refreshed.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "SystemInfo": {
                                            "description": "Information about the system which is licensed.",
                                            "type": "string"
                                        },
                                        "UpdatedLicenseVersion": {
                                            "description": "The updated version of the license.  A value in this field indicates that the update has not been confirmed.",
                                            "type": "string"
                                        },
                                        "VoucherCode": {
                                            "description": "The voucher code that generated the license.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "Active": {
                                            "description": "True if license is active.",
                                            "type": "boolean"
                                        },
                                        "CreatedDate": {
                                            "description": "The date the license was created.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "DeactivatedDate": {
                                            "description": "The date the license was deactivated.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "LicenseActivationType": {
                                            "description": "The type of license (e.g. EDT, EDT Lite)",
                                            "enum": [
                                                "EDT",
                                                "EDTLite"
                                            ],
                                            "type": "string"
                                        },
                                        "LicenseID": {
                                            "description": "The LicenseID",
                                            "type": "string"
                                        },
                                        "LicenseVersion": {
                                            "description": "The version of the license.",
                                            "type": "string"
                                        },
                                        "RefreshDate": {
                                            "description": "The date the license was refreshed.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "SystemInfo": {
                                            "description": "Information about the system which is licensed.",
                                            "type": "string"
                                        },
                                        "UpdatedLicenseVersion": {
                                            "description": "The updated version of the license.  A value in this field indicates that the update has not been confirmed.",
                                            "type": "string"
                                        },
                                        "VoucherCode": {
                                            "description": "The voucher code that generated the license.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "Active": {
                                            "description": "True if license is active.",
                                            "type": "boolean"
                                        },
                                        "CreatedDate": {
                                            "description": "The date the license was created.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "DeactivatedDate": {
                                            "description": "The date the license was deactivated.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "LicenseActivationType": {
                                            "description": "The type of license (e.g. EDT, EDT Lite)",
                                            "enum": [
                                                "EDT",
                                                "EDTLite"
                                            ],
                                            "type": "string"
                                        },
                                        "LicenseID": {
                                            "description": "The LicenseID",
                                            "type": "string"
                                        },
                                        "LicenseVersion": {
                                            "description": "The version of the license.",
                                            "type": "string"
                                        },
                                        "RefreshDate": {
                                            "description": "The date the license was refreshed.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "SystemInfo": {
                                            "description": "Information about the system which is licensed.",
                                            "type": "string"
                                        },
                                        "UpdatedLicenseVersion": {
                                            "description": "The updated version of the license.  A value in this field indicates that the update has not been confirmed.",
                                            "type": "string"
                                        },
                                        "VoucherCode": {
                                            "description": "The voucher code that generated the license.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "Active": {
                                            "description": "True if license is active.",
                                            "type": "boolean"
                                        },
                                        "CreatedDate": {
                                            "description": "The date the license was created.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "DeactivatedDate": {
                                            "description": "The date the license was deactivated.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "LicenseActivationType": {
                                            "description": "The type of license (e.g. EDT, EDT Lite)",
                                            "enum": [
                                                "EDT",
                                                "EDTLite"
                                            ],
                                            "type": "string"
                                        },
                                        "LicenseID": {
                                            "description": "The LicenseID",
                                            "type": "string"
                                        },
                                        "LicenseVersion": {
                                            "description": "The version of the license.",
                                            "type": "string"
                                        },
                                        "RefreshDate": {
                                            "description": "The date the license was refreshed.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "SystemInfo": {
                                            "description": "Information about the system which is licensed.",
                                            "type": "string"
                                        },
                                        "UpdatedLicenseVersion": {
                                            "description": "The updated version of the license.  A value in this field indicates that the update has not been confirmed.",
                                            "type": "string"
                                        },
                                        "VoucherCode": {
                                            "description": "The voucher code that generated the license.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get a license.",
                "tags": [
                    "Licenses"
                ]
            }
        },
        "/api/v2/Logs": {
            "get": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "Logs_GetLogs",
                "parameters": [
                    {
                        "description": "Optional. The page limit. The default page limit is 10.",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "Optional. The page offset. The default page offset is 0.",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "properties": {
                                                    "ID": {
                                                        "type": "string"
                                                    },
                                                    "Message": {
                                                        "type": "string"
                                                    },
                                                    "TimeStamp": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "properties": {
                                                    "ID": {
                                                        "type": "string"
                                                    },
                                                    "Message": {
                                                        "type": "string"
                                                    },
                                                    "TimeStamp": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get the API System logs, most recent first.",
                "tags": [
                    "Logs"
                ]
            },
            "post": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "Logs_PostLog",
                "parameters": [
                    {
                        "description": "Message to enter into the log",
                        "in": "query",
                        "name": "Message",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Add a Log entry",
                "tags": [
                    "Logs"
                ]
            }
        },
        "/api/v2/Logs/{ID}": {
            "get": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "Logs_GetLog",
                "parameters": [
                    {
                        "description": "The Log ID",
                        "in": "path",
                        "name": "ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "ID": {
                                            "type": "string"
                                        },
                                        "Message": {
                                            "type": "string"
                                        },
                                        "TimeStamp": {
                                            "format": "date-time",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "ID": {
                                            "type": "string"
                                        },
                                        "Message": {
                                            "type": "string"
                                        },
                                        "TimeStamp": {
                                            "format": "date-time",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "ID": {
                                            "type": "string"
                                        },
                                        "Message": {
                                            "type": "string"
                                        },
                                        "TimeStamp": {
                                            "format": "date-time",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "ID": {
                                            "type": "string"
                                        },
                                        "Message": {
                                            "type": "string"
                                        },
                                        "TimeStamp": {
                                            "format": "date-time",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get a log by ID",
                "tags": [
                    "Logs"
                ]
            }
        },
        "/api/v2/Notifications": {
            "post": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "Notifications_PostMail",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Sends an email message.",
                "tags": [
                    "Notifications"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "CC_Addresses": {
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "IsBodyHtml": {
                                        "type": "boolean"
                                    },
                                    "MessageBody": {
                                        "type": "string"
                                    },
                                    "Subject": {
                                        "type": "string"
                                    },
                                    "To_Addresses": {
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "To_Addresses",
                                    "Subject",
                                    "MessageBody",
                                    "IsBodyHtml"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "CC_Addresses": {
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "IsBodyHtml": {
                                        "type": "boolean"
                                    },
                                    "MessageBody": {
                                        "type": "string"
                                    },
                                    "Subject": {
                                        "type": "string"
                                    },
                                    "To_Addresses": {
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "To_Addresses",
                                    "Subject",
                                    "MessageBody",
                                    "IsBodyHtml"
                                ],
                                "type": "object"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "properties": {
                                    "CC_Addresses": {
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "IsBodyHtml": {
                                        "type": "boolean"
                                    },
                                    "MessageBody": {
                                        "type": "string"
                                    },
                                    "Subject": {
                                        "type": "string"
                                    },
                                    "To_Addresses": {
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "To_Addresses",
                                    "Subject",
                                    "MessageBody",
                                    "IsBodyHtml"
                                ],
                                "type": "object"
                            }
                        },
                        "text/xml": {
                            "schema": {
                                "properties": {
                                    "CC_Addresses": {
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "IsBodyHtml": {
                                        "type": "boolean"
                                    },
                                    "MessageBody": {
                                        "type": "string"
                                    },
                                    "Subject": {
                                        "type": "string"
                                    },
                                    "To_Addresses": {
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "To_Addresses",
                                    "Subject",
                                    "MessageBody",
                                    "IsBodyHtml"
                                ],
                                "type": "object"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "CC_Addresses": {
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "IsBodyHtml": {
                                        "type": "boolean"
                                    },
                                    "MessageBody": {
                                        "type": "string"
                                    },
                                    "Subject": {
                                        "type": "string"
                                    },
                                    "To_Addresses": {
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "To_Addresses",
                                    "Subject",
                                    "MessageBody",
                                    "IsBodyHtml"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The Notification Object.",
                    "required": true
                }
            }
        },
        "/api/v2/PackageTypes": {
            "get": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "parameters": [
                    {
                        "description": "Optional. The page limit. The default page limit is 10.",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "Optional. The page offset. The default page offset is 0.",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "properties": {
                                                    "Attribute": {
                                                        "description": "The inventory attribute (from the InventoryPackage) used to determine what version of this package type is installed.",
                                                        "type": "string"
                                                    },
                                                    "Category": {
                                                        "description": "The inventory category (from the InventoryPackage) used to determine what version of this package type is installed.",
                                                        "type": "string"
                                                    },
                                                    "Description": {
                                                        "description": "The description of the package type",
                                                        "type": "string"
                                                    },
                                                    "Icon": {
                                                        "description": "Optional.  The icon to use for the PackageType, in base 64",
                                                        "type": "string"
                                                    },
                                                    "InventoryFrequency": {
                                                        "description": "The number of minutes to wait before requesting another inventory.  The default value is 1440 (24 hours).",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "InventoryPackage": {
                                                        "description": "The inventory package used to determine what version of this package type is installed.",
                                                        "type": "string"
                                                    },
                                                    "LocalizedDescription": {
                                                        "description": "Optional. The StringID used to localize the description of the PackageType",
                                                        "type": "string"
                                                    },
                                                    "LocalizedName": {
                                                        "description": "Optional. The StringID used to localize the name of the PackageType",
                                                        "type": "string"
                                                    },
                                                    "MaxDeltaPackages": {
                                                        "description": "The maximum number of \"chained\" delta packages to use when updating the client",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "PackageTypeID": {
                                                        "description": "Read Only. The package type id.",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "Description"
                                                ],
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "properties": {
                                                    "Attribute": {
                                                        "description": "The inventory attribute (from the InventoryPackage) used to determine what version of this package type is installed.",
                                                        "type": "string"
                                                    },
                                                    "Category": {
                                                        "description": "The inventory category (from the InventoryPackage) used to determine what version of this package type is installed.",
                                                        "type": "string"
                                                    },
                                                    "Description": {
                                                        "description": "The description of the package type",
                                                        "type": "string"
                                                    },
                                                    "Icon": {
                                                        "description": "Optional.  The icon to use for the PackageType, in base 64",
                                                        "type": "string"
                                                    },
                                                    "InventoryFrequency": {
                                                        "description": "The number of minutes to wait before requesting another inventory.  The default value is 1440 (24 hours).",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "InventoryPackage": {
                                                        "description": "The inventory package used to determine what version of this package type is installed.",
                                                        "type": "string"
                                                    },
                                                    "LocalizedDescription": {
                                                        "description": "Optional. The StringID used to localize the description of the PackageType",
                                                        "type": "string"
                                                    },
                                                    "LocalizedName": {
                                                        "description": "Optional. The StringID used to localize the name of the PackageType",
                                                        "type": "string"
                                                    },
                                                    "MaxDeltaPackages": {
                                                        "description": "The maximum number of \"chained\" delta packages to use when updating the client",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "PackageTypeID": {
                                                        "description": "Read Only. The package type id.",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "Description"
                                                ],
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get all of the Package Types.",
                "tags": [
                    "PackageTypes"
                ]
            },
            "post": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "PackageTypes_Post",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Add a Package Type.",
                "tags": [
                    "PackageTypes"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Attribute": {
                                        "description": "The inventory attribute (from the InventoryPackage) used to determine what version of this package type is installed.",
                                        "type": "string"
                                    },
                                    "Category": {
                                        "description": "The inventory category (from the InventoryPackage) used to determine what version of this package type is installed.",
                                        "type": "string"
                                    },
                                    "Description": {
                                        "description": "The description of the package type",
                                        "type": "string"
                                    },
                                    "Icon": {
                                        "description": "Optional.  The icon to use for the PackageType, in base 64",
                                        "type": "string"
                                    },
                                    "InventoryFrequency": {
                                        "description": "The number of minutes to wait before requesting another inventory.  The default value is 1440 (24 hours).",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "InventoryPackage": {
                                        "description": "The inventory package used to determine what version of this package type is installed.",
                                        "type": "string"
                                    },
                                    "LocalizedDescription": {
                                        "description": "Optional. The StringID used to localize the description of the PackageType",
                                        "type": "string"
                                    },
                                    "LocalizedName": {
                                        "description": "Optional. The StringID used to localize the name of the PackageType",
                                        "type": "string"
                                    },
                                    "MaxDeltaPackages": {
                                        "description": "The maximum number of \"chained\" delta packages to use when updating the client",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "PackageTypeID": {
                                        "description": "Read Only. The package type id.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Description"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "Attribute": {
                                        "description": "The inventory attribute (from the InventoryPackage) used to determine what version of this package type is installed.",
                                        "type": "string"
                                    },
                                    "Category": {
                                        "description": "The inventory category (from the InventoryPackage) used to determine what version of this package type is installed.",
                                        "type": "string"
                                    },
                                    "Description": {
                                        "description": "The description of the package type",
                                        "type": "string"
                                    },
                                    "Icon": {
                                        "description": "Optional.  The icon to use for the PackageType, in base 64",
                                        "type": "string"
                                    },
                                    "InventoryFrequency": {
                                        "description": "The number of minutes to wait before requesting another inventory.  The default value is 1440 (24 hours).",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "InventoryPackage": {
                                        "description": "The inventory package used to determine what version of this package type is installed.",
                                        "type": "string"
                                    },
                                    "LocalizedDescription": {
                                        "description": "Optional. The StringID used to localize the description of the PackageType",
                                        "type": "string"
                                    },
                                    "LocalizedName": {
                                        "description": "Optional. The StringID used to localize the name of the PackageType",
                                        "type": "string"
                                    },
                                    "MaxDeltaPackages": {
                                        "description": "The maximum number of \"chained\" delta packages to use when updating the client",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "PackageTypeID": {
                                        "description": "Read Only. The package type id.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Description"
                                ],
                                "type": "object"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "properties": {
                                    "Attribute": {
                                        "description": "The inventory attribute (from the InventoryPackage) used to determine what version of this package type is installed.",
                                        "type": "string"
                                    },
                                    "Category": {
                                        "description": "The inventory category (from the InventoryPackage) used to determine what version of this package type is installed.",
                                        "type": "string"
                                    },
                                    "Description": {
                                        "description": "The description of the package type",
                                        "type": "string"
                                    },
                                    "Icon": {
                                        "description": "Optional.  The icon to use for the PackageType, in base 64",
                                        "type": "string"
                                    },
                                    "InventoryFrequency": {
                                        "description": "The number of minutes to wait before requesting another inventory.  The default value is 1440 (24 hours).",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "InventoryPackage": {
                                        "description": "The inventory package used to determine what version of this package type is installed.",
                                        "type": "string"
                                    },
                                    "LocalizedDescription": {
                                        "description": "Optional. The StringID used to localize the description of the PackageType",
                                        "type": "string"
                                    },
                                    "LocalizedName": {
                                        "description": "Optional. The StringID used to localize the name of the PackageType",
                                        "type": "string"
                                    },
                                    "MaxDeltaPackages": {
                                        "description": "The maximum number of \"chained\" delta packages to use when updating the client",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "PackageTypeID": {
                                        "description": "Read Only. The package type id.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Description"
                                ],
                                "type": "object"
                            }
                        },
                        "text/xml": {
                            "schema": {
                                "properties": {
                                    "Attribute": {
                                        "description": "The inventory attribute (from the InventoryPackage) used to determine what version of this package type is installed.",
                                        "type": "string"
                                    },
                                    "Category": {
                                        "description": "The inventory category (from the InventoryPackage) used to determine what version of this package type is installed.",
                                        "type": "string"
                                    },
                                    "Description": {
                                        "description": "The description of the package type",
                                        "type": "string"
                                    },
                                    "Icon": {
                                        "description": "Optional.  The icon to use for the PackageType, in base 64",
                                        "type": "string"
                                    },
                                    "InventoryFrequency": {
                                        "description": "The number of minutes to wait before requesting another inventory.  The default value is 1440 (24 hours).",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "InventoryPackage": {
                                        "description": "The inventory package used to determine what version of this package type is installed.",
                                        "type": "string"
                                    },
                                    "LocalizedDescription": {
                                        "description": "Optional. The StringID used to localize the description of the PackageType",
                                        "type": "string"
                                    },
                                    "LocalizedName": {
                                        "description": "Optional. The StringID used to localize the name of the PackageType",
                                        "type": "string"
                                    },
                                    "MaxDeltaPackages": {
                                        "description": "The maximum number of \"chained\" delta packages to use when updating the client",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "PackageTypeID": {
                                        "description": "Read Only. The package type id.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Description"
                                ],
                                "type": "object"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "Attribute": {
                                        "description": "The inventory attribute (from the InventoryPackage) used to determine what version of this package type is installed.",
                                        "type": "string"
                                    },
                                    "Category": {
                                        "description": "The inventory category (from the InventoryPackage) used to determine what version of this package type is installed.",
                                        "type": "string"
                                    },
                                    "Description": {
                                        "description": "The description of the package type",
                                        "type": "string"
                                    },
                                    "Icon": {
                                        "description": "Optional.  The icon to use for the PackageType, in base 64",
                                        "type": "string"
                                    },
                                    "InventoryFrequency": {
                                        "description": "The number of minutes to wait before requesting another inventory.  The default value is 1440 (24 hours).",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "InventoryPackage": {
                                        "description": "The inventory package used to determine what version of this package type is installed.",
                                        "type": "string"
                                    },
                                    "LocalizedDescription": {
                                        "description": "Optional. The StringID used to localize the description of the PackageType",
                                        "type": "string"
                                    },
                                    "LocalizedName": {
                                        "description": "Optional. The StringID used to localize the name of the PackageType",
                                        "type": "string"
                                    },
                                    "MaxDeltaPackages": {
                                        "description": "The maximum number of \"chained\" delta packages to use when updating the client",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "PackageTypeID": {
                                        "description": "Read Only. The package type id.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Description"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The Package Type to add",
                    "required": true
                }
            }
        },
        "/api/v2/PackageTypes/{ID}": {
            "delete": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "PackageTypes_Delete",
                "parameters": [
                    {
                        "description": "The Package Type ID",
                        "in": "path",
                        "name": "ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Delete a Package Type.",
                "tags": [
                    "PackageTypes"
                ]
            },
            "get": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "parameters": [
                    {
                        "description": "The Package Type ID",
                        "in": "path",
                        "name": "ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Attribute": {
                                            "description": "The inventory attribute (from the InventoryPackage) used to determine what version of this package type is installed.",
                                            "type": "string"
                                        },
                                        "Category": {
                                            "description": "The inventory category (from the InventoryPackage) used to determine what version of this package type is installed.",
                                            "type": "string"
                                        },
                                        "Description": {
                                            "description": "The description of the package type",
                                            "type": "string"
                                        },
                                        "Icon": {
                                            "description": "Optional.  The icon to use for the PackageType, in base 64",
                                            "type": "string"
                                        },
                                        "InventoryFrequency": {
                                            "description": "The number of minutes to wait before requesting another inventory.  The default value is 1440 (24 hours).",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "InventoryPackage": {
                                            "description": "The inventory package used to determine what version of this package type is installed.",
                                            "type": "string"
                                        },
                                        "LocalizedDescription": {
                                            "description": "Optional. The StringID used to localize the description of the PackageType",
                                            "type": "string"
                                        },
                                        "LocalizedName": {
                                            "description": "Optional. The StringID used to localize the name of the PackageType",
                                            "type": "string"
                                        },
                                        "MaxDeltaPackages": {
                                            "description": "The maximum number of \"chained\" delta packages to use when updating the client",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "PackageTypeID": {
                                            "description": "Read Only. The package type id.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "Description"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "Attribute": {
                                            "description": "The inventory attribute (from the InventoryPackage) used to determine what version of this package type is installed.",
                                            "type": "string"
                                        },
                                        "Category": {
                                            "description": "The inventory category (from the InventoryPackage) used to determine what version of this package type is installed.",
                                            "type": "string"
                                        },
                                        "Description": {
                                            "description": "The description of the package type",
                                            "type": "string"
                                        },
                                        "Icon": {
                                            "description": "Optional.  The icon to use for the PackageType, in base 64",
                                            "type": "string"
                                        },
                                        "InventoryFrequency": {
                                            "description": "The number of minutes to wait before requesting another inventory.  The default value is 1440 (24 hours).",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "InventoryPackage": {
                                            "description": "The inventory package used to determine what version of this package type is installed.",
                                            "type": "string"
                                        },
                                        "LocalizedDescription": {
                                            "description": "Optional. The StringID used to localize the description of the PackageType",
                                            "type": "string"
                                        },
                                        "LocalizedName": {
                                            "description": "Optional. The StringID used to localize the name of the PackageType",
                                            "type": "string"
                                        },
                                        "MaxDeltaPackages": {
                                            "description": "The maximum number of \"chained\" delta packages to use when updating the client",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "PackageTypeID": {
                                            "description": "Read Only. The package type id.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "Description"
                                    ],
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "Attribute": {
                                            "description": "The inventory attribute (from the InventoryPackage) used to determine what version of this package type is installed.",
                                            "type": "string"
                                        },
                                        "Category": {
                                            "description": "The inventory category (from the InventoryPackage) used to determine what version of this package type is installed.",
                                            "type": "string"
                                        },
                                        "Description": {
                                            "description": "The description of the package type",
                                            "type": "string"
                                        },
                                        "Icon": {
                                            "description": "Optional.  The icon to use for the PackageType, in base 64",
                                            "type": "string"
                                        },
                                        "InventoryFrequency": {
                                            "description": "The number of minutes to wait before requesting another inventory.  The default value is 1440 (24 hours).",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "InventoryPackage": {
                                            "description": "The inventory package used to determine what version of this package type is installed.",
                                            "type": "string"
                                        },
                                        "LocalizedDescription": {
                                            "description": "Optional. The StringID used to localize the description of the PackageType",
                                            "type": "string"
                                        },
                                        "LocalizedName": {
                                            "description": "Optional. The StringID used to localize the name of the PackageType",
                                            "type": "string"
                                        },
                                        "MaxDeltaPackages": {
                                            "description": "The maximum number of \"chained\" delta packages to use when updating the client",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "PackageTypeID": {
                                            "description": "Read Only. The package type id.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "Description"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "Attribute": {
                                            "description": "The inventory attribute (from the InventoryPackage) used to determine what version of this package type is installed.",
                                            "type": "string"
                                        },
                                        "Category": {
                                            "description": "The inventory category (from the InventoryPackage) used to determine what version of this package type is installed.",
                                            "type": "string"
                                        },
                                        "Description": {
                                            "description": "The description of the package type",
                                            "type": "string"
                                        },
                                        "Icon": {
                                            "description": "Optional.  The icon to use for the PackageType, in base 64",
                                            "type": "string"
                                        },
                                        "InventoryFrequency": {
                                            "description": "The number of minutes to wait before requesting another inventory.  The default value is 1440 (24 hours).",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "InventoryPackage": {
                                            "description": "The inventory package used to determine what version of this package type is installed.",
                                            "type": "string"
                                        },
                                        "LocalizedDescription": {
                                            "description": "Optional. The StringID used to localize the description of the PackageType",
                                            "type": "string"
                                        },
                                        "LocalizedName": {
                                            "description": "Optional. The StringID used to localize the name of the PackageType",
                                            "type": "string"
                                        },
                                        "MaxDeltaPackages": {
                                            "description": "The maximum number of \"chained\" delta packages to use when updating the client",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "PackageTypeID": {
                                            "description": "Read Only. The package type id.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "Description"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get a specific Package Type.",
                "tags": [
                    "PackageTypes"
                ]
            },
            "put": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "PackageTypes_Put",
                "parameters": [
                    {
                        "description": "The ID of the Package Type",
                        "in": "path",
                        "name": "ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Modify a Package Type.",
                "tags": [
                    "PackageTypes"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Attribute": {
                                        "description": "The inventory attribute (from the InventoryPackage) used to determine what version of this package type is installed.",
                                        "type": "string"
                                    },
                                    "Category": {
                                        "description": "The inventory category (from the InventoryPackage) used to determine what version of this package type is installed.",
                                        "type": "string"
                                    },
                                    "Description": {
                                        "description": "The description of the package type",
                                        "type": "string"
                                    },
                                    "Icon": {
                                        "description": "Optional.  The icon to use for the PackageType, in base 64",
                                        "type": "string"
                                    },
                                    "InventoryFrequency": {
                                        "description": "The number of minutes to wait before requesting another inventory.  The default value is 1440 (24 hours).",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "InventoryPackage": {
                                        "description": "The inventory package used to determine what version of this package type is installed.",
                                        "type": "string"
                                    },
                                    "LocalizedDescription": {
                                        "description": "Optional. The StringID used to localize the description of the PackageType",
                                        "type": "string"
                                    },
                                    "LocalizedName": {
                                        "description": "Optional. The StringID used to localize the name of the PackageType",
                                        "type": "string"
                                    },
                                    "MaxDeltaPackages": {
                                        "description": "The maximum number of \"chained\" delta packages to use when updating the client",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "PackageTypeID": {
                                        "description": "Read Only. The package type id.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Description"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "Attribute": {
                                        "description": "The inventory attribute (from the InventoryPackage) used to determine what version of this package type is installed.",
                                        "type": "string"
                                    },
                                    "Category": {
                                        "description": "The inventory category (from the InventoryPackage) used to determine what version of this package type is installed.",
                                        "type": "string"
                                    },
                                    "Description": {
                                        "description": "The description of the package type",
                                        "type": "string"
                                    },
                                    "Icon": {
                                        "description": "Optional.  The icon to use for the PackageType, in base 64",
                                        "type": "string"
                                    },
                                    "InventoryFrequency": {
                                        "description": "The number of minutes to wait before requesting another inventory.  The default value is 1440 (24 hours).",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "InventoryPackage": {
                                        "description": "The inventory package used to determine what version of this package type is installed.",
                                        "type": "string"
                                    },
                                    "LocalizedDescription": {
                                        "description": "Optional. The StringID used to localize the description of the PackageType",
                                        "type": "string"
                                    },
                                    "LocalizedName": {
                                        "description": "Optional. The StringID used to localize the name of the PackageType",
                                        "type": "string"
                                    },
                                    "MaxDeltaPackages": {
                                        "description": "The maximum number of \"chained\" delta packages to use when updating the client",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "PackageTypeID": {
                                        "description": "Read Only. The package type id.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Description"
                                ],
                                "type": "object"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "properties": {
                                    "Attribute": {
                                        "description": "The inventory attribute (from the InventoryPackage) used to determine what version of this package type is installed.",
                                        "type": "string"
                                    },
                                    "Category": {
                                        "description": "The inventory category (from the InventoryPackage) used to determine what version of this package type is installed.",
                                        "type": "string"
                                    },
                                    "Description": {
                                        "description": "The description of the package type",
                                        "type": "string"
                                    },
                                    "Icon": {
                                        "description": "Optional.  The icon to use for the PackageType, in base 64",
                                        "type": "string"
                                    },
                                    "InventoryFrequency": {
                                        "description": "The number of minutes to wait before requesting another inventory.  The default value is 1440 (24 hours).",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "InventoryPackage": {
                                        "description": "The inventory package used to determine what version of this package type is installed.",
                                        "type": "string"
                                    },
                                    "LocalizedDescription": {
                                        "description": "Optional. The StringID used to localize the description of the PackageType",
                                        "type": "string"
                                    },
                                    "LocalizedName": {
                                        "description": "Optional. The StringID used to localize the name of the PackageType",
                                        "type": "string"
                                    },
                                    "MaxDeltaPackages": {
                                        "description": "The maximum number of \"chained\" delta packages to use when updating the client",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "PackageTypeID": {
                                        "description": "Read Only. The package type id.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Description"
                                ],
                                "type": "object"
                            }
                        },
                        "text/xml": {
                            "schema": {
                                "properties": {
                                    "Attribute": {
                                        "description": "The inventory attribute (from the InventoryPackage) used to determine what version of this package type is installed.",
                                        "type": "string"
                                    },
                                    "Category": {
                                        "description": "The inventory category (from the InventoryPackage) used to determine what version of this package type is installed.",
                                        "type": "string"
                                    },
                                    "Description": {
                                        "description": "The description of the package type",
                                        "type": "string"
                                    },
                                    "Icon": {
                                        "description": "Optional.  The icon to use for the PackageType, in base 64",
                                        "type": "string"
                                    },
                                    "InventoryFrequency": {
                                        "description": "The number of minutes to wait before requesting another inventory.  The default value is 1440 (24 hours).",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "InventoryPackage": {
                                        "description": "The inventory package used to determine what version of this package type is installed.",
                                        "type": "string"
                                    },
                                    "LocalizedDescription": {
                                        "description": "Optional. The StringID used to localize the description of the PackageType",
                                        "type": "string"
                                    },
                                    "LocalizedName": {
                                        "description": "Optional. The StringID used to localize the name of the PackageType",
                                        "type": "string"
                                    },
                                    "MaxDeltaPackages": {
                                        "description": "The maximum number of \"chained\" delta packages to use when updating the client",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "PackageTypeID": {
                                        "description": "Read Only. The package type id.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Description"
                                ],
                                "type": "object"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "Attribute": {
                                        "description": "The inventory attribute (from the InventoryPackage) used to determine what version of this package type is installed.",
                                        "type": "string"
                                    },
                                    "Category": {
                                        "description": "The inventory category (from the InventoryPackage) used to determine what version of this package type is installed.",
                                        "type": "string"
                                    },
                                    "Description": {
                                        "description": "The description of the package type",
                                        "type": "string"
                                    },
                                    "Icon": {
                                        "description": "Optional.  The icon to use for the PackageType, in base 64",
                                        "type": "string"
                                    },
                                    "InventoryFrequency": {
                                        "description": "The number of minutes to wait before requesting another inventory.  The default value is 1440 (24 hours).",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "InventoryPackage": {
                                        "description": "The inventory package used to determine what version of this package type is installed.",
                                        "type": "string"
                                    },
                                    "LocalizedDescription": {
                                        "description": "Optional. The StringID used to localize the description of the PackageType",
                                        "type": "string"
                                    },
                                    "LocalizedName": {
                                        "description": "Optional. The StringID used to localize the name of the PackageType",
                                        "type": "string"
                                    },
                                    "MaxDeltaPackages": {
                                        "description": "The maximum number of \"chained\" delta packages to use when updating the client",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "PackageTypeID": {
                                        "description": "Read Only. The package type id.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Description"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The Package Type to update",
                    "required": true
                }
            }
        },
        "/api/v2/PackageTypetoBundles": {
            "delete": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "PackageTypetoBundles_Delete",
                "parameters": [
                    {
                        "description": "The BundleID",
                        "in": "query",
                        "name": "BundleID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The PackageTypeID",
                        "in": "query",
                        "name": "PackageTypeID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Delete a Package Type to Bundle Relationship.",
                "tags": [
                    "PackageTypetoBundles"
                ]
            },
            "get": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "PackageTypetoBundles_Get",
                "parameters": [
                    {
                        "description": "Optional. Filter by BundleID.",
                        "in": "query",
                        "name": "BundleID",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Optional. The page limit. The default page limit is 10.",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "Optional. The page offset. The default page offset is 0.",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "properties": {
                                                    "BundleID": {
                                                        "description": "The bundle to include the package in.",
                                                        "type": "string"
                                                    },
                                                    "PackageTypeID": {
                                                        "description": "The package type id of the package to include",
                                                        "type": "string"
                                                    },
                                                    "PackageVersion": {
                                                        "description": "The package version of the package to include",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "Priority": {
                                                        "description": "The execution priority of the package relative to other packages in the bundle. Range 1 - 100, lower value indication higher priority.",
                                                        "format": "int32",
                                                        "maximum": 100,
                                                        "minimum": 1,
                                                        "type": "integer"
                                                    },
                                                    "SubscriptionType": {
                                                        "description": "Optional. The type of subscription supported.  The default subscription type is Required.",
                                                        "enum": [
                                                            "Required",
                                                            "IncludeByDefault",
                                                            "ExcludeByDefault"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "BundleID",
                                                    "PackageTypeID",
                                                    "PackageVersion"
                                                ],
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "properties": {
                                                    "BundleID": {
                                                        "description": "The bundle to include the package in.",
                                                        "type": "string"
                                                    },
                                                    "PackageTypeID": {
                                                        "description": "The package type id of the package to include",
                                                        "type": "string"
                                                    },
                                                    "PackageVersion": {
                                                        "description": "The package version of the package to include",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "Priority": {
                                                        "description": "The execution priority of the package relative to other packages in the bundle. Range 1 - 100, lower value indication higher priority.",
                                                        "format": "int32",
                                                        "maximum": 100,
                                                        "minimum": 1,
                                                        "type": "integer"
                                                    },
                                                    "SubscriptionType": {
                                                        "description": "Optional. The type of subscription supported.  The default subscription type is Required.",
                                                        "enum": [
                                                            "Required",
                                                            "IncludeByDefault",
                                                            "ExcludeByDefault"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "BundleID",
                                                    "PackageTypeID",
                                                    "PackageVersion"
                                                ],
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get all of the Package Type to Bundle Relationships.",
                "tags": [
                    "PackageTypetoBundles"
                ]
            },
            "post": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "PackageTypetoBundles_Post",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Add a new Package Type ID to Bundle Relationship.",
                "tags": [
                    "PackageTypetoBundles"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "BundleID": {
                                        "description": "The bundle to include the package in.",
                                        "type": "string"
                                    },
                                    "PackageTypeID": {
                                        "description": "The package type id of the package to include",
                                        "type": "string"
                                    },
                                    "PackageVersion": {
                                        "description": "The package version of the package to include",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Priority": {
                                        "description": "The execution priority of the package relative to other packages in the bundle. Range 1 - 100, lower value indication higher priority.",
                                        "format": "int32",
                                        "maximum": 100,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "SubscriptionType": {
                                        "description": "Optional. The type of subscription supported.  The default subscription type is Required.",
                                        "enum": [
                                            "Required",
                                            "IncludeByDefault",
                                            "ExcludeByDefault"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "BundleID",
                                    "PackageTypeID",
                                    "PackageVersion"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "BundleID": {
                                        "description": "The bundle to include the package in.",
                                        "type": "string"
                                    },
                                    "PackageTypeID": {
                                        "description": "The package type id of the package to include",
                                        "type": "string"
                                    },
                                    "PackageVersion": {
                                        "description": "The package version of the package to include",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Priority": {
                                        "description": "The execution priority of the package relative to other packages in the bundle. Range 1 - 100, lower value indication higher priority.",
                                        "format": "int32",
                                        "maximum": 100,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "SubscriptionType": {
                                        "description": "Optional. The type of subscription supported.  The default subscription type is Required.",
                                        "enum": [
                                            "Required",
                                            "IncludeByDefault",
                                            "ExcludeByDefault"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "BundleID",
                                    "PackageTypeID",
                                    "PackageVersion"
                                ],
                                "type": "object"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "properties": {
                                    "BundleID": {
                                        "description": "The bundle to include the package in.",
                                        "type": "string"
                                    },
                                    "PackageTypeID": {
                                        "description": "The package type id of the package to include",
                                        "type": "string"
                                    },
                                    "PackageVersion": {
                                        "description": "The package version of the package to include",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Priority": {
                                        "description": "The execution priority of the package relative to other packages in the bundle. Range 1 - 100, lower value indication higher priority.",
                                        "format": "int32",
                                        "maximum": 100,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "SubscriptionType": {
                                        "description": "Optional. The type of subscription supported.  The default subscription type is Required.",
                                        "enum": [
                                            "Required",
                                            "IncludeByDefault",
                                            "ExcludeByDefault"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "BundleID",
                                    "PackageTypeID",
                                    "PackageVersion"
                                ],
                                "type": "object"
                            }
                        },
                        "text/xml": {
                            "schema": {
                                "properties": {
                                    "BundleID": {
                                        "description": "The bundle to include the package in.",
                                        "type": "string"
                                    },
                                    "PackageTypeID": {
                                        "description": "The package type id of the package to include",
                                        "type": "string"
                                    },
                                    "PackageVersion": {
                                        "description": "The package version of the package to include",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Priority": {
                                        "description": "The execution priority of the package relative to other packages in the bundle. Range 1 - 100, lower value indication higher priority.",
                                        "format": "int32",
                                        "maximum": 100,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "SubscriptionType": {
                                        "description": "Optional. The type of subscription supported.  The default subscription type is Required.",
                                        "enum": [
                                            "Required",
                                            "IncludeByDefault",
                                            "ExcludeByDefault"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "BundleID",
                                    "PackageTypeID",
                                    "PackageVersion"
                                ],
                                "type": "object"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "BundleID": {
                                        "description": "The bundle to include the package in.",
                                        "type": "string"
                                    },
                                    "PackageTypeID": {
                                        "description": "The package type id of the package to include",
                                        "type": "string"
                                    },
                                    "PackageVersion": {
                                        "description": "The package version of the package to include",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Priority": {
                                        "description": "The execution priority of the package relative to other packages in the bundle. Range 1 - 100, lower value indication higher priority.",
                                        "format": "int32",
                                        "maximum": 100,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "SubscriptionType": {
                                        "description": "Optional. The type of subscription supported.  The default subscription type is Required.",
                                        "enum": [
                                            "Required",
                                            "IncludeByDefault",
                                            "ExcludeByDefault"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "BundleID",
                                    "PackageTypeID",
                                    "PackageVersion"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The PackageTypeToBundle to add.",
                    "required": true
                }
            },
            "put": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "PackageTypetoBundles_Put",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Update a Package Type ID to Bundle Relationship.",
                "tags": [
                    "PackageTypetoBundles"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "BundleID": {
                                        "description": "The bundle to include the package in.",
                                        "type": "string"
                                    },
                                    "PackageTypeID": {
                                        "description": "The package type id of the package to include",
                                        "type": "string"
                                    },
                                    "PackageVersion": {
                                        "description": "The package version of the package to include",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Priority": {
                                        "description": "The execution priority of the package relative to other packages in the bundle. Range 1 - 100, lower value indication higher priority.",
                                        "format": "int32",
                                        "maximum": 100,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "SubscriptionType": {
                                        "description": "Optional. The type of subscription supported.  The default subscription type is Required.",
                                        "enum": [
                                            "Required",
                                            "IncludeByDefault",
                                            "ExcludeByDefault"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "BundleID",
                                    "PackageTypeID",
                                    "PackageVersion"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "BundleID": {
                                        "description": "The bundle to include the package in.",
                                        "type": "string"
                                    },
                                    "PackageTypeID": {
                                        "description": "The package type id of the package to include",
                                        "type": "string"
                                    },
                                    "PackageVersion": {
                                        "description": "The package version of the package to include",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Priority": {
                                        "description": "The execution priority of the package relative to other packages in the bundle. Range 1 - 100, lower value indication higher priority.",
                                        "format": "int32",
                                        "maximum": 100,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "SubscriptionType": {
                                        "description": "Optional. The type of subscription supported.  The default subscription type is Required.",
                                        "enum": [
                                            "Required",
                                            "IncludeByDefault",
                                            "ExcludeByDefault"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "BundleID",
                                    "PackageTypeID",
                                    "PackageVersion"
                                ],
                                "type": "object"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "properties": {
                                    "BundleID": {
                                        "description": "The bundle to include the package in.",
                                        "type": "string"
                                    },
                                    "PackageTypeID": {
                                        "description": "The package type id of the package to include",
                                        "type": "string"
                                    },
                                    "PackageVersion": {
                                        "description": "The package version of the package to include",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Priority": {
                                        "description": "The execution priority of the package relative to other packages in the bundle. Range 1 - 100, lower value indication higher priority.",
                                        "format": "int32",
                                        "maximum": 100,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "SubscriptionType": {
                                        "description": "Optional. The type of subscription supported.  The default subscription type is Required.",
                                        "enum": [
                                            "Required",
                                            "IncludeByDefault",
                                            "ExcludeByDefault"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "BundleID",
                                    "PackageTypeID",
                                    "PackageVersion"
                                ],
                                "type": "object"
                            }
                        },
                        "text/xml": {
                            "schema": {
                                "properties": {
                                    "BundleID": {
                                        "description": "The bundle to include the package in.",
                                        "type": "string"
                                    },
                                    "PackageTypeID": {
                                        "description": "The package type id of the package to include",
                                        "type": "string"
                                    },
                                    "PackageVersion": {
                                        "description": "The package version of the package to include",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Priority": {
                                        "description": "The execution priority of the package relative to other packages in the bundle. Range 1 - 100, lower value indication higher priority.",
                                        "format": "int32",
                                        "maximum": 100,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "SubscriptionType": {
                                        "description": "Optional. The type of subscription supported.  The default subscription type is Required.",
                                        "enum": [
                                            "Required",
                                            "IncludeByDefault",
                                            "ExcludeByDefault"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "BundleID",
                                    "PackageTypeID",
                                    "PackageVersion"
                                ],
                                "type": "object"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "BundleID": {
                                        "description": "The bundle to include the package in.",
                                        "type": "string"
                                    },
                                    "PackageTypeID": {
                                        "description": "The package type id of the package to include",
                                        "type": "string"
                                    },
                                    "PackageVersion": {
                                        "description": "The package version of the package to include",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Priority": {
                                        "description": "The execution priority of the package relative to other packages in the bundle. Range 1 - 100, lower value indication higher priority.",
                                        "format": "int32",
                                        "maximum": 100,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "SubscriptionType": {
                                        "description": "Optional. The type of subscription supported.  The default subscription type is Required.",
                                        "enum": [
                                            "Required",
                                            "IncludeByDefault",
                                            "ExcludeByDefault"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "BundleID",
                                    "PackageTypeID",
                                    "PackageVersion"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The PackageTypeToBundle to update.",
                    "required": true
                }
            }
        },
        "/api/v2/Packages": {
            "get": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "Packages_GetPackages",
                "parameters": [
                    {
                        "description": "Optional. The page limit. The default page limit is 10.",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "Optional. The page offset. The default page offset is 0.",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "properties": {
                                                    "Autorun": {
                                                        "description": "Value is true if package should run automatically. Default value is false.",
                                                        "type": "boolean"
                                                    },
                                                    "CRC": {
                                                        "description": "The CRC used to validate the download.",
                                                        "type": "string"
                                                    },
                                                    "Description": {
                                                        "description": "The package description",
                                                        "type": "string"
                                                    },
                                                    "LocalizedName": {
                                                        "description": "Optional. The StringID used to localize the name of the Package",
                                                        "type": "string"
                                                    },
                                                    "Notes": {
                                                        "description": "Notes about the package",
                                                        "type": "string"
                                                    },
                                                    "PackageID": {
                                                        "description": "Read Only. The package ID",
                                                        "type": "string"
                                                    },
                                                    "PackageTypeID": {
                                                        "description": "The id of the package type this package belongs to.",
                                                        "type": "string"
                                                    },
                                                    "PreviousVersion": {
                                                        "description": "For delta packages, the previous version required.  For non-delta packages, the Previous version is 0.  Default value is 0.",
                                                        "format": "int32",
                                                        "maximum": 2147483647,
                                                        "minimum": 0,
                                                        "type": "integer"
                                                    },
                                                    "ReleaseDate": {
                                                        "description": "The date the package was released",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "Released": {
                                                        "description": "True if the package is released.  Default value is False.",
                                                        "type": "boolean"
                                                    },
                                                    "RemoveOnSuccess": {
                                                        "description": "True to remove the package after successful execution.  Default value is False.",
                                                        "type": "boolean"
                                                    },
                                                    "Size": {
                                                        "description": "The size of the file at the specified URL.  If a size is not supplied at creation time, the size will be determined by the response from the URL.\r\n            If the size provided does not match the size in the response from the URL an error will be returned.",
                                                        "format": "int64",
                                                        "type": "integer"
                                                    },
                                                    "Switches": {
                                                        "description": "The command line arguments for the package.  Default value is an empty string.",
                                                        "type": "string"
                                                    },
                                                    "Url": {
                                                        "description": "The Url to download the package from.",
                                                        "type": "string"
                                                    },
                                                    "Version": {
                                                        "description": "The version.",
                                                        "format": "int32",
                                                        "maximum": 2147483647,
                                                        "minimum": 1,
                                                        "type": "integer"
                                                    }
                                                },
                                                "required": [
                                                    "PackageTypeID",
                                                    "Url",
                                                    "CRC",
                                                    "Version",
                                                    "Description",
                                                    "ReleaseDate"
                                                ],
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "properties": {
                                                    "Autorun": {
                                                        "description": "Value is true if package should run automatically. Default value is false.",
                                                        "type": "boolean"
                                                    },
                                                    "CRC": {
                                                        "description": "The CRC used to validate the download.",
                                                        "type": "string"
                                                    },
                                                    "Description": {
                                                        "description": "The package description",
                                                        "type": "string"
                                                    },
                                                    "LocalizedName": {
                                                        "description": "Optional. The StringID used to localize the name of the Package",
                                                        "type": "string"
                                                    },
                                                    "Notes": {
                                                        "description": "Notes about the package",
                                                        "type": "string"
                                                    },
                                                    "PackageID": {
                                                        "description": "Read Only. The package ID",
                                                        "type": "string"
                                                    },
                                                    "PackageTypeID": {
                                                        "description": "The id of the package type this package belongs to.",
                                                        "type": "string"
                                                    },
                                                    "PreviousVersion": {
                                                        "description": "For delta packages, the previous version required.  For non-delta packages, the Previous version is 0.  Default value is 0.",
                                                        "format": "int32",
                                                        "maximum": 2147483647,
                                                        "minimum": 0,
                                                        "type": "integer"
                                                    },
                                                    "ReleaseDate": {
                                                        "description": "The date the package was released",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "Released": {
                                                        "description": "True if the package is released.  Default value is False.",
                                                        "type": "boolean"
                                                    },
                                                    "RemoveOnSuccess": {
                                                        "description": "True to remove the package after successful execution.  Default value is False.",
                                                        "type": "boolean"
                                                    },
                                                    "Size": {
                                                        "description": "The size of the file at the specified URL.  If a size is not supplied at creation time, the size will be determined by the response from the URL.\r\n            If the size provided does not match the size in the response from the URL an error will be returned.",
                                                        "format": "int64",
                                                        "type": "integer"
                                                    },
                                                    "Switches": {
                                                        "description": "The command line arguments for the package.  Default value is an empty string.",
                                                        "type": "string"
                                                    },
                                                    "Url": {
                                                        "description": "The Url to download the package from.",
                                                        "type": "string"
                                                    },
                                                    "Version": {
                                                        "description": "The version.",
                                                        "format": "int32",
                                                        "maximum": 2147483647,
                                                        "minimum": 1,
                                                        "type": "integer"
                                                    }
                                                },
                                                "required": [
                                                    "PackageTypeID",
                                                    "Url",
                                                    "CRC",
                                                    "Version",
                                                    "Description",
                                                    "ReleaseDate"
                                                ],
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "List Packages.",
                "tags": [
                    "Packages"
                ]
            },
            "post": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "Packages_PostPackage",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Add a Packge to the Update System.",
                "tags": [
                    "Packages"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Autorun": {
                                        "description": "Value is true if package should run automatically. Default value is false.",
                                        "type": "boolean"
                                    },
                                    "CRC": {
                                        "description": "The CRC used to validate the download.",
                                        "type": "string"
                                    },
                                    "Description": {
                                        "description": "The package description",
                                        "type": "string"
                                    },
                                    "LocalizedName": {
                                        "description": "Optional. The StringID used to localize the name of the Package",
                                        "type": "string"
                                    },
                                    "Notes": {
                                        "description": "Notes about the package",
                                        "type": "string"
                                    },
                                    "PackageID": {
                                        "description": "Read Only. The package ID",
                                        "type": "string"
                                    },
                                    "PackageTypeID": {
                                        "description": "The id of the package type this package belongs to.",
                                        "type": "string"
                                    },
                                    "PreviousVersion": {
                                        "description": "For delta packages, the previous version required.  For non-delta packages, the Previous version is 0.  Default value is 0.",
                                        "format": "int32",
                                        "maximum": 2147483647,
                                        "minimum": 0,
                                        "type": "integer"
                                    },
                                    "ReleaseDate": {
                                        "description": "The date the package was released",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Released": {
                                        "description": "True if the package is released.  Default value is False.",
                                        "type": "boolean"
                                    },
                                    "RemoveOnSuccess": {
                                        "description": "True to remove the package after successful execution.  Default value is False.",
                                        "type": "boolean"
                                    },
                                    "Size": {
                                        "description": "The size of the file at the specified URL.  If a size is not supplied at creation time, the size will be determined by the response from the URL.\r\n            If the size provided does not match the size in the response from the URL an error will be returned.",
                                        "format": "int64",
                                        "type": "integer"
                                    },
                                    "Switches": {
                                        "description": "The command line arguments for the package.  Default value is an empty string.",
                                        "type": "string"
                                    },
                                    "Url": {
                                        "description": "The Url to download the package from.",
                                        "type": "string"
                                    },
                                    "Version": {
                                        "description": "The version.",
                                        "format": "int32",
                                        "maximum": 2147483647,
                                        "minimum": 1,
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "PackageTypeID",
                                    "Url",
                                    "CRC",
                                    "Version",
                                    "Description",
                                    "ReleaseDate"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "Autorun": {
                                        "description": "Value is true if package should run automatically. Default value is false.",
                                        "type": "boolean"
                                    },
                                    "CRC": {
                                        "description": "The CRC used to validate the download.",
                                        "type": "string"
                                    },
                                    "Description": {
                                        "description": "The package description",
                                        "type": "string"
                                    },
                                    "LocalizedName": {
                                        "description": "Optional. The StringID used to localize the name of the Package",
                                        "type": "string"
                                    },
                                    "Notes": {
                                        "description": "Notes about the package",
                                        "type": "string"
                                    },
                                    "PackageID": {
                                        "description": "Read Only. The package ID",
                                        "type": "string"
                                    },
                                    "PackageTypeID": {
                                        "description": "The id of the package type this package belongs to.",
                                        "type": "string"
                                    },
                                    "PreviousVersion": {
                                        "description": "For delta packages, the previous version required.  For non-delta packages, the Previous version is 0.  Default value is 0.",
                                        "format": "int32",
                                        "maximum": 2147483647,
                                        "minimum": 0,
                                        "type": "integer"
                                    },
                                    "ReleaseDate": {
                                        "description": "The date the package was released",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Released": {
                                        "description": "True if the package is released.  Default value is False.",
                                        "type": "boolean"
                                    },
                                    "RemoveOnSuccess": {
                                        "description": "True to remove the package after successful execution.  Default value is False.",
                                        "type": "boolean"
                                    },
                                    "Size": {
                                        "description": "The size of the file at the specified URL.  If a size is not supplied at creation time, the size will be determined by the response from the URL.\r\n            If the size provided does not match the size in the response from the URL an error will be returned.",
                                        "format": "int64",
                                        "type": "integer"
                                    },
                                    "Switches": {
                                        "description": "The command line arguments for the package.  Default value is an empty string.",
                                        "type": "string"
                                    },
                                    "Url": {
                                        "description": "The Url to download the package from.",
                                        "type": "string"
                                    },
                                    "Version": {
                                        "description": "The version.",
                                        "format": "int32",
                                        "maximum": 2147483647,
                                        "minimum": 1,
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "PackageTypeID",
                                    "Url",
                                    "CRC",
                                    "Version",
                                    "Description",
                                    "ReleaseDate"
                                ],
                                "type": "object"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "properties": {
                                    "Autorun": {
                                        "description": "Value is true if package should run automatically. Default value is false.",
                                        "type": "boolean"
                                    },
                                    "CRC": {
                                        "description": "The CRC used to validate the download.",
                                        "type": "string"
                                    },
                                    "Description": {
                                        "description": "The package description",
                                        "type": "string"
                                    },
                                    "LocalizedName": {
                                        "description": "Optional. The StringID used to localize the name of the Package",
                                        "type": "string"
                                    },
                                    "Notes": {
                                        "description": "Notes about the package",
                                        "type": "string"
                                    },
                                    "PackageID": {
                                        "description": "Read Only. The package ID",
                                        "type": "string"
                                    },
                                    "PackageTypeID": {
                                        "description": "The id of the package type this package belongs to.",
                                        "type": "string"
                                    },
                                    "PreviousVersion": {
                                        "description": "For delta packages, the previous version required.  For non-delta packages, the Previous version is 0.  Default value is 0.",
                                        "format": "int32",
                                        "maximum": 2147483647,
                                        "minimum": 0,
                                        "type": "integer"
                                    },
                                    "ReleaseDate": {
                                        "description": "The date the package was released",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Released": {
                                        "description": "True if the package is released.  Default value is False.",
                                        "type": "boolean"
                                    },
                                    "RemoveOnSuccess": {
                                        "description": "True to remove the package after successful execution.  Default value is False.",
                                        "type": "boolean"
                                    },
                                    "Size": {
                                        "description": "The size of the file at the specified URL.  If a size is not supplied at creation time, the size will be determined by the response from the URL.\r\n            If the size provided does not match the size in the response from the URL an error will be returned.",
                                        "format": "int64",
                                        "type": "integer"
                                    },
                                    "Switches": {
                                        "description": "The command line arguments for the package.  Default value is an empty string.",
                                        "type": "string"
                                    },
                                    "Url": {
                                        "description": "The Url to download the package from.",
                                        "type": "string"
                                    },
                                    "Version": {
                                        "description": "The version.",
                                        "format": "int32",
                                        "maximum": 2147483647,
                                        "minimum": 1,
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "PackageTypeID",
                                    "Url",
                                    "CRC",
                                    "Version",
                                    "Description",
                                    "ReleaseDate"
                                ],
                                "type": "object"
                            }
                        },
                        "text/xml": {
                            "schema": {
                                "properties": {
                                    "Autorun": {
                                        "description": "Value is true if package should run automatically. Default value is false.",
                                        "type": "boolean"
                                    },
                                    "CRC": {
                                        "description": "The CRC used to validate the download.",
                                        "type": "string"
                                    },
                                    "Description": {
                                        "description": "The package description",
                                        "type": "string"
                                    },
                                    "LocalizedName": {
                                        "description": "Optional. The StringID used to localize the name of the Package",
                                        "type": "string"
                                    },
                                    "Notes": {
                                        "description": "Notes about the package",
                                        "type": "string"
                                    },
                                    "PackageID": {
                                        "description": "Read Only. The package ID",
                                        "type": "string"
                                    },
                                    "PackageTypeID": {
                                        "description": "The id of the package type this package belongs to.",
                                        "type": "string"
                                    },
                                    "PreviousVersion": {
                                        "description": "For delta packages, the previous version required.  For non-delta packages, the Previous version is 0.  Default value is 0.",
                                        "format": "int32",
                                        "maximum": 2147483647,
                                        "minimum": 0,
                                        "type": "integer"
                                    },
                                    "ReleaseDate": {
                                        "description": "The date the package was released",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Released": {
                                        "description": "True if the package is released.  Default value is False.",
                                        "type": "boolean"
                                    },
                                    "RemoveOnSuccess": {
                                        "description": "True to remove the package after successful execution.  Default value is False.",
                                        "type": "boolean"
                                    },
                                    "Size": {
                                        "description": "The size of the file at the specified URL.  If a size is not supplied at creation time, the size will be determined by the response from the URL.\r\n            If the size provided does not match the size in the response from the URL an error will be returned.",
                                        "format": "int64",
                                        "type": "integer"
                                    },
                                    "Switches": {
                                        "description": "The command line arguments for the package.  Default value is an empty string.",
                                        "type": "string"
                                    },
                                    "Url": {
                                        "description": "The Url to download the package from.",
                                        "type": "string"
                                    },
                                    "Version": {
                                        "description": "The version.",
                                        "format": "int32",
                                        "maximum": 2147483647,
                                        "minimum": 1,
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "PackageTypeID",
                                    "Url",
                                    "CRC",
                                    "Version",
                                    "Description",
                                    "ReleaseDate"
                                ],
                                "type": "object"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "Autorun": {
                                        "description": "Value is true if package should run automatically. Default value is false.",
                                        "type": "boolean"
                                    },
                                    "CRC": {
                                        "description": "The CRC used to validate the download.",
                                        "type": "string"
                                    },
                                    "Description": {
                                        "description": "The package description",
                                        "type": "string"
                                    },
                                    "LocalizedName": {
                                        "description": "Optional. The StringID used to localize the name of the Package",
                                        "type": "string"
                                    },
                                    "Notes": {
                                        "description": "Notes about the package",
                                        "type": "string"
                                    },
                                    "PackageID": {
                                        "description": "Read Only. The package ID",
                                        "type": "string"
                                    },
                                    "PackageTypeID": {
                                        "description": "The id of the package type this package belongs to.",
                                        "type": "string"
                                    },
                                    "PreviousVersion": {
                                        "description": "For delta packages, the previous version required.  For non-delta packages, the Previous version is 0.  Default value is 0.",
                                        "format": "int32",
                                        "maximum": 2147483647,
                                        "minimum": 0,
                                        "type": "integer"
                                    },
                                    "ReleaseDate": {
                                        "description": "The date the package was released",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Released": {
                                        "description": "True if the package is released.  Default value is False.",
                                        "type": "boolean"
                                    },
                                    "RemoveOnSuccess": {
                                        "description": "True to remove the package after successful execution.  Default value is False.",
                                        "type": "boolean"
                                    },
                                    "Size": {
                                        "description": "The size of the file at the specified URL.  If a size is not supplied at creation time, the size will be determined by the response from the URL.\r\n            If the size provided does not match the size in the response from the URL an error will be returned.",
                                        "format": "int64",
                                        "type": "integer"
                                    },
                                    "Switches": {
                                        "description": "The command line arguments for the package.  Default value is an empty string.",
                                        "type": "string"
                                    },
                                    "Url": {
                                        "description": "The Url to download the package from.",
                                        "type": "string"
                                    },
                                    "Version": {
                                        "description": "The version.",
                                        "format": "int32",
                                        "maximum": 2147483647,
                                        "minimum": 1,
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "PackageTypeID",
                                    "Url",
                                    "CRC",
                                    "Version",
                                    "Description",
                                    "ReleaseDate"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The package to add.",
                    "required": true
                }
            }
        },
        "/api/v2/Packages/{ID}": {
            "delete": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "Packages_DeletePackage",
                "parameters": [
                    {
                        "description": "The Package ID to Delete",
                        "in": "path",
                        "name": "ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Delete a Package.",
                "tags": [
                    "Packages"
                ]
            },
            "get": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "Packages_GetPackage",
                "parameters": [
                    {
                        "description": "The Package ID to Search for",
                        "in": "path",
                        "name": "ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Autorun": {
                                            "description": "Value is true if package should run automatically. Default value is false.",
                                            "type": "boolean"
                                        },
                                        "CRC": {
                                            "description": "The CRC used to validate the download.",
                                            "type": "string"
                                        },
                                        "Description": {
                                            "description": "The package description",
                                            "type": "string"
                                        },
                                        "LocalizedName": {
                                            "description": "Optional. The StringID used to localize the name of the Package",
                                            "type": "string"
                                        },
                                        "Notes": {
                                            "description": "Notes about the package",
                                            "type": "string"
                                        },
                                        "PackageID": {
                                            "description": "Read Only. The package ID",
                                            "type": "string"
                                        },
                                        "PackageTypeID": {
                                            "description": "The id of the package type this package belongs to.",
                                            "type": "string"
                                        },
                                        "PreviousVersion": {
                                            "description": "For delta packages, the previous version required.  For non-delta packages, the Previous version is 0.  Default value is 0.",
                                            "format": "int32",
                                            "maximum": 2147483647,
                                            "minimum": 0,
                                            "type": "integer"
                                        },
                                        "ReleaseDate": {
                                            "description": "The date the package was released",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "Released": {
                                            "description": "True if the package is released.  Default value is False.",
                                            "type": "boolean"
                                        },
                                        "RemoveOnSuccess": {
                                            "description": "True to remove the package after successful execution.  Default value is False.",
                                            "type": "boolean"
                                        },
                                        "Size": {
                                            "description": "The size of the file at the specified URL.  If a size is not supplied at creation time, the size will be determined by the response from the URL.\r\n            If the size provided does not match the size in the response from the URL an error will be returned.",
                                            "format": "int64",
                                            "type": "integer"
                                        },
                                        "Switches": {
                                            "description": "The command line arguments for the package.  Default value is an empty string.",
                                            "type": "string"
                                        },
                                        "Url": {
                                            "description": "The Url to download the package from.",
                                            "type": "string"
                                        },
                                        "Version": {
                                            "description": "The version.",
                                            "format": "int32",
                                            "maximum": 2147483647,
                                            "minimum": 1,
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "PackageTypeID",
                                        "Url",
                                        "CRC",
                                        "Version",
                                        "Description",
                                        "ReleaseDate"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "Autorun": {
                                            "description": "Value is true if package should run automatically. Default value is false.",
                                            "type": "boolean"
                                        },
                                        "CRC": {
                                            "description": "The CRC used to validate the download.",
                                            "type": "string"
                                        },
                                        "Description": {
                                            "description": "The package description",
                                            "type": "string"
                                        },
                                        "LocalizedName": {
                                            "description": "Optional. The StringID used to localize the name of the Package",
                                            "type": "string"
                                        },
                                        "Notes": {
                                            "description": "Notes about the package",
                                            "type": "string"
                                        },
                                        "PackageID": {
                                            "description": "Read Only. The package ID",
                                            "type": "string"
                                        },
                                        "PackageTypeID": {
                                            "description": "The id of the package type this package belongs to.",
                                            "type": "string"
                                        },
                                        "PreviousVersion": {
                                            "description": "For delta packages, the previous version required.  For non-delta packages, the Previous version is 0.  Default value is 0.",
                                            "format": "int32",
                                            "maximum": 2147483647,
                                            "minimum": 0,
                                            "type": "integer"
                                        },
                                        "ReleaseDate": {
                                            "description": "The date the package was released",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "Released": {
                                            "description": "True if the package is released.  Default value is False.",
                                            "type": "boolean"
                                        },
                                        "RemoveOnSuccess": {
                                            "description": "True to remove the package after successful execution.  Default value is False.",
                                            "type": "boolean"
                                        },
                                        "Size": {
                                            "description": "The size of the file at the specified URL.  If a size is not supplied at creation time, the size will be determined by the response from the URL.\r\n            If the size provided does not match the size in the response from the URL an error will be returned.",
                                            "format": "int64",
                                            "type": "integer"
                                        },
                                        "Switches": {
                                            "description": "The command line arguments for the package.  Default value is an empty string.",
                                            "type": "string"
                                        },
                                        "Url": {
                                            "description": "The Url to download the package from.",
                                            "type": "string"
                                        },
                                        "Version": {
                                            "description": "The version.",
                                            "format": "int32",
                                            "maximum": 2147483647,
                                            "minimum": 1,
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "PackageTypeID",
                                        "Url",
                                        "CRC",
                                        "Version",
                                        "Description",
                                        "ReleaseDate"
                                    ],
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "Autorun": {
                                            "description": "Value is true if package should run automatically. Default value is false.",
                                            "type": "boolean"
                                        },
                                        "CRC": {
                                            "description": "The CRC used to validate the download.",
                                            "type": "string"
                                        },
                                        "Description": {
                                            "description": "The package description",
                                            "type": "string"
                                        },
                                        "LocalizedName": {
                                            "description": "Optional. The StringID used to localize the name of the Package",
                                            "type": "string"
                                        },
                                        "Notes": {
                                            "description": "Notes about the package",
                                            "type": "string"
                                        },
                                        "PackageID": {
                                            "description": "Read Only. The package ID",
                                            "type": "string"
                                        },
                                        "PackageTypeID": {
                                            "description": "The id of the package type this package belongs to.",
                                            "type": "string"
                                        },
                                        "PreviousVersion": {
                                            "description": "For delta packages, the previous version required.  For non-delta packages, the Previous version is 0.  Default value is 0.",
                                            "format": "int32",
                                            "maximum": 2147483647,
                                            "minimum": 0,
                                            "type": "integer"
                                        },
                                        "ReleaseDate": {
                                            "description": "The date the package was released",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "Released": {
                                            "description": "True if the package is released.  Default value is False.",
                                            "type": "boolean"
                                        },
                                        "RemoveOnSuccess": {
                                            "description": "True to remove the package after successful execution.  Default value is False.",
                                            "type": "boolean"
                                        },
                                        "Size": {
                                            "description": "The size of the file at the specified URL.  If a size is not supplied at creation time, the size will be determined by the response from the URL.\r\n            If the size provided does not match the size in the response from the URL an error will be returned.",
                                            "format": "int64",
                                            "type": "integer"
                                        },
                                        "Switches": {
                                            "description": "The command line arguments for the package.  Default value is an empty string.",
                                            "type": "string"
                                        },
                                        "Url": {
                                            "description": "The Url to download the package from.",
                                            "type": "string"
                                        },
                                        "Version": {
                                            "description": "The version.",
                                            "format": "int32",
                                            "maximum": 2147483647,
                                            "minimum": 1,
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "PackageTypeID",
                                        "Url",
                                        "CRC",
                                        "Version",
                                        "Description",
                                        "ReleaseDate"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "Autorun": {
                                            "description": "Value is true if package should run automatically. Default value is false.",
                                            "type": "boolean"
                                        },
                                        "CRC": {
                                            "description": "The CRC used to validate the download.",
                                            "type": "string"
                                        },
                                        "Description": {
                                            "description": "The package description",
                                            "type": "string"
                                        },
                                        "LocalizedName": {
                                            "description": "Optional. The StringID used to localize the name of the Package",
                                            "type": "string"
                                        },
                                        "Notes": {
                                            "description": "Notes about the package",
                                            "type": "string"
                                        },
                                        "PackageID": {
                                            "description": "Read Only. The package ID",
                                            "type": "string"
                                        },
                                        "PackageTypeID": {
                                            "description": "The id of the package type this package belongs to.",
                                            "type": "string"
                                        },
                                        "PreviousVersion": {
                                            "description": "For delta packages, the previous version required.  For non-delta packages, the Previous version is 0.  Default value is 0.",
                                            "format": "int32",
                                            "maximum": 2147483647,
                                            "minimum": 0,
                                            "type": "integer"
                                        },
                                        "ReleaseDate": {
                                            "description": "The date the package was released",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "Released": {
                                            "description": "True if the package is released.  Default value is False.",
                                            "type": "boolean"
                                        },
                                        "RemoveOnSuccess": {
                                            "description": "True to remove the package after successful execution.  Default value is False.",
                                            "type": "boolean"
                                        },
                                        "Size": {
                                            "description": "The size of the file at the specified URL.  If a size is not supplied at creation time, the size will be determined by the response from the URL.\r\n            If the size provided does not match the size in the response from the URL an error will be returned.",
                                            "format": "int64",
                                            "type": "integer"
                                        },
                                        "Switches": {
                                            "description": "The command line arguments for the package.  Default value is an empty string.",
                                            "type": "string"
                                        },
                                        "Url": {
                                            "description": "The Url to download the package from.",
                                            "type": "string"
                                        },
                                        "Version": {
                                            "description": "The version.",
                                            "format": "int32",
                                            "maximum": 2147483647,
                                            "minimum": 1,
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "PackageTypeID",
                                        "Url",
                                        "CRC",
                                        "Version",
                                        "Description",
                                        "ReleaseDate"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Find a Package.",
                "tags": [
                    "Packages"
                ]
            },
            "put": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "Packages_PutPackage",
                "parameters": [
                    {
                        "description": "The unique ID of the Package",
                        "in": "path",
                        "name": "ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Modify a Packge to the Update System.",
                "tags": [
                    "Packages"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Autorun": {
                                        "description": "Value is true if package should run automatically. Default value is false.",
                                        "type": "boolean"
                                    },
                                    "CRC": {
                                        "description": "The CRC used to validate the download.",
                                        "type": "string"
                                    },
                                    "Description": {
                                        "description": "The package description",
                                        "type": "string"
                                    },
                                    "LocalizedName": {
                                        "description": "Optional. The StringID used to localize the name of the Package",
                                        "type": "string"
                                    },
                                    "Notes": {
                                        "description": "Notes about the package",
                                        "type": "string"
                                    },
                                    "PackageID": {
                                        "description": "Read Only. The package ID",
                                        "type": "string"
                                    },
                                    "PackageTypeID": {
                                        "description": "The id of the package type this package belongs to.",
                                        "type": "string"
                                    },
                                    "PreviousVersion": {
                                        "description": "For delta packages, the previous version required.  For non-delta packages, the Previous version is 0.  Default value is 0.",
                                        "format": "int32",
                                        "maximum": 2147483647,
                                        "minimum": 0,
                                        "type": "integer"
                                    },
                                    "ReleaseDate": {
                                        "description": "The date the package was released",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Released": {
                                        "description": "True if the package is released.  Default value is False.",
                                        "type": "boolean"
                                    },
                                    "RemoveOnSuccess": {
                                        "description": "True to remove the package after successful execution.  Default value is False.",
                                        "type": "boolean"
                                    },
                                    "Size": {
                                        "description": "The size of the file at the specified URL.  If a size is not supplied at creation time, the size will be determined by the response from the URL.\r\n            If the size provided does not match the size in the response from the URL an error will be returned.",
                                        "format": "int64",
                                        "type": "integer"
                                    },
                                    "Switches": {
                                        "description": "The command line arguments for the package.  Default value is an empty string.",
                                        "type": "string"
                                    },
                                    "Url": {
                                        "description": "The Url to download the package from.",
                                        "type": "string"
                                    },
                                    "Version": {
                                        "description": "The version.",
                                        "format": "int32",
                                        "maximum": 2147483647,
                                        "minimum": 1,
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "PackageTypeID",
                                    "Url",
                                    "CRC",
                                    "Version",
                                    "Description",
                                    "ReleaseDate"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "Autorun": {
                                        "description": "Value is true if package should run automatically. Default value is false.",
                                        "type": "boolean"
                                    },
                                    "CRC": {
                                        "description": "The CRC used to validate the download.",
                                        "type": "string"
                                    },
                                    "Description": {
                                        "description": "The package description",
                                        "type": "string"
                                    },
                                    "LocalizedName": {
                                        "description": "Optional. The StringID used to localize the name of the Package",
                                        "type": "string"
                                    },
                                    "Notes": {
                                        "description": "Notes about the package",
                                        "type": "string"
                                    },
                                    "PackageID": {
                                        "description": "Read Only. The package ID",
                                        "type": "string"
                                    },
                                    "PackageTypeID": {
                                        "description": "The id of the package type this package belongs to.",
                                        "type": "string"
                                    },
                                    "PreviousVersion": {
                                        "description": "For delta packages, the previous version required.  For non-delta packages, the Previous version is 0.  Default value is 0.",
                                        "format": "int32",
                                        "maximum": 2147483647,
                                        "minimum": 0,
                                        "type": "integer"
                                    },
                                    "ReleaseDate": {
                                        "description": "The date the package was released",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Released": {
                                        "description": "True if the package is released.  Default value is False.",
                                        "type": "boolean"
                                    },
                                    "RemoveOnSuccess": {
                                        "description": "True to remove the package after successful execution.  Default value is False.",
                                        "type": "boolean"
                                    },
                                    "Size": {
                                        "description": "The size of the file at the specified URL.  If a size is not supplied at creation time, the size will be determined by the response from the URL.\r\n            If the size provided does not match the size in the response from the URL an error will be returned.",
                                        "format": "int64",
                                        "type": "integer"
                                    },
                                    "Switches": {
                                        "description": "The command line arguments for the package.  Default value is an empty string.",
                                        "type": "string"
                                    },
                                    "Url": {
                                        "description": "The Url to download the package from.",
                                        "type": "string"
                                    },
                                    "Version": {
                                        "description": "The version.",
                                        "format": "int32",
                                        "maximum": 2147483647,
                                        "minimum": 1,
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "PackageTypeID",
                                    "Url",
                                    "CRC",
                                    "Version",
                                    "Description",
                                    "ReleaseDate"
                                ],
                                "type": "object"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "properties": {
                                    "Autorun": {
                                        "description": "Value is true if package should run automatically. Default value is false.",
                                        "type": "boolean"
                                    },
                                    "CRC": {
                                        "description": "The CRC used to validate the download.",
                                        "type": "string"
                                    },
                                    "Description": {
                                        "description": "The package description",
                                        "type": "string"
                                    },
                                    "LocalizedName": {
                                        "description": "Optional. The StringID used to localize the name of the Package",
                                        "type": "string"
                                    },
                                    "Notes": {
                                        "description": "Notes about the package",
                                        "type": "string"
                                    },
                                    "PackageID": {
                                        "description": "Read Only. The package ID",
                                        "type": "string"
                                    },
                                    "PackageTypeID": {
                                        "description": "The id of the package type this package belongs to.",
                                        "type": "string"
                                    },
                                    "PreviousVersion": {
                                        "description": "For delta packages, the previous version required.  For non-delta packages, the Previous version is 0.  Default value is 0.",
                                        "format": "int32",
                                        "maximum": 2147483647,
                                        "minimum": 0,
                                        "type": "integer"
                                    },
                                    "ReleaseDate": {
                                        "description": "The date the package was released",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Released": {
                                        "description": "True if the package is released.  Default value is False.",
                                        "type": "boolean"
                                    },
                                    "RemoveOnSuccess": {
                                        "description": "True to remove the package after successful execution.  Default value is False.",
                                        "type": "boolean"
                                    },
                                    "Size": {
                                        "description": "The size of the file at the specified URL.  If a size is not supplied at creation time, the size will be determined by the response from the URL.\r\n            If the size provided does not match the size in the response from the URL an error will be returned.",
                                        "format": "int64",
                                        "type": "integer"
                                    },
                                    "Switches": {
                                        "description": "The command line arguments for the package.  Default value is an empty string.",
                                        "type": "string"
                                    },
                                    "Url": {
                                        "description": "The Url to download the package from.",
                                        "type": "string"
                                    },
                                    "Version": {
                                        "description": "The version.",
                                        "format": "int32",
                                        "maximum": 2147483647,
                                        "minimum": 1,
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "PackageTypeID",
                                    "Url",
                                    "CRC",
                                    "Version",
                                    "Description",
                                    "ReleaseDate"
                                ],
                                "type": "object"
                            }
                        },
                        "text/xml": {
                            "schema": {
                                "properties": {
                                    "Autorun": {
                                        "description": "Value is true if package should run automatically. Default value is false.",
                                        "type": "boolean"
                                    },
                                    "CRC": {
                                        "description": "The CRC used to validate the download.",
                                        "type": "string"
                                    },
                                    "Description": {
                                        "description": "The package description",
                                        "type": "string"
                                    },
                                    "LocalizedName": {
                                        "description": "Optional. The StringID used to localize the name of the Package",
                                        "type": "string"
                                    },
                                    "Notes": {
                                        "description": "Notes about the package",
                                        "type": "string"
                                    },
                                    "PackageID": {
                                        "description": "Read Only. The package ID",
                                        "type": "string"
                                    },
                                    "PackageTypeID": {
                                        "description": "The id of the package type this package belongs to.",
                                        "type": "string"
                                    },
                                    "PreviousVersion": {
                                        "description": "For delta packages, the previous version required.  For non-delta packages, the Previous version is 0.  Default value is 0.",
                                        "format": "int32",
                                        "maximum": 2147483647,
                                        "minimum": 0,
                                        "type": "integer"
                                    },
                                    "ReleaseDate": {
                                        "description": "The date the package was released",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Released": {
                                        "description": "True if the package is released.  Default value is False.",
                                        "type": "boolean"
                                    },
                                    "RemoveOnSuccess": {
                                        "description": "True to remove the package after successful execution.  Default value is False.",
                                        "type": "boolean"
                                    },
                                    "Size": {
                                        "description": "The size of the file at the specified URL.  If a size is not supplied at creation time, the size will be determined by the response from the URL.\r\n            If the size provided does not match the size in the response from the URL an error will be returned.",
                                        "format": "int64",
                                        "type": "integer"
                                    },
                                    "Switches": {
                                        "description": "The command line arguments for the package.  Default value is an empty string.",
                                        "type": "string"
                                    },
                                    "Url": {
                                        "description": "The Url to download the package from.",
                                        "type": "string"
                                    },
                                    "Version": {
                                        "description": "The version.",
                                        "format": "int32",
                                        "maximum": 2147483647,
                                        "minimum": 1,
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "PackageTypeID",
                                    "Url",
                                    "CRC",
                                    "Version",
                                    "Description",
                                    "ReleaseDate"
                                ],
                                "type": "object"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "Autorun": {
                                        "description": "Value is true if package should run automatically. Default value is false.",
                                        "type": "boolean"
                                    },
                                    "CRC": {
                                        "description": "The CRC used to validate the download.",
                                        "type": "string"
                                    },
                                    "Description": {
                                        "description": "The package description",
                                        "type": "string"
                                    },
                                    "LocalizedName": {
                                        "description": "Optional. The StringID used to localize the name of the Package",
                                        "type": "string"
                                    },
                                    "Notes": {
                                        "description": "Notes about the package",
                                        "type": "string"
                                    },
                                    "PackageID": {
                                        "description": "Read Only. The package ID",
                                        "type": "string"
                                    },
                                    "PackageTypeID": {
                                        "description": "The id of the package type this package belongs to.",
                                        "type": "string"
                                    },
                                    "PreviousVersion": {
                                        "description": "For delta packages, the previous version required.  For non-delta packages, the Previous version is 0.  Default value is 0.",
                                        "format": "int32",
                                        "maximum": 2147483647,
                                        "minimum": 0,
                                        "type": "integer"
                                    },
                                    "ReleaseDate": {
                                        "description": "The date the package was released",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Released": {
                                        "description": "True if the package is released.  Default value is False.",
                                        "type": "boolean"
                                    },
                                    "RemoveOnSuccess": {
                                        "description": "True to remove the package after successful execution.  Default value is False.",
                                        "type": "boolean"
                                    },
                                    "Size": {
                                        "description": "The size of the file at the specified URL.  If a size is not supplied at creation time, the size will be determined by the response from the URL.\r\n            If the size provided does not match the size in the response from the URL an error will be returned.",
                                        "format": "int64",
                                        "type": "integer"
                                    },
                                    "Switches": {
                                        "description": "The command line arguments for the package.  Default value is an empty string.",
                                        "type": "string"
                                    },
                                    "Url": {
                                        "description": "The Url to download the package from.",
                                        "type": "string"
                                    },
                                    "Version": {
                                        "description": "The version.",
                                        "format": "int32",
                                        "maximum": 2147483647,
                                        "minimum": 1,
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "PackageTypeID",
                                    "Url",
                                    "CRC",
                                    "Version",
                                    "Description",
                                    "ReleaseDate"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The package to update.",
                    "required": true
                }
            }
        },
        "/api/v2/Permissions": {
            "get": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "Permissions_GetPermissions",
                "parameters": [
                    {
                        "description": "Optional. The page limit. The default page limit is 10.",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "Optional. The page offset. The default page offset is 0.",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "Filter by permission name. Supports ending wildcard (*). Optional.",
                        "in": "query",
                        "name": "name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "properties": {
                                                    "DataDescription": {
                                                        "description": "Description of data to be provided with Role Authorization",
                                                        "type": "string"
                                                    },
                                                    "DataRequired": {
                                                        "description": "Indicates if data is required or optional",
                                                        "enum": [
                                                            "Yes",
                                                            "No",
                                                            "Optional"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "Description": {
                                                        "type": "string"
                                                    },
                                                    "Id": {
                                                        "description": "The identifier of the permission.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the permission.",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "Name",
                                                    "DataRequired"
                                                ],
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "properties": {
                                                    "DataDescription": {
                                                        "description": "Description of data to be provided with Role Authorization",
                                                        "type": "string"
                                                    },
                                                    "DataRequired": {
                                                        "description": "Indicates if data is required or optional",
                                                        "enum": [
                                                            "Yes",
                                                            "No",
                                                            "Optional"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "Description": {
                                                        "type": "string"
                                                    },
                                                    "Id": {
                                                        "description": "The identifier of the permission.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the permission.",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "Name",
                                                    "DataRequired"
                                                ],
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "List Permissions",
                "tags": [
                    "Permissions"
                ]
            },
            "post": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "Permissions_PostPermission",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            }
                        }
                    }
                },
                "summary": "Adds a Permission",
                "tags": [
                    "Permissions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "DataDescription": {
                                        "description": "Description of data to be provided with Role Authorization",
                                        "type": "string"
                                    },
                                    "DataRequired": {
                                        "description": "Indicates if data is required or optional",
                                        "enum": [
                                            "Yes",
                                            "No",
                                            "Optional"
                                        ],
                                        "type": "string"
                                    },
                                    "Description": {
                                        "type": "string"
                                    },
                                    "Id": {
                                        "description": "The identifier of the permission.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Name": {
                                        "description": "The name of the permission.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Name",
                                    "DataRequired"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "DataDescription": {
                                        "description": "Description of data to be provided with Role Authorization",
                                        "type": "string"
                                    },
                                    "DataRequired": {
                                        "description": "Indicates if data is required or optional",
                                        "enum": [
                                            "Yes",
                                            "No",
                                            "Optional"
                                        ],
                                        "type": "string"
                                    },
                                    "Description": {
                                        "type": "string"
                                    },
                                    "Id": {
                                        "description": "The identifier of the permission.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Name": {
                                        "description": "The name of the permission.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Name",
                                    "DataRequired"
                                ],
                                "type": "object"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "properties": {
                                    "DataDescription": {
                                        "description": "Description of data to be provided with Role Authorization",
                                        "type": "string"
                                    },
                                    "DataRequired": {
                                        "description": "Indicates if data is required or optional",
                                        "enum": [
                                            "Yes",
                                            "No",
                                            "Optional"
                                        ],
                                        "type": "string"
                                    },
                                    "Description": {
                                        "type": "string"
                                    },
                                    "Id": {
                                        "description": "The identifier of the permission.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Name": {
                                        "description": "The name of the permission.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Name",
                                    "DataRequired"
                                ],
                                "type": "object"
                            }
                        },
                        "text/xml": {
                            "schema": {
                                "properties": {
                                    "DataDescription": {
                                        "description": "Description of data to be provided with Role Authorization",
                                        "type": "string"
                                    },
                                    "DataRequired": {
                                        "description": "Indicates if data is required or optional",
                                        "enum": [
                                            "Yes",
                                            "No",
                                            "Optional"
                                        ],
                                        "type": "string"
                                    },
                                    "Description": {
                                        "type": "string"
                                    },
                                    "Id": {
                                        "description": "The identifier of the permission.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Name": {
                                        "description": "The name of the permission.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Name",
                                    "DataRequired"
                                ],
                                "type": "object"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "DataDescription": {
                                        "description": "Description of data to be provided with Role Authorization",
                                        "type": "string"
                                    },
                                    "DataRequired": {
                                        "description": "Indicates if data is required or optional",
                                        "enum": [
                                            "Yes",
                                            "No",
                                            "Optional"
                                        ],
                                        "type": "string"
                                    },
                                    "Description": {
                                        "type": "string"
                                    },
                                    "Id": {
                                        "description": "The identifier of the permission.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Name": {
                                        "description": "The name of the permission.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Name",
                                    "DataRequired"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "Permission to add",
                    "required": true
                }
            }
        },
        "/api/v2/Permissions/{id}": {
            "delete": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "Permissions_DeletePermission",
                "parameters": [
                    {
                        "description": "Id of Permission",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "summary": "Deletes a Permission",
                "tags": [
                    "Permissions"
                ]
            },
            "get": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "Permissions_GetPermission",
                "parameters": [
                    {
                        "description": "Id of Permission",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DataDescription": {
                                            "description": "Description of data to be provided with Role Authorization",
                                            "type": "string"
                                        },
                                        "DataRequired": {
                                            "description": "Indicates if data is required or optional",
                                            "enum": [
                                                "Yes",
                                                "No",
                                                "Optional"
                                            ],
                                            "type": "string"
                                        },
                                        "Description": {
                                            "type": "string"
                                        },
                                        "Id": {
                                            "description": "The identifier of the permission.",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Name": {
                                            "description": "The name of the permission.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "Name",
                                        "DataRequired"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DataDescription": {
                                            "description": "Description of data to be provided with Role Authorization",
                                            "type": "string"
                                        },
                                        "DataRequired": {
                                            "description": "Indicates if data is required or optional",
                                            "enum": [
                                                "Yes",
                                                "No",
                                                "Optional"
                                            ],
                                            "type": "string"
                                        },
                                        "Description": {
                                            "type": "string"
                                        },
                                        "Id": {
                                            "description": "The identifier of the permission.",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Name": {
                                            "description": "The name of the permission.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "Name",
                                        "DataRequired"
                                    ],
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DataDescription": {
                                            "description": "Description of data to be provided with Role Authorization",
                                            "type": "string"
                                        },
                                        "DataRequired": {
                                            "description": "Indicates if data is required or optional",
                                            "enum": [
                                                "Yes",
                                                "No",
                                                "Optional"
                                            ],
                                            "type": "string"
                                        },
                                        "Description": {
                                            "type": "string"
                                        },
                                        "Id": {
                                            "description": "The identifier of the permission.",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Name": {
                                            "description": "The name of the permission.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "Name",
                                        "DataRequired"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DataDescription": {
                                            "description": "Description of data to be provided with Role Authorization",
                                            "type": "string"
                                        },
                                        "DataRequired": {
                                            "description": "Indicates if data is required or optional",
                                            "enum": [
                                                "Yes",
                                                "No",
                                                "Optional"
                                            ],
                                            "type": "string"
                                        },
                                        "Description": {
                                            "type": "string"
                                        },
                                        "Id": {
                                            "description": "The identifier of the permission.",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Name": {
                                            "description": "The name of the permission.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "Name",
                                        "DataRequired"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Gets a Permission",
                "tags": [
                    "Permissions"
                ]
            },
            "put": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "Permissions_PutPermission",
                "parameters": [
                    {
                        "description": "Id of Permission",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "summary": "Updates a Permission",
                "tags": [
                    "Permissions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "DataDescription": {
                                        "description": "Description of data to be provided with Role Authorization",
                                        "type": "string"
                                    },
                                    "DataRequired": {
                                        "description": "Indicates if data is required or optional",
                                        "enum": [
                                            "Yes",
                                            "No",
                                            "Optional"
                                        ],
                                        "type": "string"
                                    },
                                    "Description": {
                                        "type": "string"
                                    },
                                    "Id": {
                                        "description": "The identifier of the permission.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Name": {
                                        "description": "The name of the permission.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Name",
                                    "DataRequired"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "DataDescription": {
                                        "description": "Description of data to be provided with Role Authorization",
                                        "type": "string"
                                    },
                                    "DataRequired": {
                                        "description": "Indicates if data is required or optional",
                                        "enum": [
                                            "Yes",
                                            "No",
                                            "Optional"
                                        ],
                                        "type": "string"
                                    },
                                    "Description": {
                                        "type": "string"
                                    },
                                    "Id": {
                                        "description": "The identifier of the permission.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Name": {
                                        "description": "The name of the permission.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Name",
                                    "DataRequired"
                                ],
                                "type": "object"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "properties": {
                                    "DataDescription": {
                                        "description": "Description of data to be provided with Role Authorization",
                                        "type": "string"
                                    },
                                    "DataRequired": {
                                        "description": "Indicates if data is required or optional",
                                        "enum": [
                                            "Yes",
                                            "No",
                                            "Optional"
                                        ],
                                        "type": "string"
                                    },
                                    "Description": {
                                        "type": "string"
                                    },
                                    "Id": {
                                        "description": "The identifier of the permission.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Name": {
                                        "description": "The name of the permission.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Name",
                                    "DataRequired"
                                ],
                                "type": "object"
                            }
                        },
                        "text/xml": {
                            "schema": {
                                "properties": {
                                    "DataDescription": {
                                        "description": "Description of data to be provided with Role Authorization",
                                        "type": "string"
                                    },
                                    "DataRequired": {
                                        "description": "Indicates if data is required or optional",
                                        "enum": [
                                            "Yes",
                                            "No",
                                            "Optional"
                                        ],
                                        "type": "string"
                                    },
                                    "Description": {
                                        "type": "string"
                                    },
                                    "Id": {
                                        "description": "The identifier of the permission.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Name": {
                                        "description": "The name of the permission.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Name",
                                    "DataRequired"
                                ],
                                "type": "object"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "DataDescription": {
                                        "description": "Description of data to be provided with Role Authorization",
                                        "type": "string"
                                    },
                                    "DataRequired": {
                                        "description": "Indicates if data is required or optional",
                                        "enum": [
                                            "Yes",
                                            "No",
                                            "Optional"
                                        ],
                                        "type": "string"
                                    },
                                    "Description": {
                                        "type": "string"
                                    },
                                    "Id": {
                                        "description": "The identifier of the permission.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Name": {
                                        "description": "The name of the permission.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Name",
                                    "DataRequired"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The Updated Permission",
                    "required": true
                }
            }
        },
        "/api/v2/PriorityPackages": {
            "get": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "PriorityPackages_GetPriorityPackages",
                "parameters": [
                    {
                        "description": "Optional. Filter priority packages by ClientID.",
                        "in": "query",
                        "name": "ClientID",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Optional. Filter returned packages by status. By default only active packages will be returned.",
                        "in": "query",
                        "name": "Status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Active",
                                "Completed",
                                "All"
                            ]
                        }
                    },
                    {
                        "description": "Optional. The page limit. The default page limit is 10.",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "Optional. The page offset. The default page offset is 0.",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "properties": {
                                                    "Autorun": {
                                                        "description": "Read Only. From the package specified by package ID.\r\n            Value is true if package should run automatically. Default value is false.",
                                                        "type": "boolean"
                                                    },
                                                    "CRC": {
                                                        "description": "Read Only. From the package specified by package ID.",
                                                        "type": "string"
                                                    },
                                                    "ClientID": {
                                                        "description": "The ID of the client to receive the priority package",
                                                        "type": "string"
                                                    },
                                                    "Description": {
                                                        "description": "Read Only. From the package specified by package ID.",
                                                        "type": "string"
                                                    },
                                                    "Notes": {
                                                        "description": "Read Only. From the package specified by package ID.",
                                                        "type": "string"
                                                    },
                                                    "PackageID": {
                                                        "description": "The ID of the package to push as a priority package.",
                                                        "type": "string"
                                                    },
                                                    "PackageTypeID": {
                                                        "description": "Read Only. From the package specified by package ID.",
                                                        "type": "string"
                                                    },
                                                    "PreviousVersion": {
                                                        "description": "Read Only. From the package specified by package ID.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "PriorityPackageID": {
                                                        "description": "Read Only. The ID of the priority package.",
                                                        "type": "string"
                                                    },
                                                    "ReleaseDate": {
                                                        "description": "Read Only. From the package specified by package ID.\r\n            The date the package was released",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "Released": {
                                                        "description": "Read Only. From the package specified by package ID.",
                                                        "type": "boolean"
                                                    },
                                                    "RemoveOnSuccess": {
                                                        "description": "Read Only. From the package specified by package ID.",
                                                        "type": "boolean"
                                                    },
                                                    "Size": {
                                                        "description": "Read Only. From the package specified by package ID.",
                                                        "format": "int64",
                                                        "type": "integer"
                                                    },
                                                    "Switches": {
                                                        "description": "The command line arguments for the priority package.  Default value is an empty string.",
                                                        "type": "string"
                                                    },
                                                    "TimeStamp": {
                                                        "description": "Read Only. The timestamp of the priority package.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "Url": {
                                                        "description": "Read Only. From the package specified by package ID.",
                                                        "type": "string"
                                                    },
                                                    "Version": {
                                                        "description": "Read Only. From the package specified by package ID.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    }
                                                },
                                                "required": [
                                                    "ClientID",
                                                    "PackageID"
                                                ],
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "properties": {
                                                    "Autorun": {
                                                        "description": "Read Only. From the package specified by package ID.\r\n            Value is true if package should run automatically. Default value is false.",
                                                        "type": "boolean"
                                                    },
                                                    "CRC": {
                                                        "description": "Read Only. From the package specified by package ID.",
                                                        "type": "string"
                                                    },
                                                    "ClientID": {
                                                        "description": "The ID of the client to receive the priority package",
                                                        "type": "string"
                                                    },
                                                    "Description": {
                                                        "description": "Read Only. From the package specified by package ID.",
                                                        "type": "string"
                                                    },
                                                    "Notes": {
                                                        "description": "Read Only. From the package specified by package ID.",
                                                        "type": "string"
                                                    },
                                                    "PackageID": {
                                                        "description": "The ID of the package to push as a priority package.",
                                                        "type": "string"
                                                    },
                                                    "PackageTypeID": {
                                                        "description": "Read Only. From the package specified by package ID.",
                                                        "type": "string"
                                                    },
                                                    "PreviousVersion": {
                                                        "description": "Read Only. From the package specified by package ID.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "PriorityPackageID": {
                                                        "description": "Read Only. The ID of the priority package.",
                                                        "type": "string"
                                                    },
                                                    "ReleaseDate": {
                                                        "description": "Read Only. From the package specified by package ID.\r\n            The date the package was released",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "Released": {
                                                        "description": "Read Only. From the package specified by package ID.",
                                                        "type": "boolean"
                                                    },
                                                    "RemoveOnSuccess": {
                                                        "description": "Read Only. From the package specified by package ID.",
                                                        "type": "boolean"
                                                    },
                                                    "Size": {
                                                        "description": "Read Only. From the package specified by package ID.",
                                                        "format": "int64",
                                                        "type": "integer"
                                                    },
                                                    "Switches": {
                                                        "description": "The command line arguments for the priority package.  Default value is an empty string.",
                                                        "type": "string"
                                                    },
                                                    "TimeStamp": {
                                                        "description": "Read Only. The timestamp of the priority package.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "Url": {
                                                        "description": "Read Only. From the package specified by package ID.",
                                                        "type": "string"
                                                    },
                                                    "Version": {
                                                        "description": "Read Only. From the package specified by package ID.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    }
                                                },
                                                "required": [
                                                    "ClientID",
                                                    "PackageID"
                                                ],
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get a list of Priority Packages by Client.",
                "tags": [
                    "PriorityPackages"
                ]
            },
            "post": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "PriorityPackages_PostPriorityPackages",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Add a Priority Package for a Client.",
                "tags": [
                    "PriorityPackages"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Autorun": {
                                        "description": "Read Only. From the package specified by package ID.\r\n            Value is true if package should run automatically. Default value is false.",
                                        "type": "boolean"
                                    },
                                    "CRC": {
                                        "description": "Read Only. From the package specified by package ID.",
                                        "type": "string"
                                    },
                                    "ClientID": {
                                        "description": "The ID of the client to receive the priority package",
                                        "type": "string"
                                    },
                                    "Description": {
                                        "description": "Read Only. From the package specified by package ID.",
                                        "type": "string"
                                    },
                                    "Notes": {
                                        "description": "Read Only. From the package specified by package ID.",
                                        "type": "string"
                                    },
                                    "PackageID": {
                                        "description": "The ID of the package to push as a priority package.",
                                        "type": "string"
                                    },
                                    "PackageTypeID": {
                                        "description": "Read Only. From the package specified by package ID.",
                                        "type": "string"
                                    },
                                    "PreviousVersion": {
                                        "description": "Read Only. From the package specified by package ID.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "PriorityPackageID": {
                                        "description": "Read Only. The ID of the priority package.",
                                        "type": "string"
                                    },
                                    "ReleaseDate": {
                                        "description": "Read Only. From the package specified by package ID.\r\n            The date the package was released",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Released": {
                                        "description": "Read Only. From the package specified by package ID.",
                                        "type": "boolean"
                                    },
                                    "RemoveOnSuccess": {
                                        "description": "Read Only. From the package specified by package ID.",
                                        "type": "boolean"
                                    },
                                    "Size": {
                                        "description": "Read Only. From the package specified by package ID.",
                                        "format": "int64",
                                        "type": "integer"
                                    },
                                    "Switches": {
                                        "description": "The command line arguments for the priority package.  Default value is an empty string.",
                                        "type": "string"
                                    },
                                    "TimeStamp": {
                                        "description": "Read Only. The timestamp of the priority package.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Url": {
                                        "description": "Read Only. From the package specified by package ID.",
                                        "type": "string"
                                    },
                                    "Version": {
                                        "description": "Read Only. From the package specified by package ID.",
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "ClientID",
                                    "PackageID"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "Autorun": {
                                        "description": "Read Only. From the package specified by package ID.\r\n            Value is true if package should run automatically. Default value is false.",
                                        "type": "boolean"
                                    },
                                    "CRC": {
                                        "description": "Read Only. From the package specified by package ID.",
                                        "type": "string"
                                    },
                                    "ClientID": {
                                        "description": "The ID of the client to receive the priority package",
                                        "type": "string"
                                    },
                                    "Description": {
                                        "description": "Read Only. From the package specified by package ID.",
                                        "type": "string"
                                    },
                                    "Notes": {
                                        "description": "Read Only. From the package specified by package ID.",
                                        "type": "string"
                                    },
                                    "PackageID": {
                                        "description": "The ID of the package to push as a priority package.",
                                        "type": "string"
                                    },
                                    "PackageTypeID": {
                                        "description": "Read Only. From the package specified by package ID.",
                                        "type": "string"
                                    },
                                    "PreviousVersion": {
                                        "description": "Read Only. From the package specified by package ID.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "PriorityPackageID": {
                                        "description": "Read Only. The ID of the priority package.",
                                        "type": "string"
                                    },
                                    "ReleaseDate": {
                                        "description": "Read Only. From the package specified by package ID.\r\n            The date the package was released",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Released": {
                                        "description": "Read Only. From the package specified by package ID.",
                                        "type": "boolean"
                                    },
                                    "RemoveOnSuccess": {
                                        "description": "Read Only. From the package specified by package ID.",
                                        "type": "boolean"
                                    },
                                    "Size": {
                                        "description": "Read Only. From the package specified by package ID.",
                                        "format": "int64",
                                        "type": "integer"
                                    },
                                    "Switches": {
                                        "description": "The command line arguments for the priority package.  Default value is an empty string.",
                                        "type": "string"
                                    },
                                    "TimeStamp": {
                                        "description": "Read Only. The timestamp of the priority package.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Url": {
                                        "description": "Read Only. From the package specified by package ID.",
                                        "type": "string"
                                    },
                                    "Version": {
                                        "description": "Read Only. From the package specified by package ID.",
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "ClientID",
                                    "PackageID"
                                ],
                                "type": "object"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "properties": {
                                    "Autorun": {
                                        "description": "Read Only. From the package specified by package ID.\r\n            Value is true if package should run automatically. Default value is false.",
                                        "type": "boolean"
                                    },
                                    "CRC": {
                                        "description": "Read Only. From the package specified by package ID.",
                                        "type": "string"
                                    },
                                    "ClientID": {
                                        "description": "The ID of the client to receive the priority package",
                                        "type": "string"
                                    },
                                    "Description": {
                                        "description": "Read Only. From the package specified by package ID.",
                                        "type": "string"
                                    },
                                    "Notes": {
                                        "description": "Read Only. From the package specified by package ID.",
                                        "type": "string"
                                    },
                                    "PackageID": {
                                        "description": "The ID of the package to push as a priority package.",
                                        "type": "string"
                                    },
                                    "PackageTypeID": {
                                        "description": "Read Only. From the package specified by package ID.",
                                        "type": "string"
                                    },
                                    "PreviousVersion": {
                                        "description": "Read Only. From the package specified by package ID.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "PriorityPackageID": {
                                        "description": "Read Only. The ID of the priority package.",
                                        "type": "string"
                                    },
                                    "ReleaseDate": {
                                        "description": "Read Only. From the package specified by package ID.\r\n            The date the package was released",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Released": {
                                        "description": "Read Only. From the package specified by package ID.",
                                        "type": "boolean"
                                    },
                                    "RemoveOnSuccess": {
                                        "description": "Read Only. From the package specified by package ID.",
                                        "type": "boolean"
                                    },
                                    "Size": {
                                        "description": "Read Only. From the package specified by package ID.",
                                        "format": "int64",
                                        "type": "integer"
                                    },
                                    "Switches": {
                                        "description": "The command line arguments for the priority package.  Default value is an empty string.",
                                        "type": "string"
                                    },
                                    "TimeStamp": {
                                        "description": "Read Only. The timestamp of the priority package.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Url": {
                                        "description": "Read Only. From the package specified by package ID.",
                                        "type": "string"
                                    },
                                    "Version": {
                                        "description": "Read Only. From the package specified by package ID.",
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "ClientID",
                                    "PackageID"
                                ],
                                "type": "object"
                            }
                        },
                        "text/xml": {
                            "schema": {
                                "properties": {
                                    "Autorun": {
                                        "description": "Read Only. From the package specified by package ID.\r\n            Value is true if package should run automatically. Default value is false.",
                                        "type": "boolean"
                                    },
                                    "CRC": {
                                        "description": "Read Only. From the package specified by package ID.",
                                        "type": "string"
                                    },
                                    "ClientID": {
                                        "description": "The ID of the client to receive the priority package",
                                        "type": "string"
                                    },
                                    "Description": {
                                        "description": "Read Only. From the package specified by package ID.",
                                        "type": "string"
                                    },
                                    "Notes": {
                                        "description": "Read Only. From the package specified by package ID.",
                                        "type": "string"
                                    },
                                    "PackageID": {
                                        "description": "The ID of the package to push as a priority package.",
                                        "type": "string"
                                    },
                                    "PackageTypeID": {
                                        "description": "Read Only. From the package specified by package ID.",
                                        "type": "string"
                                    },
                                    "PreviousVersion": {
                                        "description": "Read Only. From the package specified by package ID.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "PriorityPackageID": {
                                        "description": "Read Only. The ID of the priority package.",
                                        "type": "string"
                                    },
                                    "ReleaseDate": {
                                        "description": "Read Only. From the package specified by package ID.\r\n            The date the package was released",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Released": {
                                        "description": "Read Only. From the package specified by package ID.",
                                        "type": "boolean"
                                    },
                                    "RemoveOnSuccess": {
                                        "description": "Read Only. From the package specified by package ID.",
                                        "type": "boolean"
                                    },
                                    "Size": {
                                        "description": "Read Only. From the package specified by package ID.",
                                        "format": "int64",
                                        "type": "integer"
                                    },
                                    "Switches": {
                                        "description": "The command line arguments for the priority package.  Default value is an empty string.",
                                        "type": "string"
                                    },
                                    "TimeStamp": {
                                        "description": "Read Only. The timestamp of the priority package.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Url": {
                                        "description": "Read Only. From the package specified by package ID.",
                                        "type": "string"
                                    },
                                    "Version": {
                                        "description": "Read Only. From the package specified by package ID.",
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "ClientID",
                                    "PackageID"
                                ],
                                "type": "object"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "Autorun": {
                                        "description": "Read Only. From the package specified by package ID.\r\n            Value is true if package should run automatically. Default value is false.",
                                        "type": "boolean"
                                    },
                                    "CRC": {
                                        "description": "Read Only. From the package specified by package ID.",
                                        "type": "string"
                                    },
                                    "ClientID": {
                                        "description": "The ID of the client to receive the priority package",
                                        "type": "string"
                                    },
                                    "Description": {
                                        "description": "Read Only. From the package specified by package ID.",
                                        "type": "string"
                                    },
                                    "Notes": {
                                        "description": "Read Only. From the package specified by package ID.",
                                        "type": "string"
                                    },
                                    "PackageID": {
                                        "description": "The ID of the package to push as a priority package.",
                                        "type": "string"
                                    },
                                    "PackageTypeID": {
                                        "description": "Read Only. From the package specified by package ID.",
                                        "type": "string"
                                    },
                                    "PreviousVersion": {
                                        "description": "Read Only. From the package specified by package ID.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "PriorityPackageID": {
                                        "description": "Read Only. The ID of the priority package.",
                                        "type": "string"
                                    },
                                    "ReleaseDate": {
                                        "description": "Read Only. From the package specified by package ID.\r\n            The date the package was released",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Released": {
                                        "description": "Read Only. From the package specified by package ID.",
                                        "type": "boolean"
                                    },
                                    "RemoveOnSuccess": {
                                        "description": "Read Only. From the package specified by package ID.",
                                        "type": "boolean"
                                    },
                                    "Size": {
                                        "description": "Read Only. From the package specified by package ID.",
                                        "format": "int64",
                                        "type": "integer"
                                    },
                                    "Switches": {
                                        "description": "The command line arguments for the priority package.  Default value is an empty string.",
                                        "type": "string"
                                    },
                                    "TimeStamp": {
                                        "description": "Read Only. The timestamp of the priority package.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Url": {
                                        "description": "Read Only. From the package specified by package ID.",
                                        "type": "string"
                                    },
                                    "Version": {
                                        "description": "Read Only. From the package specified by package ID.",
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "ClientID",
                                    "PackageID"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The PriorityPackage to add",
                    "required": true
                }
            }
        },
        "/api/v2/PriorityPackages/{ID}": {
            "delete": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "PriorityPackages_DeletePriorityPackages",
                "parameters": [
                    {
                        "description": "The Priority Package ID",
                        "in": "path",
                        "name": "ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Delete a Priority Package for a Client.",
                "tags": [
                    "PriorityPackages"
                ]
            },
            "get": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "PriorityPackages_GetPriorityPackage",
                "parameters": [
                    {
                        "description": "The Priority Package ID",
                        "in": "path",
                        "name": "ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Autorun": {
                                            "description": "Read Only. From the package specified by package ID.\r\n            Value is true if package should run automatically. Default value is false.",
                                            "type": "boolean"
                                        },
                                        "CRC": {
                                            "description": "Read Only. From the package specified by package ID.",
                                            "type": "string"
                                        },
                                        "ClientID": {
                                            "description": "The ID of the client to receive the priority package",
                                            "type": "string"
                                        },
                                        "Description": {
                                            "description": "Read Only. From the package specified by package ID.",
                                            "type": "string"
                                        },
                                        "Notes": {
                                            "description": "Read Only. From the package specified by package ID.",
                                            "type": "string"
                                        },
                                        "PackageID": {
                                            "description": "The ID of the package to push as a priority package.",
                                            "type": "string"
                                        },
                                        "PackageTypeID": {
                                            "description": "Read Only. From the package specified by package ID.",
                                            "type": "string"
                                        },
                                        "PreviousVersion": {
                                            "description": "Read Only. From the package specified by package ID.",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "PriorityPackageID": {
                                            "description": "Read Only. The ID of the priority package.",
                                            "type": "string"
                                        },
                                        "ReleaseDate": {
                                            "description": "Read Only. From the package specified by package ID.\r\n            The date the package was released",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "Released": {
                                            "description": "Read Only. From the package specified by package ID.",
                                            "type": "boolean"
                                        },
                                        "RemoveOnSuccess": {
                                            "description": "Read Only. From the package specified by package ID.",
                                            "type": "boolean"
                                        },
                                        "Size": {
                                            "description": "Read Only. From the package specified by package ID.",
                                            "format": "int64",
                                            "type": "integer"
                                        },
                                        "Switches": {
                                            "description": "The command line arguments for the priority package.  Default value is an empty string.",
                                            "type": "string"
                                        },
                                        "TimeStamp": {
                                            "description": "Read Only. The timestamp of the priority package.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "Url": {
                                            "description": "Read Only. From the package specified by package ID.",
                                            "type": "string"
                                        },
                                        "Version": {
                                            "description": "Read Only. From the package specified by package ID.",
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "ClientID",
                                        "PackageID"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "Autorun": {
                                            "description": "Read Only. From the package specified by package ID.\r\n            Value is true if package should run automatically. Default value is false.",
                                            "type": "boolean"
                                        },
                                        "CRC": {
                                            "description": "Read Only. From the package specified by package ID.",
                                            "type": "string"
                                        },
                                        "ClientID": {
                                            "description": "The ID of the client to receive the priority package",
                                            "type": "string"
                                        },
                                        "Description": {
                                            "description": "Read Only. From the package specified by package ID.",
                                            "type": "string"
                                        },
                                        "Notes": {
                                            "description": "Read Only. From the package specified by package ID.",
                                            "type": "string"
                                        },
                                        "PackageID": {
                                            "description": "The ID of the package to push as a priority package.",
                                            "type": "string"
                                        },
                                        "PackageTypeID": {
                                            "description": "Read Only. From the package specified by package ID.",
                                            "type": "string"
                                        },
                                        "PreviousVersion": {
                                            "description": "Read Only. From the package specified by package ID.",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "PriorityPackageID": {
                                            "description": "Read Only. The ID of the priority package.",
                                            "type": "string"
                                        },
                                        "ReleaseDate": {
                                            "description": "Read Only. From the package specified by package ID.\r\n            The date the package was released",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "Released": {
                                            "description": "Read Only. From the package specified by package ID.",
                                            "type": "boolean"
                                        },
                                        "RemoveOnSuccess": {
                                            "description": "Read Only. From the package specified by package ID.",
                                            "type": "boolean"
                                        },
                                        "Size": {
                                            "description": "Read Only. From the package specified by package ID.",
                                            "format": "int64",
                                            "type": "integer"
                                        },
                                        "Switches": {
                                            "description": "The command line arguments for the priority package.  Default value is an empty string.",
                                            "type": "string"
                                        },
                                        "TimeStamp": {
                                            "description": "Read Only. The timestamp of the priority package.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "Url": {
                                            "description": "Read Only. From the package specified by package ID.",
                                            "type": "string"
                                        },
                                        "Version": {
                                            "description": "Read Only. From the package specified by package ID.",
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "ClientID",
                                        "PackageID"
                                    ],
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "Autorun": {
                                            "description": "Read Only. From the package specified by package ID.\r\n            Value is true if package should run automatically. Default value is false.",
                                            "type": "boolean"
                                        },
                                        "CRC": {
                                            "description": "Read Only. From the package specified by package ID.",
                                            "type": "string"
                                        },
                                        "ClientID": {
                                            "description": "The ID of the client to receive the priority package",
                                            "type": "string"
                                        },
                                        "Description": {
                                            "description": "Read Only. From the package specified by package ID.",
                                            "type": "string"
                                        },
                                        "Notes": {
                                            "description": "Read Only. From the package specified by package ID.",
                                            "type": "string"
                                        },
                                        "PackageID": {
                                            "description": "The ID of the package to push as a priority package.",
                                            "type": "string"
                                        },
                                        "PackageTypeID": {
                                            "description": "Read Only. From the package specified by package ID.",
                                            "type": "string"
                                        },
                                        "PreviousVersion": {
                                            "description": "Read Only. From the package specified by package ID.",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "PriorityPackageID": {
                                            "description": "Read Only. The ID of the priority package.",
                                            "type": "string"
                                        },
                                        "ReleaseDate": {
                                            "description": "Read Only. From the package specified by package ID.\r\n            The date the package was released",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "Released": {
                                            "description": "Read Only. From the package specified by package ID.",
                                            "type": "boolean"
                                        },
                                        "RemoveOnSuccess": {
                                            "description": "Read Only. From the package specified by package ID.",
                                            "type": "boolean"
                                        },
                                        "Size": {
                                            "description": "Read Only. From the package specified by package ID.",
                                            "format": "int64",
                                            "type": "integer"
                                        },
                                        "Switches": {
                                            "description": "The command line arguments for the priority package.  Default value is an empty string.",
                                            "type": "string"
                                        },
                                        "TimeStamp": {
                                            "description": "Read Only. The timestamp of the priority package.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "Url": {
                                            "description": "Read Only. From the package specified by package ID.",
                                            "type": "string"
                                        },
                                        "Version": {
                                            "description": "Read Only. From the package specified by package ID.",
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "ClientID",
                                        "PackageID"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "Autorun": {
                                            "description": "Read Only. From the package specified by package ID.\r\n            Value is true if package should run automatically. Default value is false.",
                                            "type": "boolean"
                                        },
                                        "CRC": {
                                            "description": "Read Only. From the package specified by package ID.",
                                            "type": "string"
                                        },
                                        "ClientID": {
                                            "description": "The ID of the client to receive the priority package",
                                            "type": "string"
                                        },
                                        "Description": {
                                            "description": "Read Only. From the package specified by package ID.",
                                            "type": "string"
                                        },
                                        "Notes": {
                                            "description": "Read Only. From the package specified by package ID.",
                                            "type": "string"
                                        },
                                        "PackageID": {
                                            "description": "The ID of the package to push as a priority package.",
                                            "type": "string"
                                        },
                                        "PackageTypeID": {
                                            "description": "Read Only. From the package specified by package ID.",
                                            "type": "string"
                                        },
                                        "PreviousVersion": {
                                            "description": "Read Only. From the package specified by package ID.",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "PriorityPackageID": {
                                            "description": "Read Only. The ID of the priority package.",
                                            "type": "string"
                                        },
                                        "ReleaseDate": {
                                            "description": "Read Only. From the package specified by package ID.\r\n            The date the package was released",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "Released": {
                                            "description": "Read Only. From the package specified by package ID.",
                                            "type": "boolean"
                                        },
                                        "RemoveOnSuccess": {
                                            "description": "Read Only. From the package specified by package ID.",
                                            "type": "boolean"
                                        },
                                        "Size": {
                                            "description": "Read Only. From the package specified by package ID.",
                                            "format": "int64",
                                            "type": "integer"
                                        },
                                        "Switches": {
                                            "description": "The command line arguments for the priority package.  Default value is an empty string.",
                                            "type": "string"
                                        },
                                        "TimeStamp": {
                                            "description": "Read Only. The timestamp of the priority package.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "Url": {
                                            "description": "Read Only. From the package specified by package ID.",
                                            "type": "string"
                                        },
                                        "Version": {
                                            "description": "Read Only. From the package specified by package ID.",
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "ClientID",
                                        "PackageID"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get a Priority Packages for a Client.",
                "tags": [
                    "PriorityPackages"
                ]
            }
        },
        "/api/v2/Releases": {
            "get": {
                "deprecated": false,
                "description": "Gets a collection of Release. When successful, the response is a PagedResponse of Release.\r\n            If unsuccessful, an appropriate ApiError is returned.",
                "operationId": "Release_GetReleases",
                "parameters": [
                    {
                        "description": "Optional. The page limit.  If not specified, the default page limit is 10.",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "Optional. The page offset.  If not specified, the default page offset is 0.",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "Optional. Filter by visible.",
                        "in": "query",
                        "name": "visible",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "properties": {
                                                    "BuildDate": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "ReleaseDate": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "ReleaseID": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "ReleaseNumber": {
                                                        "type": "string"
                                                    },
                                                    "Visible": {
                                                        "type": "boolean"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "properties": {
                                                    "BuildDate": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "ReleaseDate": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "ReleaseID": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "ReleaseNumber": {
                                                        "type": "string"
                                                    },
                                                    "Visible": {
                                                        "type": "boolean"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get Release",
                "tags": [
                    "Release"
                ]
            },
            "post": {
                "deprecated": false,
                "description": "Creates a Release.  The body of the POST is the Release to create.\r\n            The ReleaseId will be assigned on creation of the Job.  When successful, the response\r\n            is the Release Id.  If unsuccessful, an appropriate ApiError is returned.",
                "operationId": "Release_PostRelease",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Create a Release",
                "tags": [
                    "Release"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "BuildDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "ReleaseDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "ReleaseID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "ReleaseNumber": {
                                        "type": "string"
                                    },
                                    "Visible": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "BuildDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "ReleaseDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "ReleaseID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "ReleaseNumber": {
                                        "type": "string"
                                    },
                                    "Visible": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "properties": {
                                    "BuildDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "ReleaseDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "ReleaseID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "ReleaseNumber": {
                                        "type": "string"
                                    },
                                    "Visible": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "text/xml": {
                            "schema": {
                                "properties": {
                                    "BuildDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "ReleaseDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "ReleaseID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "ReleaseNumber": {
                                        "type": "string"
                                    },
                                    "Visible": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "BuildDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "ReleaseDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "ReleaseID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "ReleaseNumber": {
                                        "type": "string"
                                    },
                                    "Visible": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "description": "The Release to create.",
                    "required": true
                }
            }
        },
        "/api/v2/Releases/{ReleaseId}": {
            "get": {
                "deprecated": false,
                "description": "Gets a Release by ID. When successful, the response is the requested Release.\r\n            If unsuccessful, an appropriate ApiError is returned.",
                "operationId": "Release_GetRelease",
                "parameters": [
                    {
                        "description": "The ID of the Release to get.",
                        "in": "path",
                        "name": "ReleaseId",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "BuildDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "ReleaseDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "ReleaseID": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "ReleaseNumber": {
                                            "type": "string"
                                        },
                                        "Visible": {
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "BuildDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "ReleaseDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "ReleaseID": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "ReleaseNumber": {
                                            "type": "string"
                                        },
                                        "Visible": {
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "BuildDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "ReleaseDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "ReleaseID": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "ReleaseNumber": {
                                            "type": "string"
                                        },
                                        "Visible": {
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "BuildDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "ReleaseDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "ReleaseID": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "ReleaseNumber": {
                                            "type": "string"
                                        },
                                        "Visible": {
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get a  Release by ID",
                "tags": [
                    "Release"
                ]
            }
        },
        "/api/v2/Releases/{releaseId}": {
            "put": {
                "deprecated": false,
                "description": "Updates a Release.  The body of the PUT is the updated Release.  \r\n            When successful, the response is empty.  If unsuccessful, an appropriate ApiError is returned.",
                "operationId": "Release_PutContentDefinition",
                "parameters": [
                    {
                        "description": "The ID of the Release to update",
                        "in": "path",
                        "name": "releaseId",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Update a Release",
                "tags": [
                    "Release"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "BuildDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "ReleaseDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "ReleaseID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "ReleaseNumber": {
                                        "type": "string"
                                    },
                                    "Visible": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "BuildDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "ReleaseDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "ReleaseID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "ReleaseNumber": {
                                        "type": "string"
                                    },
                                    "Visible": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "properties": {
                                    "BuildDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "ReleaseDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "ReleaseID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "ReleaseNumber": {
                                        "type": "string"
                                    },
                                    "Visible": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "text/xml": {
                            "schema": {
                                "properties": {
                                    "BuildDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "ReleaseDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "ReleaseID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "ReleaseNumber": {
                                        "type": "string"
                                    },
                                    "Visible": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "BuildDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "ReleaseDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "ReleaseID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "ReleaseNumber": {
                                        "type": "string"
                                    },
                                    "Visible": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "description": "The updated Release",
                    "required": true
                }
            }
        },
        "/api/v2/Reporting/BundleStatusSummary": {
            "get": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "Reporting_BundleStatusSummary",
                "parameters": [
                    {
                        "description": "The BundleID",
                        "in": "query",
                        "name": "BundleID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Optional. The page limit. The default page limit is 10.",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "Optional. The page offset. The default page offset is 0.",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "properties": {
                                                    "AverageDownloadTime": {
                                                        "description": "The average time required to complete the download",
                                                        "type": "string"
                                                    },
                                                    "AverageInstallTime": {
                                                        "description": "The average time required to complete the install",
                                                        "type": "string"
                                                    },
                                                    "Downloaded": {
                                                        "description": "The number of clients that have completed the download",
                                                        "format": "int64",
                                                        "type": "integer"
                                                    },
                                                    "Error": {
                                                        "description": "The result of the install",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "Installed": {
                                                        "description": "The number of clients that have completed the install",
                                                        "format": "int64",
                                                        "type": "integer"
                                                    },
                                                    "Package": {
                                                        "description": "The name of the package",
                                                        "type": "string"
                                                    },
                                                    "PackageID": {
                                                        "description": "The ID of the package",
                                                        "type": "string"
                                                    },
                                                    "PackageStatusItems": {
                                                        "description": "The individual package status items",
                                                        "items": {
                                                            "properties": {
                                                                "ClientID": {
                                                                    "description": "The id of the client",
                                                                    "type": "string"
                                                                },
                                                                "ClientKey": {
                                                                    "description": "The client's tag",
                                                                    "type": "string"
                                                                },
                                                                "DownloadTime": {
                                                                    "description": "The amount of time spent downloading",
                                                                    "type": "string"
                                                                },
                                                                "Downloaded": {
                                                                    "description": "The number of bytes downloaded",
                                                                    "type": "string"
                                                                },
                                                                "InstallCompleted": {
                                                                    "description": "The time the package completed",
                                                                    "type": "string"
                                                                },
                                                                "InstallResult": {
                                                                    "description": "The package result",
                                                                    "type": "string"
                                                                },
                                                                "InstallStarted": {
                                                                    "description": "The time the package was started",
                                                                    "type": "string"
                                                                },
                                                                "InstallTime": {
                                                                    "description": "The amount of time required to run the package",
                                                                    "type": "string"
                                                                },
                                                                "Percentage": {
                                                                    "description": "The download completion percentage",
                                                                    "type": "string"
                                                                },
                                                                "Size": {
                                                                    "description": "The total size of the package",
                                                                    "type": "string"
                                                                },
                                                                "Timestamp": {
                                                                    "description": "The time the status was last updated",
                                                                    "format": "date-time",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "properties": {
                                                    "AverageDownloadTime": {
                                                        "description": "The average time required to complete the download",
                                                        "type": "string"
                                                    },
                                                    "AverageInstallTime": {
                                                        "description": "The average time required to complete the install",
                                                        "type": "string"
                                                    },
                                                    "Downloaded": {
                                                        "description": "The number of clients that have completed the download",
                                                        "format": "int64",
                                                        "type": "integer"
                                                    },
                                                    "Error": {
                                                        "description": "The result of the install",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "Installed": {
                                                        "description": "The number of clients that have completed the install",
                                                        "format": "int64",
                                                        "type": "integer"
                                                    },
                                                    "Package": {
                                                        "description": "The name of the package",
                                                        "type": "string"
                                                    },
                                                    "PackageID": {
                                                        "description": "The ID of the package",
                                                        "type": "string"
                                                    },
                                                    "PackageStatusItems": {
                                                        "description": "The individual package status items",
                                                        "items": {
                                                            "properties": {
                                                                "ClientID": {
                                                                    "description": "The id of the client",
                                                                    "type": "string"
                                                                },
                                                                "ClientKey": {
                                                                    "description": "The client's tag",
                                                                    "type": "string"
                                                                },
                                                                "DownloadTime": {
                                                                    "description": "The amount of time spent downloading",
                                                                    "type": "string"
                                                                },
                                                                "Downloaded": {
                                                                    "description": "The number of bytes downloaded",
                                                                    "type": "string"
                                                                },
                                                                "InstallCompleted": {
                                                                    "description": "The time the package completed",
                                                                    "type": "string"
                                                                },
                                                                "InstallResult": {
                                                                    "description": "The package result",
                                                                    "type": "string"
                                                                },
                                                                "InstallStarted": {
                                                                    "description": "The time the package was started",
                                                                    "type": "string"
                                                                },
                                                                "InstallTime": {
                                                                    "description": "The amount of time required to run the package",
                                                                    "type": "string"
                                                                },
                                                                "Percentage": {
                                                                    "description": "The download completion percentage",
                                                                    "type": "string"
                                                                },
                                                                "Size": {
                                                                    "description": "The total size of the package",
                                                                    "type": "string"
                                                                },
                                                                "Timestamp": {
                                                                    "description": "The time the status was last updated",
                                                                    "format": "date-time",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get a summary of all Packages in a Bundle",
                "tags": [
                    "Reporting"
                ]
            }
        },
        "/api/v2/Reporting/BundlesInUpdateGroup": {
            "get": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "Reporting_BundlesInUpdateGroup",
                "parameters": [
                    {
                        "description": "The UpdateGroupID",
                        "in": "query",
                        "name": "ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Include Inactive Bundles (true|false)",
                        "in": "query",
                        "name": "IncludeInactive",
                        "required": true,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "Optional. The page limit. The default page limit is 10.",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "Optional. The page offset. The default page offset is 0.",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "properties": {
                                                    "Active": {
                                                        "description": "Default Value: false. During the creation of the Bundle, this field must be false.",
                                                        "type": "boolean"
                                                    },
                                                    "BundleID": {
                                                        "description": "Read-Only.",
                                                        "type": "string"
                                                    },
                                                    "BundleNumber": {
                                                        "description": "The bundle number",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "Description": {
                                                        "description": "The Bundle description.",
                                                        "type": "string"
                                                    },
                                                    "UpdateGroupID": {
                                                        "description": "The update group this bundle belongs to.",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "Description",
                                                    "UpdateGroupID",
                                                    "BundleNumber"
                                                ],
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "properties": {
                                                    "Active": {
                                                        "description": "Default Value: false. During the creation of the Bundle, this field must be false.",
                                                        "type": "boolean"
                                                    },
                                                    "BundleID": {
                                                        "description": "Read-Only.",
                                                        "type": "string"
                                                    },
                                                    "BundleNumber": {
                                                        "description": "The bundle number",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "Description": {
                                                        "description": "The Bundle description.",
                                                        "type": "string"
                                                    },
                                                    "UpdateGroupID": {
                                                        "description": "The update group this bundle belongs to.",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "Description",
                                                    "UpdateGroupID",
                                                    "BundleNumber"
                                                ],
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get a list of bundles for UpdateGroup.",
                "tags": [
                    "Reporting"
                ]
            }
        },
        "/api/v2/Reporting/ClientInfo": {
            "get": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "Reporting_ClientInfo",
                "parameters": [
                    {
                        "description": "The Client ID",
                        "in": "query",
                        "name": "ClientID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "ClientID": {
                                            "description": "The id of the client",
                                            "type": "string"
                                        },
                                        "Package": {
                                            "description": "The packages",
                                            "items": {
                                                "properties": {
                                                    "Categories": {
                                                        "description": "The package report's categories.",
                                                        "items": {
                                                            "properties": {
                                                                "Values": {
                                                                    "items": {
                                                                        "properties": {
                                                                            "Key": {
                                                                                "description": "The attribute name",
                                                                                "type": "string"
                                                                            },
                                                                            "TimeStamp": {
                                                                                "description": "Read Only. The timestamp.",
                                                                                "format": "date-time",
                                                                                "type": "string"
                                                                            },
                                                                            "Value": {
                                                                                "description": "The value",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "Key"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "category": {
                                                                    "description": "The category name",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "category"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "PackageDescription": {
                                                        "description": "Read Only. The package description",
                                                        "type": "string"
                                                    },
                                                    "PackageID": {
                                                        "description": "The PackageID.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "ClientID": {
                                            "description": "The id of the client",
                                            "type": "string"
                                        },
                                        "Package": {
                                            "description": "The packages",
                                            "items": {
                                                "properties": {
                                                    "Categories": {
                                                        "description": "The package report's categories.",
                                                        "items": {
                                                            "properties": {
                                                                "Values": {
                                                                    "items": {
                                                                        "properties": {
                                                                            "Key": {
                                                                                "description": "The attribute name",
                                                                                "type": "string"
                                                                            },
                                                                            "TimeStamp": {
                                                                                "description": "Read Only. The timestamp.",
                                                                                "format": "date-time",
                                                                                "type": "string"
                                                                            },
                                                                            "Value": {
                                                                                "description": "The value",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "Key"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "category": {
                                                                    "description": "The category name",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "category"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "PackageDescription": {
                                                        "description": "Read Only. The package description",
                                                        "type": "string"
                                                    },
                                                    "PackageID": {
                                                        "description": "The PackageID.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "ClientID": {
                                            "description": "The id of the client",
                                            "type": "string"
                                        },
                                        "Package": {
                                            "description": "The packages",
                                            "items": {
                                                "properties": {
                                                    "Categories": {
                                                        "description": "The package report's categories.",
                                                        "items": {
                                                            "properties": {
                                                                "Values": {
                                                                    "items": {
                                                                        "properties": {
                                                                            "Key": {
                                                                                "description": "The attribute name",
                                                                                "type": "string"
                                                                            },
                                                                            "TimeStamp": {
                                                                                "description": "Read Only. The timestamp.",
                                                                                "format": "date-time",
                                                                                "type": "string"
                                                                            },
                                                                            "Value": {
                                                                                "description": "The value",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "Key"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "category": {
                                                                    "description": "The category name",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "category"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "PackageDescription": {
                                                        "description": "Read Only. The package description",
                                                        "type": "string"
                                                    },
                                                    "PackageID": {
                                                        "description": "The PackageID.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "ClientID": {
                                            "description": "The id of the client",
                                            "type": "string"
                                        },
                                        "Package": {
                                            "description": "The packages",
                                            "items": {
                                                "properties": {
                                                    "Categories": {
                                                        "description": "The package report's categories.",
                                                        "items": {
                                                            "properties": {
                                                                "Values": {
                                                                    "items": {
                                                                        "properties": {
                                                                            "Key": {
                                                                                "description": "The attribute name",
                                                                                "type": "string"
                                                                            },
                                                                            "TimeStamp": {
                                                                                "description": "Read Only. The timestamp.",
                                                                                "format": "date-time",
                                                                                "type": "string"
                                                                            },
                                                                            "Value": {
                                                                                "description": "The value",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "Key"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "category": {
                                                                    "description": "The category name",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "category"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "PackageDescription": {
                                                        "description": "Read Only. The package description",
                                                        "type": "string"
                                                    },
                                                    "PackageID": {
                                                        "description": "The PackageID.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get Client Information",
                "tags": [
                    "Reporting"
                ]
            }
        },
        "/api/v2/Reporting/CurrentPackagesInUpdateGroup": {
            "get": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "Reporting_CurrentPackagesInUpdateGroup",
                "parameters": [
                    {
                        "description": "The UpdateGroupID",
                        "in": "query",
                        "name": "ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Optional.  The subscription type filter to use.  By default the Default packages (Required and IncludeByDefault) will be returned.",
                        "in": "query",
                        "name": "SubscriptionTypeFilter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "RequiredOnly",
                                "Default",
                                "All"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "Autorun": {
                                                "description": "Value is true if package should run automatically. Default value is false.",
                                                "type": "boolean"
                                            },
                                            "CRC": {
                                                "description": "The CRC used to validate the download.",
                                                "type": "string"
                                            },
                                            "Description": {
                                                "description": "The package description",
                                                "type": "string"
                                            },
                                            "LocalizedName": {
                                                "description": "Optional. The StringID used to localize the name of the Package",
                                                "type": "string"
                                            },
                                            "Notes": {
                                                "description": "Notes about the package",
                                                "type": "string"
                                            },
                                            "PackageID": {
                                                "description": "Read Only. The package ID",
                                                "type": "string"
                                            },
                                            "PackageTypeID": {
                                                "description": "The id of the package type this package belongs to.",
                                                "type": "string"
                                            },
                                            "PreviousVersion": {
                                                "description": "For delta packages, the previous version required.  For non-delta packages, the Previous version is 0.  Default value is 0.",
                                                "format": "int32",
                                                "maximum": 2147483647,
                                                "minimum": 0,
                                                "type": "integer"
                                            },
                                            "ReleaseDate": {
                                                "description": "The date the package was released",
                                                "format": "date-time",
                                                "type": "string"
                                            },
                                            "Released": {
                                                "description": "True if the package is released.  Default value is False.",
                                                "type": "boolean"
                                            },
                                            "RemoveOnSuccess": {
                                                "description": "True to remove the package after successful execution.  Default value is False.",
                                                "type": "boolean"
                                            },
                                            "Size": {
                                                "description": "The size of the file at the specified URL.  If a size is not supplied at creation time, the size will be determined by the response from the URL.\r\n            If the size provided does not match the size in the response from the URL an error will be returned.",
                                                "format": "int64",
                                                "type": "integer"
                                            },
                                            "Switches": {
                                                "description": "The command line arguments for the package.  Default value is an empty string.",
                                                "type": "string"
                                            },
                                            "Url": {
                                                "description": "The Url to download the package from.",
                                                "type": "string"
                                            },
                                            "Version": {
                                                "description": "The version.",
                                                "format": "int32",
                                                "maximum": 2147483647,
                                                "minimum": 1,
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "PackageTypeID",
                                            "Url",
                                            "CRC",
                                            "Version",
                                            "Description",
                                            "ReleaseDate"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "Autorun": {
                                                "description": "Value is true if package should run automatically. Default value is false.",
                                                "type": "boolean"
                                            },
                                            "CRC": {
                                                "description": "The CRC used to validate the download.",
                                                "type": "string"
                                            },
                                            "Description": {
                                                "description": "The package description",
                                                "type": "string"
                                            },
                                            "LocalizedName": {
                                                "description": "Optional. The StringID used to localize the name of the Package",
                                                "type": "string"
                                            },
                                            "Notes": {
                                                "description": "Notes about the package",
                                                "type": "string"
                                            },
                                            "PackageID": {
                                                "description": "Read Only. The package ID",
                                                "type": "string"
                                            },
                                            "PackageTypeID": {
                                                "description": "The id of the package type this package belongs to.",
                                                "type": "string"
                                            },
                                            "PreviousVersion": {
                                                "description": "For delta packages, the previous version required.  For non-delta packages, the Previous version is 0.  Default value is 0.",
                                                "format": "int32",
                                                "maximum": 2147483647,
                                                "minimum": 0,
                                                "type": "integer"
                                            },
                                            "ReleaseDate": {
                                                "description": "The date the package was released",
                                                "format": "date-time",
                                                "type": "string"
                                            },
                                            "Released": {
                                                "description": "True if the package is released.  Default value is False.",
                                                "type": "boolean"
                                            },
                                            "RemoveOnSuccess": {
                                                "description": "True to remove the package after successful execution.  Default value is False.",
                                                "type": "boolean"
                                            },
                                            "Size": {
                                                "description": "The size of the file at the specified URL.  If a size is not supplied at creation time, the size will be determined by the response from the URL.\r\n            If the size provided does not match the size in the response from the URL an error will be returned.",
                                                "format": "int64",
                                                "type": "integer"
                                            },
                                            "Switches": {
                                                "description": "The command line arguments for the package.  Default value is an empty string.",
                                                "type": "string"
                                            },
                                            "Url": {
                                                "description": "The Url to download the package from.",
                                                "type": "string"
                                            },
                                            "Version": {
                                                "description": "The version.",
                                                "format": "int32",
                                                "maximum": 2147483647,
                                                "minimum": 1,
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "PackageTypeID",
                                            "Url",
                                            "CRC",
                                            "Version",
                                            "Description",
                                            "ReleaseDate"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "Autorun": {
                                                "description": "Value is true if package should run automatically. Default value is false.",
                                                "type": "boolean"
                                            },
                                            "CRC": {
                                                "description": "The CRC used to validate the download.",
                                                "type": "string"
                                            },
                                            "Description": {
                                                "description": "The package description",
                                                "type": "string"
                                            },
                                            "LocalizedName": {
                                                "description": "Optional. The StringID used to localize the name of the Package",
                                                "type": "string"
                                            },
                                            "Notes": {
                                                "description": "Notes about the package",
                                                "type": "string"
                                            },
                                            "PackageID": {
                                                "description": "Read Only. The package ID",
                                                "type": "string"
                                            },
                                            "PackageTypeID": {
                                                "description": "The id of the package type this package belongs to.",
                                                "type": "string"
                                            },
                                            "PreviousVersion": {
                                                "description": "For delta packages, the previous version required.  For non-delta packages, the Previous version is 0.  Default value is 0.",
                                                "format": "int32",
                                                "maximum": 2147483647,
                                                "minimum": 0,
                                                "type": "integer"
                                            },
                                            "ReleaseDate": {
                                                "description": "The date the package was released",
                                                "format": "date-time",
                                                "type": "string"
                                            },
                                            "Released": {
                                                "description": "True if the package is released.  Default value is False.",
                                                "type": "boolean"
                                            },
                                            "RemoveOnSuccess": {
                                                "description": "True to remove the package after successful execution.  Default value is False.",
                                                "type": "boolean"
                                            },
                                            "Size": {
                                                "description": "The size of the file at the specified URL.  If a size is not supplied at creation time, the size will be determined by the response from the URL.\r\n            If the size provided does not match the size in the response from the URL an error will be returned.",
                                                "format": "int64",
                                                "type": "integer"
                                            },
                                            "Switches": {
                                                "description": "The command line arguments for the package.  Default value is an empty string.",
                                                "type": "string"
                                            },
                                            "Url": {
                                                "description": "The Url to download the package from.",
                                                "type": "string"
                                            },
                                            "Version": {
                                                "description": "The version.",
                                                "format": "int32",
                                                "maximum": 2147483647,
                                                "minimum": 1,
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "PackageTypeID",
                                            "Url",
                                            "CRC",
                                            "Version",
                                            "Description",
                                            "ReleaseDate"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "Autorun": {
                                                "description": "Value is true if package should run automatically. Default value is false.",
                                                "type": "boolean"
                                            },
                                            "CRC": {
                                                "description": "The CRC used to validate the download.",
                                                "type": "string"
                                            },
                                            "Description": {
                                                "description": "The package description",
                                                "type": "string"
                                            },
                                            "LocalizedName": {
                                                "description": "Optional. The StringID used to localize the name of the Package",
                                                "type": "string"
                                            },
                                            "Notes": {
                                                "description": "Notes about the package",
                                                "type": "string"
                                            },
                                            "PackageID": {
                                                "description": "Read Only. The package ID",
                                                "type": "string"
                                            },
                                            "PackageTypeID": {
                                                "description": "The id of the package type this package belongs to.",
                                                "type": "string"
                                            },
                                            "PreviousVersion": {
                                                "description": "For delta packages, the previous version required.  For non-delta packages, the Previous version is 0.  Default value is 0.",
                                                "format": "int32",
                                                "maximum": 2147483647,
                                                "minimum": 0,
                                                "type": "integer"
                                            },
                                            "ReleaseDate": {
                                                "description": "The date the package was released",
                                                "format": "date-time",
                                                "type": "string"
                                            },
                                            "Released": {
                                                "description": "True if the package is released.  Default value is False.",
                                                "type": "boolean"
                                            },
                                            "RemoveOnSuccess": {
                                                "description": "True to remove the package after successful execution.  Default value is False.",
                                                "type": "boolean"
                                            },
                                            "Size": {
                                                "description": "The size of the file at the specified URL.  If a size is not supplied at creation time, the size will be determined by the response from the URL.\r\n            If the size provided does not match the size in the response from the URL an error will be returned.",
                                                "format": "int64",
                                                "type": "integer"
                                            },
                                            "Switches": {
                                                "description": "The command line arguments for the package.  Default value is an empty string.",
                                                "type": "string"
                                            },
                                            "Url": {
                                                "description": "The Url to download the package from.",
                                                "type": "string"
                                            },
                                            "Version": {
                                                "description": "The version.",
                                                "format": "int32",
                                                "maximum": 2147483647,
                                                "minimum": 1,
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "PackageTypeID",
                                            "Url",
                                            "CRC",
                                            "Version",
                                            "Description",
                                            "ReleaseDate"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get the current packages for an update group.",
                "tags": [
                    "Reporting"
                ]
            }
        },
        "/api/v2/Reporting/GetClient": {
            "get": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "Reporting_GetClient",
                "parameters": [
                    {
                        "description": "The Client ID",
                        "in": "query",
                        "name": "ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "ClientID": {
                                            "description": "Read Only. The id of the client",
                                            "type": "string"
                                        },
                                        "LastCheckin": {
                                            "description": "Read Only. The time of the client's last checkin with the server.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "Tag": {
                                            "description": "A description of the client that can be used for easy reference",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "ClientID": {
                                            "description": "Read Only. The id of the client",
                                            "type": "string"
                                        },
                                        "LastCheckin": {
                                            "description": "Read Only. The time of the client's last checkin with the server.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "Tag": {
                                            "description": "A description of the client that can be used for easy reference",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "ClientID": {
                                            "description": "Read Only. The id of the client",
                                            "type": "string"
                                        },
                                        "LastCheckin": {
                                            "description": "Read Only. The time of the client's last checkin with the server.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "Tag": {
                                            "description": "A description of the client that can be used for easy reference",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "ClientID": {
                                            "description": "Read Only. The id of the client",
                                            "type": "string"
                                        },
                                        "LastCheckin": {
                                            "description": "Read Only. The time of the client's last checkin with the server.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "Tag": {
                                            "description": "A description of the client that can be used for easy reference",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get a Client in the Update System.",
                "tags": [
                    "Reporting"
                ]
            }
        },
        "/api/v2/Reporting/GetSubscriptions": {
            "get": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "Reporting_GetSubscriptions",
                "parameters": [
                    {
                        "description": "Optional. Filter by Client ID",
                        "in": "query",
                        "name": "ClientID",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Optional. Filter by Update Group ID",
                        "in": "query",
                        "name": "UpdateGroupID",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Optional. The page limit. The default page limit is 10.",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "Optional. The page offset. The default page offset is 0.",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "properties": {
                                                    "Active": {
                                                        "description": "The subscription status.  The status is active by default.",
                                                        "type": "boolean"
                                                    },
                                                    "ClientID": {
                                                        "description": "Read Only after creation. The client id of the subscriber.",
                                                        "type": "string"
                                                    },
                                                    "LastCheckin": {
                                                        "description": "ReadOnly. The timestamp of the last checkin.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "RelationshipID": {
                                                        "description": "Read Only after creation. The relationship id.  A relationship id will be assigned if not provided on creation.",
                                                        "type": "string"
                                                    },
                                                    "UpdateGroupID": {
                                                        "description": "Read Only after creation. The update group to subscribe to.",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "UpdateGroupID",
                                                    "ClientID"
                                                ],
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "properties": {
                                                    "Active": {
                                                        "description": "The subscription status.  The status is active by default.",
                                                        "type": "boolean"
                                                    },
                                                    "ClientID": {
                                                        "description": "Read Only after creation. The client id of the subscriber.",
                                                        "type": "string"
                                                    },
                                                    "LastCheckin": {
                                                        "description": "ReadOnly. The timestamp of the last checkin.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "RelationshipID": {
                                                        "description": "Read Only after creation. The relationship id.  A relationship id will be assigned if not provided on creation.",
                                                        "type": "string"
                                                    },
                                                    "UpdateGroupID": {
                                                        "description": "Read Only after creation. The update group to subscribe to.",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "UpdateGroupID",
                                                    "ClientID"
                                                ],
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get a list of current Client Subscriptions.",
                "tags": [
                    "Reporting"
                ]
            }
        },
        "/api/v2/Reporting/PackageStatusSummary": {
            "get": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "Reporting_PackageStatusSummary",
                "parameters": [
                    {
                        "description": "The Package ID",
                        "in": "query",
                        "name": "PackageID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "AverageDownloadTime": {
                                            "description": "The average time required to complete the download",
                                            "type": "string"
                                        },
                                        "AverageInstallTime": {
                                            "description": "The average time required to complete the install",
                                            "type": "string"
                                        },
                                        "Downloaded": {
                                            "description": "The number of clients that have completed the download",
                                            "format": "int64",
                                            "type": "integer"
                                        },
                                        "Error": {
                                            "description": "The result of the install",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Installed": {
                                            "description": "The number of clients that have completed the install",
                                            "format": "int64",
                                            "type": "integer"
                                        },
                                        "Package": {
                                            "description": "The name of the package",
                                            "type": "string"
                                        },
                                        "PackageID": {
                                            "description": "The ID of the package",
                                            "type": "string"
                                        },
                                        "PackageStatusItems": {
                                            "description": "The individual package status items",
                                            "items": {
                                                "properties": {
                                                    "ClientID": {
                                                        "description": "The id of the client",
                                                        "type": "string"
                                                    },
                                                    "ClientKey": {
                                                        "description": "The client's tag",
                                                        "type": "string"
                                                    },
                                                    "DownloadTime": {
                                                        "description": "The amount of time spent downloading",
                                                        "type": "string"
                                                    },
                                                    "Downloaded": {
                                                        "description": "The number of bytes downloaded",
                                                        "type": "string"
                                                    },
                                                    "InstallCompleted": {
                                                        "description": "The time the package completed",
                                                        "type": "string"
                                                    },
                                                    "InstallResult": {
                                                        "description": "The package result",
                                                        "type": "string"
                                                    },
                                                    "InstallStarted": {
                                                        "description": "The time the package was started",
                                                        "type": "string"
                                                    },
                                                    "InstallTime": {
                                                        "description": "The amount of time required to run the package",
                                                        "type": "string"
                                                    },
                                                    "Percentage": {
                                                        "description": "The download completion percentage",
                                                        "type": "string"
                                                    },
                                                    "Size": {
                                                        "description": "The total size of the package",
                                                        "type": "string"
                                                    },
                                                    "Timestamp": {
                                                        "description": "The time the status was last updated",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "AverageDownloadTime": {
                                            "description": "The average time required to complete the download",
                                            "type": "string"
                                        },
                                        "AverageInstallTime": {
                                            "description": "The average time required to complete the install",
                                            "type": "string"
                                        },
                                        "Downloaded": {
                                            "description": "The number of clients that have completed the download",
                                            "format": "int64",
                                            "type": "integer"
                                        },
                                        "Error": {
                                            "description": "The result of the install",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Installed": {
                                            "description": "The number of clients that have completed the install",
                                            "format": "int64",
                                            "type": "integer"
                                        },
                                        "Package": {
                                            "description": "The name of the package",
                                            "type": "string"
                                        },
                                        "PackageID": {
                                            "description": "The ID of the package",
                                            "type": "string"
                                        },
                                        "PackageStatusItems": {
                                            "description": "The individual package status items",
                                            "items": {
                                                "properties": {
                                                    "ClientID": {
                                                        "description": "The id of the client",
                                                        "type": "string"
                                                    },
                                                    "ClientKey": {
                                                        "description": "The client's tag",
                                                        "type": "string"
                                                    },
                                                    "DownloadTime": {
                                                        "description": "The amount of time spent downloading",
                                                        "type": "string"
                                                    },
                                                    "Downloaded": {
                                                        "description": "The number of bytes downloaded",
                                                        "type": "string"
                                                    },
                                                    "InstallCompleted": {
                                                        "description": "The time the package completed",
                                                        "type": "string"
                                                    },
                                                    "InstallResult": {
                                                        "description": "The package result",
                                                        "type": "string"
                                                    },
                                                    "InstallStarted": {
                                                        "description": "The time the package was started",
                                                        "type": "string"
                                                    },
                                                    "InstallTime": {
                                                        "description": "The amount of time required to run the package",
                                                        "type": "string"
                                                    },
                                                    "Percentage": {
                                                        "description": "The download completion percentage",
                                                        "type": "string"
                                                    },
                                                    "Size": {
                                                        "description": "The total size of the package",
                                                        "type": "string"
                                                    },
                                                    "Timestamp": {
                                                        "description": "The time the status was last updated",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "AverageDownloadTime": {
                                            "description": "The average time required to complete the download",
                                            "type": "string"
                                        },
                                        "AverageInstallTime": {
                                            "description": "The average time required to complete the install",
                                            "type": "string"
                                        },
                                        "Downloaded": {
                                            "description": "The number of clients that have completed the download",
                                            "format": "int64",
                                            "type": "integer"
                                        },
                                        "Error": {
                                            "description": "The result of the install",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Installed": {
                                            "description": "The number of clients that have completed the install",
                                            "format": "int64",
                                            "type": "integer"
                                        },
                                        "Package": {
                                            "description": "The name of the package",
                                            "type": "string"
                                        },
                                        "PackageID": {
                                            "description": "The ID of the package",
                                            "type": "string"
                                        },
                                        "PackageStatusItems": {
                                            "description": "The individual package status items",
                                            "items": {
                                                "properties": {
                                                    "ClientID": {
                                                        "description": "The id of the client",
                                                        "type": "string"
                                                    },
                                                    "ClientKey": {
                                                        "description": "The client's tag",
                                                        "type": "string"
                                                    },
                                                    "DownloadTime": {
                                                        "description": "The amount of time spent downloading",
                                                        "type": "string"
                                                    },
                                                    "Downloaded": {
                                                        "description": "The number of bytes downloaded",
                                                        "type": "string"
                                                    },
                                                    "InstallCompleted": {
                                                        "description": "The time the package completed",
                                                        "type": "string"
                                                    },
                                                    "InstallResult": {
                                                        "description": "The package result",
                                                        "type": "string"
                                                    },
                                                    "InstallStarted": {
                                                        "description": "The time the package was started",
                                                        "type": "string"
                                                    },
                                                    "InstallTime": {
                                                        "description": "The amount of time required to run the package",
                                                        "type": "string"
                                                    },
                                                    "Percentage": {
                                                        "description": "The download completion percentage",
                                                        "type": "string"
                                                    },
                                                    "Size": {
                                                        "description": "The total size of the package",
                                                        "type": "string"
                                                    },
                                                    "Timestamp": {
                                                        "description": "The time the status was last updated",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "AverageDownloadTime": {
                                            "description": "The average time required to complete the download",
                                            "type": "string"
                                        },
                                        "AverageInstallTime": {
                                            "description": "The average time required to complete the install",
                                            "type": "string"
                                        },
                                        "Downloaded": {
                                            "description": "The number of clients that have completed the download",
                                            "format": "int64",
                                            "type": "integer"
                                        },
                                        "Error": {
                                            "description": "The result of the install",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Installed": {
                                            "description": "The number of clients that have completed the install",
                                            "format": "int64",
                                            "type": "integer"
                                        },
                                        "Package": {
                                            "description": "The name of the package",
                                            "type": "string"
                                        },
                                        "PackageID": {
                                            "description": "The ID of the package",
                                            "type": "string"
                                        },
                                        "PackageStatusItems": {
                                            "description": "The individual package status items",
                                            "items": {
                                                "properties": {
                                                    "ClientID": {
                                                        "description": "The id of the client",
                                                        "type": "string"
                                                    },
                                                    "ClientKey": {
                                                        "description": "The client's tag",
                                                        "type": "string"
                                                    },
                                                    "DownloadTime": {
                                                        "description": "The amount of time spent downloading",
                                                        "type": "string"
                                                    },
                                                    "Downloaded": {
                                                        "description": "The number of bytes downloaded",
                                                        "type": "string"
                                                    },
                                                    "InstallCompleted": {
                                                        "description": "The time the package completed",
                                                        "type": "string"
                                                    },
                                                    "InstallResult": {
                                                        "description": "The package result",
                                                        "type": "string"
                                                    },
                                                    "InstallStarted": {
                                                        "description": "The time the package was started",
                                                        "type": "string"
                                                    },
                                                    "InstallTime": {
                                                        "description": "The amount of time required to run the package",
                                                        "type": "string"
                                                    },
                                                    "Percentage": {
                                                        "description": "The download completion percentage",
                                                        "type": "string"
                                                    },
                                                    "Size": {
                                                        "description": "The total size of the package",
                                                        "type": "string"
                                                    },
                                                    "Timestamp": {
                                                        "description": "The time the status was last updated",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get a summary report for a Specific Package",
                "tags": [
                    "Reporting"
                ]
            }
        },
        "/api/v2/Reporting/RegisteredClients": {
            "get": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "Reporting_RegisteredClients",
                "parameters": [
                    {
                        "description": "Optional. The Update Group ID. If not provided, all clients will be returned.",
                        "in": "query",
                        "name": "UpdateGroupID",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Optional. Filter where ClientID matches a value. Wildcards are supported (*).",
                        "in": "query",
                        "name": "ClientID",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Optional. Filter where Tag matches a value. Wildcards are supported (*).",
                        "in": "query",
                        "name": "Tag",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Optional. Filter where ReportResult matches a value. Wildcards are supported (*).",
                        "in": "query",
                        "name": "ReportResult",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Optional. When 'true' filters results where ReportResult equals ReportResultExpected.  When 'false' filters results where ValueToValidate does not equal ReportResults.",
                        "in": "query",
                        "name": "ReportResultIsValid",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "Optional. Filter where ReportValue matches a value. Wildcards are supported (*).",
                        "in": "query",
                        "name": "ReportValue",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Optional. Filter where LastCheckIn occured before the provided date.",
                        "in": "query",
                        "name": "LastCheckInBefore",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "description": "Optional. Filter where LastCheckIn occured after the provided date.",
                        "in": "query",
                        "name": "LastCheckInAfter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "description": "Optional. Specify the order in which results should be returned. Use this format: [FieldName] [ASC|ASCENDING|DESC|DESCENDING],...   \r\n            If sort direction is not provided for a field, it will be sorted ascending.",
                        "in": "query",
                        "name": "OrderBy",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Optional. The page limit. The default page limit is 10.",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "Optional. The page offset. The default page offset is 0.",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "properties": {
                                                    "ClientID": {
                                                        "description": "The Client ID",
                                                        "type": "string"
                                                    },
                                                    "LastCheckin": {
                                                        "description": "The time of the client's last check-in",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "MinutesElapsed": {
                                                        "description": "The number of minutes that have passed since the last check-in",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "ReportResult": {
                                                        "description": "The result for the client included in the UpdateGroup's report",
                                                        "type": "string"
                                                    },
                                                    "ReportResultIsValid": {
                                                        "description": "True if the result for the client matches what is expected for the UpdateGroup",
                                                        "type": "boolean"
                                                    },
                                                    "ReportValue": {
                                                        "description": "The value for the client included in the UpdateGroup's report",
                                                        "type": "string"
                                                    },
                                                    "Tag": {
                                                        "description": "A descriptive name for the client",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "ReportResultExpected": {
                                                    "description": "The label for data contained in ClientStatus.ReportResults",
                                                    "type": "string"
                                                },
                                                "ReportResultLabel": {
                                                    "description": "The label for data contained in ClientStatus.ReportResults",
                                                    "type": "string"
                                                },
                                                "ReportValueLabel": {
                                                    "description": "The label for data contained in ClientStatus.ReportValue",
                                                    "type": "string"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset",
                                                "ReportValueLabel",
                                                "ReportResultLabel",
                                                "ReportResultExpected"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "properties": {
                                                    "ClientID": {
                                                        "description": "The Client ID",
                                                        "type": "string"
                                                    },
                                                    "LastCheckin": {
                                                        "description": "The time of the client's last check-in",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "MinutesElapsed": {
                                                        "description": "The number of minutes that have passed since the last check-in",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "ReportResult": {
                                                        "description": "The result for the client included in the UpdateGroup's report",
                                                        "type": "string"
                                                    },
                                                    "ReportResultIsValid": {
                                                        "description": "True if the result for the client matches what is expected for the UpdateGroup",
                                                        "type": "boolean"
                                                    },
                                                    "ReportValue": {
                                                        "description": "The value for the client included in the UpdateGroup's report",
                                                        "type": "string"
                                                    },
                                                    "Tag": {
                                                        "description": "A descriptive name for the client",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "ReportResultExpected": {
                                                    "description": "The label for data contained in ClientStatus.ReportResults",
                                                    "type": "string"
                                                },
                                                "ReportResultLabel": {
                                                    "description": "The label for data contained in ClientStatus.ReportResults",
                                                    "type": "string"
                                                },
                                                "ReportValueLabel": {
                                                    "description": "The label for data contained in ClientStatus.ReportValue",
                                                    "type": "string"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset",
                                                "ReportValueLabel",
                                                "ReportResultLabel",
                                                "ReportResultExpected"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get a list of subscribed clients",
                "tags": [
                    "Reporting"
                ]
            }
        },
        "/api/v2/Reporting/UpdateGroups": {
            "get": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "Reporting_UpdateGroups",
                "parameters": [
                    {
                        "description": "Optional. The page limit. The default page limit is 10.",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "Optional. The page offset. The default page offset is 0.",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "properties": {
                                                    "Description": {
                                                        "description": "The description of the update group",
                                                        "type": "string"
                                                    },
                                                    "ID": {
                                                        "type": "string"
                                                    },
                                                    "InventoryFrequency": {
                                                        "description": "The time in minutes between inventory checks. Default value is 1440 minutes (one day).",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "InventoryPackage": {
                                                        "description": "The Package ID of the package used for inventory",
                                                        "type": "string"
                                                    },
                                                    "LocalizedDescription": {
                                                        "description": "Optional. The StringID used to localize the description of the update group",
                                                        "type": "string"
                                                    },
                                                    "LocalizedName": {
                                                        "description": "Optional. The StringID used to localize the name of the update group",
                                                        "type": "string"
                                                    },
                                                    "ReportField": {
                                                        "description": "A field to return in the status report for this update group.\r\n            Specify the field with the format [Label]: {[InventoryPackageID].[Category].[Attribute]}.  (i.e. example: {bec778ca-278d-424a-867a-4653a1a19e86.MyCategory.MyAttribute})",
                                                        "type": "string"
                                                    },
                                                    "UpdateType": {
                                                        "description": "The update type name",
                                                        "type": "string"
                                                    },
                                                    "ValidatingField": {
                                                        "description": "A field used for validation in the status report for this update group.\r\n            Specify the field with the format [Label]: {[InventoryPackageID].[Category].[Attribute]}.  (i.e. example: {bec778ca-278d-424a-867a-4653a1a19e86.MyCategory.MyAttribute})",
                                                        "type": "string"
                                                    },
                                                    "ValueToValidate": {
                                                        "description": "The value to validate the ValidationField against.",
                                                        "type": "string"
                                                    },
                                                    "Version": {
                                                        "description": "The version of the UpdateGroup, this value is incremented with each modification to a related Bundle or PackageType",
                                                        "format": "byte",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "Description",
                                                    "UpdateType"
                                                ],
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "properties": {
                                                    "Description": {
                                                        "description": "The description of the update group",
                                                        "type": "string"
                                                    },
                                                    "ID": {
                                                        "type": "string"
                                                    },
                                                    "InventoryFrequency": {
                                                        "description": "The time in minutes between inventory checks. Default value is 1440 minutes (one day).",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "InventoryPackage": {
                                                        "description": "The Package ID of the package used for inventory",
                                                        "type": "string"
                                                    },
                                                    "LocalizedDescription": {
                                                        "description": "Optional. The StringID used to localize the description of the update group",
                                                        "type": "string"
                                                    },
                                                    "LocalizedName": {
                                                        "description": "Optional. The StringID used to localize the name of the update group",
                                                        "type": "string"
                                                    },
                                                    "ReportField": {
                                                        "description": "A field to return in the status report for this update group.\r\n            Specify the field with the format [Label]: {[InventoryPackageID].[Category].[Attribute]}.  (i.e. example: {bec778ca-278d-424a-867a-4653a1a19e86.MyCategory.MyAttribute})",
                                                        "type": "string"
                                                    },
                                                    "UpdateType": {
                                                        "description": "The update type name",
                                                        "type": "string"
                                                    },
                                                    "ValidatingField": {
                                                        "description": "A field used for validation in the status report for this update group.\r\n            Specify the field with the format [Label]: {[InventoryPackageID].[Category].[Attribute]}.  (i.e. example: {bec778ca-278d-424a-867a-4653a1a19e86.MyCategory.MyAttribute})",
                                                        "type": "string"
                                                    },
                                                    "ValueToValidate": {
                                                        "description": "The value to validate the ValidationField against.",
                                                        "type": "string"
                                                    },
                                                    "Version": {
                                                        "description": "The version of the UpdateGroup, this value is incremented with each modification to a related Bundle or PackageType",
                                                        "format": "byte",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "Description",
                                                    "UpdateType"
                                                ],
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get a list of Update Groups.  Update Groups are used by the client to register for a specific type of update.",
                "tags": [
                    "Reporting"
                ]
            }
        },
        "/api/v2/Reporting/UpdateMetrics": {
            "get": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "Reporting_UpdateMetrics",
                "parameters": [
                    {
                        "description": "The UpdateType in which clients must be for the report to include them.",
                        "in": "query",
                        "name": "UpdateGroupID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Optional. Tells us which chart to show based upon filter.",
                        "in": "query",
                        "name": "bundleNumber",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Model that retrieves the data for UpdateMetrics",
                                    "properties": {
                                        "ActiveVersion": {
                                            "description": "Active version (bundle number) of update type.",
                                            "type": "string"
                                        },
                                        "ActiveVersionByClient": {
                                            "description": "Generic collection that is of type ActiveVersionByClientRecord",
                                            "items": {
                                                "properties": {
                                                    "BundleNumber": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "ClientCount": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "ReleaseName": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "CurrentStateByClient": {
                                            "description": "Generic collection that is of type CurrentStateByClientRecord",
                                            "items": {
                                                "properties": {
                                                    "ClientCount": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "State": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "CutOffDate": {
                                            "description": "Date that has been configured to only show the most recent clients with a cut off date. (Ex. year from current date)",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "DataRefreshed": {
                                            "description": "Data was refreshed at this time.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "FilteredClientCount": {
                                            "description": "Sum of clients represented\r\n            Filtered by updateType and lastCheckedInDate",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "PackageErrors": {
                                            "description": "Generic collection that is of type PackageErrorsRecord",
                                            "items": {
                                                "properties": {
                                                    "ClientCount": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "ErrorCode": {
                                                        "type": "string"
                                                    },
                                                    "LongDescription": {
                                                        "type": "string"
                                                    },
                                                    "ShortDescription": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "TotalClientCount": {
                                            "description": "Total clients we have ever serviced",
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "description": "Model that retrieves the data for UpdateMetrics",
                                    "properties": {
                                        "ActiveVersion": {
                                            "description": "Active version (bundle number) of update type.",
                                            "type": "string"
                                        },
                                        "ActiveVersionByClient": {
                                            "description": "Generic collection that is of type ActiveVersionByClientRecord",
                                            "items": {
                                                "properties": {
                                                    "BundleNumber": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "ClientCount": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "ReleaseName": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "CurrentStateByClient": {
                                            "description": "Generic collection that is of type CurrentStateByClientRecord",
                                            "items": {
                                                "properties": {
                                                    "ClientCount": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "State": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "CutOffDate": {
                                            "description": "Date that has been configured to only show the most recent clients with a cut off date. (Ex. year from current date)",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "DataRefreshed": {
                                            "description": "Data was refreshed at this time.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "FilteredClientCount": {
                                            "description": "Sum of clients represented\r\n            Filtered by updateType and lastCheckedInDate",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "PackageErrors": {
                                            "description": "Generic collection that is of type PackageErrorsRecord",
                                            "items": {
                                                "properties": {
                                                    "ClientCount": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "ErrorCode": {
                                                        "type": "string"
                                                    },
                                                    "LongDescription": {
                                                        "type": "string"
                                                    },
                                                    "ShortDescription": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "TotalClientCount": {
                                            "description": "Total clients we have ever serviced",
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "description": "Model that retrieves the data for UpdateMetrics",
                                    "properties": {
                                        "ActiveVersion": {
                                            "description": "Active version (bundle number) of update type.",
                                            "type": "string"
                                        },
                                        "ActiveVersionByClient": {
                                            "description": "Generic collection that is of type ActiveVersionByClientRecord",
                                            "items": {
                                                "properties": {
                                                    "BundleNumber": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "ClientCount": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "ReleaseName": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "CurrentStateByClient": {
                                            "description": "Generic collection that is of type CurrentStateByClientRecord",
                                            "items": {
                                                "properties": {
                                                    "ClientCount": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "State": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "CutOffDate": {
                                            "description": "Date that has been configured to only show the most recent clients with a cut off date. (Ex. year from current date)",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "DataRefreshed": {
                                            "description": "Data was refreshed at this time.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "FilteredClientCount": {
                                            "description": "Sum of clients represented\r\n            Filtered by updateType and lastCheckedInDate",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "PackageErrors": {
                                            "description": "Generic collection that is of type PackageErrorsRecord",
                                            "items": {
                                                "properties": {
                                                    "ClientCount": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "ErrorCode": {
                                                        "type": "string"
                                                    },
                                                    "LongDescription": {
                                                        "type": "string"
                                                    },
                                                    "ShortDescription": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "TotalClientCount": {
                                            "description": "Total clients we have ever serviced",
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "description": "Model that retrieves the data for UpdateMetrics",
                                    "properties": {
                                        "ActiveVersion": {
                                            "description": "Active version (bundle number) of update type.",
                                            "type": "string"
                                        },
                                        "ActiveVersionByClient": {
                                            "description": "Generic collection that is of type ActiveVersionByClientRecord",
                                            "items": {
                                                "properties": {
                                                    "BundleNumber": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "ClientCount": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "ReleaseName": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "CurrentStateByClient": {
                                            "description": "Generic collection that is of type CurrentStateByClientRecord",
                                            "items": {
                                                "properties": {
                                                    "ClientCount": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "State": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "CutOffDate": {
                                            "description": "Date that has been configured to only show the most recent clients with a cut off date. (Ex. year from current date)",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "DataRefreshed": {
                                            "description": "Data was refreshed at this time.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "FilteredClientCount": {
                                            "description": "Sum of clients represented\r\n            Filtered by updateType and lastCheckedInDate",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "PackageErrors": {
                                            "description": "Generic collection that is of type PackageErrorsRecord",
                                            "items": {
                                                "properties": {
                                                    "ClientCount": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "ErrorCode": {
                                                        "type": "string"
                                                    },
                                                    "LongDescription": {
                                                        "type": "string"
                                                    },
                                                    "ShortDescription": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "TotalClientCount": {
                                            "description": "Total clients we have ever serviced",
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get data for pie charts in UpdateMetrics.",
                "tags": [
                    "Reporting"
                ]
            }
        },
        "/api/v2/Roles": {
            "get": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "Roles_GetRoles",
                "parameters": [
                    {
                        "description": "Optional. The page limit. The default page limit is 10.",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "Optional. The page offset. The default page offset is 0.",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "Optional. Finds a role with the given name.",
                        "in": "query",
                        "name": "name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "description": "Defines an API Role",
                                                "properties": {
                                                    "Description": {
                                                        "description": "Role description",
                                                        "type": "string"
                                                    },
                                                    "Id": {
                                                        "description": "The role's identifier.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the role. Must be alpha-numeric strings separated by a period (.).",
                                                        "pattern": "^[0-9a-zA-Z]+(\\.[0-9a-zA-Z]+)*$",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "Name",
                                                    "Description"
                                                ],
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "description": "Defines an API Role",
                                                "properties": {
                                                    "Description": {
                                                        "description": "Role description",
                                                        "type": "string"
                                                    },
                                                    "Id": {
                                                        "description": "The role's identifier.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the role. Must be alpha-numeric strings separated by a period (.).",
                                                        "pattern": "^[0-9a-zA-Z]+(\\.[0-9a-zA-Z]+)*$",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "Name",
                                                    "Description"
                                                ],
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "List Roles",
                "tags": [
                    "Roles"
                ]
            },
            "post": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "Roles_PostRole",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            }
                        }
                    }
                },
                "summary": "Adds a User Role",
                "tags": [
                    "Roles"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Defines an API Role",
                                "properties": {
                                    "Description": {
                                        "description": "Role description",
                                        "type": "string"
                                    },
                                    "Id": {
                                        "description": "The role's identifier.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Name": {
                                        "description": "The name of the role. Must be alpha-numeric strings separated by a period (.).",
                                        "pattern": "^[0-9a-zA-Z]+(\\.[0-9a-zA-Z]+)*$",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Name",
                                    "Description"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "description": "Defines an API Role",
                                "properties": {
                                    "Description": {
                                        "description": "Role description",
                                        "type": "string"
                                    },
                                    "Id": {
                                        "description": "The role's identifier.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Name": {
                                        "description": "The name of the role. Must be alpha-numeric strings separated by a period (.).",
                                        "pattern": "^[0-9a-zA-Z]+(\\.[0-9a-zA-Z]+)*$",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Name",
                                    "Description"
                                ],
                                "type": "object"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "description": "Defines an API Role",
                                "properties": {
                                    "Description": {
                                        "description": "Role description",
                                        "type": "string"
                                    },
                                    "Id": {
                                        "description": "The role's identifier.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Name": {
                                        "description": "The name of the role. Must be alpha-numeric strings separated by a period (.).",
                                        "pattern": "^[0-9a-zA-Z]+(\\.[0-9a-zA-Z]+)*$",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Name",
                                    "Description"
                                ],
                                "type": "object"
                            }
                        },
                        "text/xml": {
                            "schema": {
                                "description": "Defines an API Role",
                                "properties": {
                                    "Description": {
                                        "description": "Role description",
                                        "type": "string"
                                    },
                                    "Id": {
                                        "description": "The role's identifier.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Name": {
                                        "description": "The name of the role. Must be alpha-numeric strings separated by a period (.).",
                                        "pattern": "^[0-9a-zA-Z]+(\\.[0-9a-zA-Z]+)*$",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Name",
                                    "Description"
                                ],
                                "type": "object"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "description": "Defines an API Role",
                                "properties": {
                                    "Description": {
                                        "description": "Role description",
                                        "type": "string"
                                    },
                                    "Id": {
                                        "description": "The role's identifier.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Name": {
                                        "description": "The name of the role. Must be alpha-numeric strings separated by a period (.).",
                                        "pattern": "^[0-9a-zA-Z]+(\\.[0-9a-zA-Z]+)*$",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Name",
                                    "Description"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "Role to add",
                    "required": true
                }
            }
        },
        "/api/v2/Roles/{id}": {
            "delete": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "Roles_DeleteRole",
                "parameters": [
                    {
                        "description": "The role's id",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "summary": "Deletes a User Role",
                "tags": [
                    "Roles"
                ]
            },
            "get": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "Roles_GetRole",
                "parameters": [
                    {
                        "description": "The role's id",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Defines an API Role",
                                    "properties": {
                                        "Description": {
                                            "description": "Role description",
                                            "type": "string"
                                        },
                                        "Id": {
                                            "description": "The role's identifier.",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Name": {
                                            "description": "The name of the role. Must be alpha-numeric strings separated by a period (.).",
                                            "pattern": "^[0-9a-zA-Z]+(\\.[0-9a-zA-Z]+)*$",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "Name",
                                        "Description"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "description": "Defines an API Role",
                                    "properties": {
                                        "Description": {
                                            "description": "Role description",
                                            "type": "string"
                                        },
                                        "Id": {
                                            "description": "The role's identifier.",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Name": {
                                            "description": "The name of the role. Must be alpha-numeric strings separated by a period (.).",
                                            "pattern": "^[0-9a-zA-Z]+(\\.[0-9a-zA-Z]+)*$",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "Name",
                                        "Description"
                                    ],
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "description": "Defines an API Role",
                                    "properties": {
                                        "Description": {
                                            "description": "Role description",
                                            "type": "string"
                                        },
                                        "Id": {
                                            "description": "The role's identifier.",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Name": {
                                            "description": "The name of the role. Must be alpha-numeric strings separated by a period (.).",
                                            "pattern": "^[0-9a-zA-Z]+(\\.[0-9a-zA-Z]+)*$",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "Name",
                                        "Description"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "description": "Defines an API Role",
                                    "properties": {
                                        "Description": {
                                            "description": "Role description",
                                            "type": "string"
                                        },
                                        "Id": {
                                            "description": "The role's identifier.",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Name": {
                                            "description": "The name of the role. Must be alpha-numeric strings separated by a period (.).",
                                            "pattern": "^[0-9a-zA-Z]+(\\.[0-9a-zA-Z]+)*$",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "Name",
                                        "Description"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Gets a User Role",
                "tags": [
                    "Roles"
                ]
            },
            "put": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "Roles_PutRole",
                "parameters": [
                    {
                        "description": "The role's id",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "summary": "Updates a User Role",
                "tags": [
                    "Roles"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Defines an API Role",
                                "properties": {
                                    "Description": {
                                        "description": "Role description",
                                        "type": "string"
                                    },
                                    "Id": {
                                        "description": "The role's identifier.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Name": {
                                        "description": "The name of the role. Must be alpha-numeric strings separated by a period (.).",
                                        "pattern": "^[0-9a-zA-Z]+(\\.[0-9a-zA-Z]+)*$",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Name",
                                    "Description"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "description": "Defines an API Role",
                                "properties": {
                                    "Description": {
                                        "description": "Role description",
                                        "type": "string"
                                    },
                                    "Id": {
                                        "description": "The role's identifier.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Name": {
                                        "description": "The name of the role. Must be alpha-numeric strings separated by a period (.).",
                                        "pattern": "^[0-9a-zA-Z]+(\\.[0-9a-zA-Z]+)*$",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Name",
                                    "Description"
                                ],
                                "type": "object"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "description": "Defines an API Role",
                                "properties": {
                                    "Description": {
                                        "description": "Role description",
                                        "type": "string"
                                    },
                                    "Id": {
                                        "description": "The role's identifier.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Name": {
                                        "description": "The name of the role. Must be alpha-numeric strings separated by a period (.).",
                                        "pattern": "^[0-9a-zA-Z]+(\\.[0-9a-zA-Z]+)*$",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Name",
                                    "Description"
                                ],
                                "type": "object"
                            }
                        },
                        "text/xml": {
                            "schema": {
                                "description": "Defines an API Role",
                                "properties": {
                                    "Description": {
                                        "description": "Role description",
                                        "type": "string"
                                    },
                                    "Id": {
                                        "description": "The role's identifier.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Name": {
                                        "description": "The name of the role. Must be alpha-numeric strings separated by a period (.).",
                                        "pattern": "^[0-9a-zA-Z]+(\\.[0-9a-zA-Z]+)*$",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Name",
                                    "Description"
                                ],
                                "type": "object"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "description": "Defines an API Role",
                                "properties": {
                                    "Description": {
                                        "description": "Role description",
                                        "type": "string"
                                    },
                                    "Id": {
                                        "description": "The role's identifier.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Name": {
                                        "description": "The name of the role. Must be alpha-numeric strings separated by a period (.).",
                                        "pattern": "^[0-9a-zA-Z]+(\\.[0-9a-zA-Z]+)*$",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Name",
                                    "Description"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The Updated Role",
                    "required": true
                }
            }
        },
        "/api/v2/Roles/{id}/Permissions": {
            "get": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "Roles_GetRolePermissions",
                "parameters": [
                    {
                        "description": "The id of the Role",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "Filter by permission name. Optional.",
                        "in": "query",
                        "name": "name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Optional. The page limit. The default page limit is 10.",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "Optional. The page offset. The default page offset is 0.",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "properties": {
                                                    "DataDescription": {
                                                        "description": "Description of data to be provided with Role Authorization",
                                                        "type": "string"
                                                    },
                                                    "DataRequired": {
                                                        "description": "Indicates if data is required or optional",
                                                        "enum": [
                                                            "Yes",
                                                            "No",
                                                            "Optional"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "Description": {
                                                        "type": "string"
                                                    },
                                                    "Id": {
                                                        "description": "The identifier of the permission.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the permission.",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "Name",
                                                    "DataRequired"
                                                ],
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "properties": {
                                                    "DataDescription": {
                                                        "description": "Description of data to be provided with Role Authorization",
                                                        "type": "string"
                                                    },
                                                    "DataRequired": {
                                                        "description": "Indicates if data is required or optional",
                                                        "enum": [
                                                            "Yes",
                                                            "No",
                                                            "Optional"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "Description": {
                                                        "type": "string"
                                                    },
                                                    "Id": {
                                                        "description": "The identifier of the permission.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the permission.",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "Name",
                                                    "DataRequired"
                                                ],
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get the Permissions for a Role",
                "tags": [
                    "Roles"
                ]
            },
            "put": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "Roles_PutRolePermissions",
                "parameters": [
                    {
                        "description": "The id of the Role",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "summary": "Manage the Permissions for a Role",
                "tags": [
                    "Roles"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "description": "Change to the Permissions that a Role is given.",
                                    "properties": {
                                        "Action": {
                                            "description": "The action to take.",
                                            "enum": [
                                                "Grant",
                                                "Revoke"
                                            ],
                                            "type": "string"
                                        },
                                        "Permission": {
                                            "description": "The name of the permission to grant or revoke.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "Permission",
                                        "Action"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "items": {
                                    "description": "Change to the Permissions that a Role is given.",
                                    "properties": {
                                        "Action": {
                                            "description": "The action to take.",
                                            "enum": [
                                                "Grant",
                                                "Revoke"
                                            ],
                                            "type": "string"
                                        },
                                        "Permission": {
                                            "description": "The name of the permission to grant or revoke.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "Permission",
                                        "Action"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "items": {
                                    "description": "Change to the Permissions that a Role is given.",
                                    "properties": {
                                        "Action": {
                                            "description": "The action to take.",
                                            "enum": [
                                                "Grant",
                                                "Revoke"
                                            ],
                                            "type": "string"
                                        },
                                        "Permission": {
                                            "description": "The name of the permission to grant or revoke.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "Permission",
                                        "Action"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "text/xml": {
                            "schema": {
                                "items": {
                                    "description": "Change to the Permissions that a Role is given.",
                                    "properties": {
                                        "Action": {
                                            "description": "The action to take.",
                                            "enum": [
                                                "Grant",
                                                "Revoke"
                                            ],
                                            "type": "string"
                                        },
                                        "Permission": {
                                            "description": "The name of the permission to grant or revoke.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "Permission",
                                        "Action"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "items": {
                                    "description": "Change to the Permissions that a Role is given.",
                                    "properties": {
                                        "Action": {
                                            "description": "The action to take.",
                                            "enum": [
                                                "Grant",
                                                "Revoke"
                                            ],
                                            "type": "string"
                                        },
                                        "Permission": {
                                            "description": "The name of the permission to grant or revoke.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "Permission",
                                        "Action"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        }
                    },
                    "description": "Permissions Changes for the Role",
                    "required": true
                }
            }
        },
        "/api/v2/Roles/{id}/Users": {
            "get": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "UserPermissions_GetUsers",
                "parameters": [
                    {
                        "description": "The Role's ID",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "The page limit. The default page limit is 10.",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "The page offset. The default page offset is 0.",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "properties": {
                                                    "ChangePassword": {
                                                        "description": "Never Returned.  When changing a user's password, this field must contain the new password.",
                                                        "type": "string"
                                                    },
                                                    "Email": {
                                                        "description": "The user's email address",
                                                        "type": "string"
                                                    },
                                                    "Name": {
                                                        "description": "The user's name",
                                                        "type": "string"
                                                    },
                                                    "Password": {
                                                        "description": "Never Returned.  Required when creating a new user or updating a user.  When changing a user's password this field must contain the current password.",
                                                        "type": "string"
                                                    },
                                                    "UserID": {
                                                        "description": "The user ID",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "Username": {
                                                        "description": "The username used for authentication",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "properties": {
                                                    "ChangePassword": {
                                                        "description": "Never Returned.  When changing a user's password, this field must contain the new password.",
                                                        "type": "string"
                                                    },
                                                    "Email": {
                                                        "description": "The user's email address",
                                                        "type": "string"
                                                    },
                                                    "Name": {
                                                        "description": "The user's name",
                                                        "type": "string"
                                                    },
                                                    "Password": {
                                                        "description": "Never Returned.  Required when creating a new user or updating a user.  When changing a user's password this field must contain the current password.",
                                                        "type": "string"
                                                    },
                                                    "UserID": {
                                                        "description": "The user ID",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "Username": {
                                                        "description": "The username used for authentication",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get all user's in a role",
                "tags": [
                    "UserPermissions"
                ]
            },
            "put": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "parameters": [
                    {
                        "description": "The Role's ID",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Update a Role's users",
                "tags": [
                    "UserPermissions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "properties": {
                                        "Action": {
                                            "description": "The action to take with the user",
                                            "enum": [
                                                "Grant",
                                                "Revoke"
                                            ],
                                            "type": "string"
                                        },
                                        "Id": {
                                            "description": "The Id of the User",
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "Id",
                                        "Action"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "items": {
                                    "properties": {
                                        "Action": {
                                            "description": "The action to take with the user",
                                            "enum": [
                                                "Grant",
                                                "Revoke"
                                            ],
                                            "type": "string"
                                        },
                                        "Id": {
                                            "description": "The Id of the User",
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "Id",
                                        "Action"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "items": {
                                    "properties": {
                                        "Action": {
                                            "description": "The action to take with the user",
                                            "enum": [
                                                "Grant",
                                                "Revoke"
                                            ],
                                            "type": "string"
                                        },
                                        "Id": {
                                            "description": "The Id of the User",
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "Id",
                                        "Action"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "text/xml": {
                            "schema": {
                                "items": {
                                    "properties": {
                                        "Action": {
                                            "description": "The action to take with the user",
                                            "enum": [
                                                "Grant",
                                                "Revoke"
                                            ],
                                            "type": "string"
                                        },
                                        "Id": {
                                            "description": "The Id of the User",
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "Id",
                                        "Action"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "items": {
                                    "properties": {
                                        "Action": {
                                            "description": "The action to take with the user",
                                            "enum": [
                                                "Grant",
                                                "Revoke"
                                            ],
                                            "type": "string"
                                        },
                                        "Id": {
                                            "description": "The Id of the User",
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "Id",
                                        "Action"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        }
                    },
                    "description": "A list of changes to the Role's Users",
                    "required": true
                }
            }
        },
        "/api/v2/UpdateGroupClientRelationships": {
            "get": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "UpdateGroupClientRelationships_GetSubscriptions",
                "parameters": [
                    {
                        "description": "Optional. Filter by Client ID",
                        "in": "query",
                        "name": "ClientID",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Optional. Filter by Update Group ID",
                        "in": "query",
                        "name": "UpdateGroupID",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Optional. The page limit. The default page limit is 10.",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "Optional. The page offset. The default page offset is 0.",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "properties": {
                                                    "Active": {
                                                        "description": "The subscription status.  The status is active by default.",
                                                        "type": "boolean"
                                                    },
                                                    "ClientID": {
                                                        "description": "Read Only after creation. The client id of the subscriber.",
                                                        "type": "string"
                                                    },
                                                    "LastCheckin": {
                                                        "description": "ReadOnly. The timestamp of the last checkin.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "RelationshipID": {
                                                        "description": "Read Only after creation. The relationship id.  A relationship id will be assigned if not provided on creation.",
                                                        "type": "string"
                                                    },
                                                    "UpdateGroupID": {
                                                        "description": "Read Only after creation. The update group to subscribe to.",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "UpdateGroupID",
                                                    "ClientID"
                                                ],
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "properties": {
                                                    "Active": {
                                                        "description": "The subscription status.  The status is active by default.",
                                                        "type": "boolean"
                                                    },
                                                    "ClientID": {
                                                        "description": "Read Only after creation. The client id of the subscriber.",
                                                        "type": "string"
                                                    },
                                                    "LastCheckin": {
                                                        "description": "ReadOnly. The timestamp of the last checkin.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "RelationshipID": {
                                                        "description": "Read Only after creation. The relationship id.  A relationship id will be assigned if not provided on creation.",
                                                        "type": "string"
                                                    },
                                                    "UpdateGroupID": {
                                                        "description": "Read Only after creation. The update group to subscribe to.",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "UpdateGroupID",
                                                    "ClientID"
                                                ],
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get a list of current Client Subscriptions.",
                "tags": [
                    "UpdateGroupClientRelationships"
                ]
            },
            "post": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "UpdateGroupClientRelationships_PostSubscription",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Add a subscription",
                "tags": [
                    "UpdateGroupClientRelationships"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Active": {
                                        "description": "The subscription status.  The status is active by default.",
                                        "type": "boolean"
                                    },
                                    "ClientID": {
                                        "description": "Read Only after creation. The client id of the subscriber.",
                                        "type": "string"
                                    },
                                    "LastCheckin": {
                                        "description": "ReadOnly. The timestamp of the last checkin.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "RelationshipID": {
                                        "description": "Read Only after creation. The relationship id.  A relationship id will be assigned if not provided on creation.",
                                        "type": "string"
                                    },
                                    "UpdateGroupID": {
                                        "description": "Read Only after creation. The update group to subscribe to.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "UpdateGroupID",
                                    "ClientID"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "Active": {
                                        "description": "The subscription status.  The status is active by default.",
                                        "type": "boolean"
                                    },
                                    "ClientID": {
                                        "description": "Read Only after creation. The client id of the subscriber.",
                                        "type": "string"
                                    },
                                    "LastCheckin": {
                                        "description": "ReadOnly. The timestamp of the last checkin.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "RelationshipID": {
                                        "description": "Read Only after creation. The relationship id.  A relationship id will be assigned if not provided on creation.",
                                        "type": "string"
                                    },
                                    "UpdateGroupID": {
                                        "description": "Read Only after creation. The update group to subscribe to.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "UpdateGroupID",
                                    "ClientID"
                                ],
                                "type": "object"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "properties": {
                                    "Active": {
                                        "description": "The subscription status.  The status is active by default.",
                                        "type": "boolean"
                                    },
                                    "ClientID": {
                                        "description": "Read Only after creation. The client id of the subscriber.",
                                        "type": "string"
                                    },
                                    "LastCheckin": {
                                        "description": "ReadOnly. The timestamp of the last checkin.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "RelationshipID": {
                                        "description": "Read Only after creation. The relationship id.  A relationship id will be assigned if not provided on creation.",
                                        "type": "string"
                                    },
                                    "UpdateGroupID": {
                                        "description": "Read Only after creation. The update group to subscribe to.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "UpdateGroupID",
                                    "ClientID"
                                ],
                                "type": "object"
                            }
                        },
                        "text/xml": {
                            "schema": {
                                "properties": {
                                    "Active": {
                                        "description": "The subscription status.  The status is active by default.",
                                        "type": "boolean"
                                    },
                                    "ClientID": {
                                        "description": "Read Only after creation. The client id of the subscriber.",
                                        "type": "string"
                                    },
                                    "LastCheckin": {
                                        "description": "ReadOnly. The timestamp of the last checkin.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "RelationshipID": {
                                        "description": "Read Only after creation. The relationship id.  A relationship id will be assigned if not provided on creation.",
                                        "type": "string"
                                    },
                                    "UpdateGroupID": {
                                        "description": "Read Only after creation. The update group to subscribe to.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "UpdateGroupID",
                                    "ClientID"
                                ],
                                "type": "object"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "Active": {
                                        "description": "The subscription status.  The status is active by default.",
                                        "type": "boolean"
                                    },
                                    "ClientID": {
                                        "description": "Read Only after creation. The client id of the subscriber.",
                                        "type": "string"
                                    },
                                    "LastCheckin": {
                                        "description": "ReadOnly. The timestamp of the last checkin.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "RelationshipID": {
                                        "description": "Read Only after creation. The relationship id.  A relationship id will be assigned if not provided on creation.",
                                        "type": "string"
                                    },
                                    "UpdateGroupID": {
                                        "description": "Read Only after creation. The update group to subscribe to.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "UpdateGroupID",
                                    "ClientID"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The UpdateGroupClientRelationship to add.",
                    "required": true
                }
            },
            "put": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "UpdateGroupClientRelationships_PutSubscriptionByClientIDUpdateGroupID",
                "parameters": [
                    {
                        "description": "The Client ID.  This can be a client ID that has not been registered yet.",
                        "in": "query",
                        "name": "ClientID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The Update Group ID",
                        "in": "query",
                        "name": "UpdateGroupID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Subscribe the client to the Update Group.",
                        "in": "query",
                        "name": "Active",
                        "required": true,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "DEPRECATED. Set client subscription status for an update group.",
                "tags": [
                    "UpdateGroupClientRelationships"
                ]
            }
        },
        "/api/v2/UpdateGroupClientRelationships/{RelationshipID}": {
            "get": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "UpdateGroupClientRelationships_GetSubscription",
                "parameters": [
                    {
                        "description": "The RelationshipID.",
                        "in": "path",
                        "name": "RelationshipID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Active": {
                                            "description": "The subscription status.  The status is active by default.",
                                            "type": "boolean"
                                        },
                                        "ClientID": {
                                            "description": "Read Only after creation. The client id of the subscriber.",
                                            "type": "string"
                                        },
                                        "LastCheckin": {
                                            "description": "ReadOnly. The timestamp of the last checkin.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "RelationshipID": {
                                            "description": "Read Only after creation. The relationship id.  A relationship id will be assigned if not provided on creation.",
                                            "type": "string"
                                        },
                                        "UpdateGroupID": {
                                            "description": "Read Only after creation. The update group to subscribe to.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "UpdateGroupID",
                                        "ClientID"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "Active": {
                                            "description": "The subscription status.  The status is active by default.",
                                            "type": "boolean"
                                        },
                                        "ClientID": {
                                            "description": "Read Only after creation. The client id of the subscriber.",
                                            "type": "string"
                                        },
                                        "LastCheckin": {
                                            "description": "ReadOnly. The timestamp of the last checkin.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "RelationshipID": {
                                            "description": "Read Only after creation. The relationship id.  A relationship id will be assigned if not provided on creation.",
                                            "type": "string"
                                        },
                                        "UpdateGroupID": {
                                            "description": "Read Only after creation. The update group to subscribe to.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "UpdateGroupID",
                                        "ClientID"
                                    ],
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "Active": {
                                            "description": "The subscription status.  The status is active by default.",
                                            "type": "boolean"
                                        },
                                        "ClientID": {
                                            "description": "Read Only after creation. The client id of the subscriber.",
                                            "type": "string"
                                        },
                                        "LastCheckin": {
                                            "description": "ReadOnly. The timestamp of the last checkin.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "RelationshipID": {
                                            "description": "Read Only after creation. The relationship id.  A relationship id will be assigned if not provided on creation.",
                                            "type": "string"
                                        },
                                        "UpdateGroupID": {
                                            "description": "Read Only after creation. The update group to subscribe to.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "UpdateGroupID",
                                        "ClientID"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "Active": {
                                            "description": "The subscription status.  The status is active by default.",
                                            "type": "boolean"
                                        },
                                        "ClientID": {
                                            "description": "Read Only after creation. The client id of the subscriber.",
                                            "type": "string"
                                        },
                                        "LastCheckin": {
                                            "description": "ReadOnly. The timestamp of the last checkin.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "RelationshipID": {
                                            "description": "Read Only after creation. The relationship id.  A relationship id will be assigned if not provided on creation.",
                                            "type": "string"
                                        },
                                        "UpdateGroupID": {
                                            "description": "Read Only after creation. The update group to subscribe to.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "UpdateGroupID",
                                        "ClientID"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get a subscription by RelationshipID",
                "tags": [
                    "UpdateGroupClientRelationships"
                ]
            },
            "put": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "UpdateGroupClientRelationships_PutSubscription",
                "parameters": [
                    {
                        "description": "The relationship id of the UpdateGroupClientRelationship",
                        "in": "path",
                        "name": "RelationshipID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Updates a Subscription",
                "tags": [
                    "UpdateGroupClientRelationships"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Active": {
                                        "description": "The subscription status.  The status is active by default.",
                                        "type": "boolean"
                                    },
                                    "ClientID": {
                                        "description": "Read Only after creation. The client id of the subscriber.",
                                        "type": "string"
                                    },
                                    "LastCheckin": {
                                        "description": "ReadOnly. The timestamp of the last checkin.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "RelationshipID": {
                                        "description": "Read Only after creation. The relationship id.  A relationship id will be assigned if not provided on creation.",
                                        "type": "string"
                                    },
                                    "UpdateGroupID": {
                                        "description": "Read Only after creation. The update group to subscribe to.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "UpdateGroupID",
                                    "ClientID"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "Active": {
                                        "description": "The subscription status.  The status is active by default.",
                                        "type": "boolean"
                                    },
                                    "ClientID": {
                                        "description": "Read Only after creation. The client id of the subscriber.",
                                        "type": "string"
                                    },
                                    "LastCheckin": {
                                        "description": "ReadOnly. The timestamp of the last checkin.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "RelationshipID": {
                                        "description": "Read Only after creation. The relationship id.  A relationship id will be assigned if not provided on creation.",
                                        "type": "string"
                                    },
                                    "UpdateGroupID": {
                                        "description": "Read Only after creation. The update group to subscribe to.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "UpdateGroupID",
                                    "ClientID"
                                ],
                                "type": "object"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "properties": {
                                    "Active": {
                                        "description": "The subscription status.  The status is active by default.",
                                        "type": "boolean"
                                    },
                                    "ClientID": {
                                        "description": "Read Only after creation. The client id of the subscriber.",
                                        "type": "string"
                                    },
                                    "LastCheckin": {
                                        "description": "ReadOnly. The timestamp of the last checkin.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "RelationshipID": {
                                        "description": "Read Only after creation. The relationship id.  A relationship id will be assigned if not provided on creation.",
                                        "type": "string"
                                    },
                                    "UpdateGroupID": {
                                        "description": "Read Only after creation. The update group to subscribe to.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "UpdateGroupID",
                                    "ClientID"
                                ],
                                "type": "object"
                            }
                        },
                        "text/xml": {
                            "schema": {
                                "properties": {
                                    "Active": {
                                        "description": "The subscription status.  The status is active by default.",
                                        "type": "boolean"
                                    },
                                    "ClientID": {
                                        "description": "Read Only after creation. The client id of the subscriber.",
                                        "type": "string"
                                    },
                                    "LastCheckin": {
                                        "description": "ReadOnly. The timestamp of the last checkin.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "RelationshipID": {
                                        "description": "Read Only after creation. The relationship id.  A relationship id will be assigned if not provided on creation.",
                                        "type": "string"
                                    },
                                    "UpdateGroupID": {
                                        "description": "Read Only after creation. The update group to subscribe to.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "UpdateGroupID",
                                    "ClientID"
                                ],
                                "type": "object"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "Active": {
                                        "description": "The subscription status.  The status is active by default.",
                                        "type": "boolean"
                                    },
                                    "ClientID": {
                                        "description": "Read Only after creation. The client id of the subscriber.",
                                        "type": "string"
                                    },
                                    "LastCheckin": {
                                        "description": "ReadOnly. The timestamp of the last checkin.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "RelationshipID": {
                                        "description": "Read Only after creation. The relationship id.  A relationship id will be assigned if not provided on creation.",
                                        "type": "string"
                                    },
                                    "UpdateGroupID": {
                                        "description": "Read Only after creation. The update group to subscribe to.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "UpdateGroupID",
                                    "ClientID"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The updated UpdateGroupClientRelationship",
                    "required": true
                }
            }
        },
        "/api/v2/UpdateGroupSubscriptions": {
            "get": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "UpdateGroupSubscriptions_GetUpdateGroupSubscriptions",
                "parameters": [
                    {
                        "description": "Optional. Filter by Update Group ID.",
                        "in": "query",
                        "name": "UpdateGroupID",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Optional. Filter by Package Type ID.",
                        "in": "query",
                        "name": "PackageTypeID",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Optional. Filter by Client ID.",
                        "in": "query",
                        "name": "ClientID",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Optional. The page limit. The default page limit is 10.",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "Optional. The page offset. The default page offset is 0.",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "properties": {
                                                    "ClientID": {
                                                        "description": "The ClientID.",
                                                        "type": "string"
                                                    },
                                                    "Include": {
                                                        "description": "True to receive content of type indicated by PackageTypeID.",
                                                        "type": "boolean"
                                                    },
                                                    "PackageTypeID": {
                                                        "description": "The PackageType to set subscription status for",
                                                        "type": "string"
                                                    },
                                                    "UpdateGroupID": {
                                                        "description": "The Update Group this subscription is relevant for.",
                                                        "type": "string"
                                                    },
                                                    "UpdateGroupSubscriptionID": {
                                                        "description": "The Update Group Subscription ID.  This ID will be automatically assigned when creating an Update Group Subscription.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    }
                                                },
                                                "required": [
                                                    "UpdateGroupID",
                                                    "PackageTypeID",
                                                    "ClientID",
                                                    "Include"
                                                ],
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "properties": {
                                                    "ClientID": {
                                                        "description": "The ClientID.",
                                                        "type": "string"
                                                    },
                                                    "Include": {
                                                        "description": "True to receive content of type indicated by PackageTypeID.",
                                                        "type": "boolean"
                                                    },
                                                    "PackageTypeID": {
                                                        "description": "The PackageType to set subscription status for",
                                                        "type": "string"
                                                    },
                                                    "UpdateGroupID": {
                                                        "description": "The Update Group this subscription is relevant for.",
                                                        "type": "string"
                                                    },
                                                    "UpdateGroupSubscriptionID": {
                                                        "description": "The Update Group Subscription ID.  This ID will be automatically assigned when creating an Update Group Subscription.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    }
                                                },
                                                "required": [
                                                    "UpdateGroupID",
                                                    "PackageTypeID",
                                                    "ClientID",
                                                    "Include"
                                                ],
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get Update Group Subscriptions",
                "tags": [
                    "UpdateGroupSubscriptions"
                ]
            },
            "post": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "UpdateGroupSubscriptions_PostUpdateGroupSubscription",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Add an Update Group Subscription",
                "tags": [
                    "UpdateGroupSubscriptions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ClientID": {
                                        "description": "The ClientID.",
                                        "type": "string"
                                    },
                                    "Include": {
                                        "description": "True to receive content of type indicated by PackageTypeID.",
                                        "type": "boolean"
                                    },
                                    "PackageTypeID": {
                                        "description": "The PackageType to set subscription status for",
                                        "type": "string"
                                    },
                                    "UpdateGroupID": {
                                        "description": "The Update Group this subscription is relevant for.",
                                        "type": "string"
                                    },
                                    "UpdateGroupSubscriptionID": {
                                        "description": "The Update Group Subscription ID.  This ID will be automatically assigned when creating an Update Group Subscription.",
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "UpdateGroupID",
                                    "PackageTypeID",
                                    "ClientID",
                                    "Include"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "ClientID": {
                                        "description": "The ClientID.",
                                        "type": "string"
                                    },
                                    "Include": {
                                        "description": "True to receive content of type indicated by PackageTypeID.",
                                        "type": "boolean"
                                    },
                                    "PackageTypeID": {
                                        "description": "The PackageType to set subscription status for",
                                        "type": "string"
                                    },
                                    "UpdateGroupID": {
                                        "description": "The Update Group this subscription is relevant for.",
                                        "type": "string"
                                    },
                                    "UpdateGroupSubscriptionID": {
                                        "description": "The Update Group Subscription ID.  This ID will be automatically assigned when creating an Update Group Subscription.",
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "UpdateGroupID",
                                    "PackageTypeID",
                                    "ClientID",
                                    "Include"
                                ],
                                "type": "object"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "properties": {
                                    "ClientID": {
                                        "description": "The ClientID.",
                                        "type": "string"
                                    },
                                    "Include": {
                                        "description": "True to receive content of type indicated by PackageTypeID.",
                                        "type": "boolean"
                                    },
                                    "PackageTypeID": {
                                        "description": "The PackageType to set subscription status for",
                                        "type": "string"
                                    },
                                    "UpdateGroupID": {
                                        "description": "The Update Group this subscription is relevant for.",
                                        "type": "string"
                                    },
                                    "UpdateGroupSubscriptionID": {
                                        "description": "The Update Group Subscription ID.  This ID will be automatically assigned when creating an Update Group Subscription.",
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "UpdateGroupID",
                                    "PackageTypeID",
                                    "ClientID",
                                    "Include"
                                ],
                                "type": "object"
                            }
                        },
                        "text/xml": {
                            "schema": {
                                "properties": {
                                    "ClientID": {
                                        "description": "The ClientID.",
                                        "type": "string"
                                    },
                                    "Include": {
                                        "description": "True to receive content of type indicated by PackageTypeID.",
                                        "type": "boolean"
                                    },
                                    "PackageTypeID": {
                                        "description": "The PackageType to set subscription status for",
                                        "type": "string"
                                    },
                                    "UpdateGroupID": {
                                        "description": "The Update Group this subscription is relevant for.",
                                        "type": "string"
                                    },
                                    "UpdateGroupSubscriptionID": {
                                        "description": "The Update Group Subscription ID.  This ID will be automatically assigned when creating an Update Group Subscription.",
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "UpdateGroupID",
                                    "PackageTypeID",
                                    "ClientID",
                                    "Include"
                                ],
                                "type": "object"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "ClientID": {
                                        "description": "The ClientID.",
                                        "type": "string"
                                    },
                                    "Include": {
                                        "description": "True to receive content of type indicated by PackageTypeID.",
                                        "type": "boolean"
                                    },
                                    "PackageTypeID": {
                                        "description": "The PackageType to set subscription status for",
                                        "type": "string"
                                    },
                                    "UpdateGroupID": {
                                        "description": "The Update Group this subscription is relevant for.",
                                        "type": "string"
                                    },
                                    "UpdateGroupSubscriptionID": {
                                        "description": "The Update Group Subscription ID.  This ID will be automatically assigned when creating an Update Group Subscription.",
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "UpdateGroupID",
                                    "PackageTypeID",
                                    "ClientID",
                                    "Include"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The Update Group Subscription to add",
                    "required": true
                }
            }
        },
        "/api/v2/UpdateGroupSubscriptions/{UpdateGroupSubscriptionID}": {
            "delete": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "UpdateGroupSubscriptions_DeleteUpdateGroupSubscription",
                "parameters": [
                    {
                        "description": "The Update Group Subscription ID to delete",
                        "in": "path",
                        "name": "UpdateGroupSubscriptionID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Delete an Update Group Subscription",
                "tags": [
                    "UpdateGroupSubscriptions"
                ]
            },
            "get": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "UpdateGroupSubscriptions_GetUpdateGroupSubscription",
                "parameters": [
                    {
                        "description": "The Update Group Subscription ID",
                        "in": "path",
                        "name": "UpdateGroupSubscriptionID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "ClientID": {
                                            "description": "The ClientID.",
                                            "type": "string"
                                        },
                                        "Include": {
                                            "description": "True to receive content of type indicated by PackageTypeID.",
                                            "type": "boolean"
                                        },
                                        "PackageTypeID": {
                                            "description": "The PackageType to set subscription status for",
                                            "type": "string"
                                        },
                                        "UpdateGroupID": {
                                            "description": "The Update Group this subscription is relevant for.",
                                            "type": "string"
                                        },
                                        "UpdateGroupSubscriptionID": {
                                            "description": "The Update Group Subscription ID.  This ID will be automatically assigned when creating an Update Group Subscription.",
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "UpdateGroupID",
                                        "PackageTypeID",
                                        "ClientID",
                                        "Include"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "ClientID": {
                                            "description": "The ClientID.",
                                            "type": "string"
                                        },
                                        "Include": {
                                            "description": "True to receive content of type indicated by PackageTypeID.",
                                            "type": "boolean"
                                        },
                                        "PackageTypeID": {
                                            "description": "The PackageType to set subscription status for",
                                            "type": "string"
                                        },
                                        "UpdateGroupID": {
                                            "description": "The Update Group this subscription is relevant for.",
                                            "type": "string"
                                        },
                                        "UpdateGroupSubscriptionID": {
                                            "description": "The Update Group Subscription ID.  This ID will be automatically assigned when creating an Update Group Subscription.",
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "UpdateGroupID",
                                        "PackageTypeID",
                                        "ClientID",
                                        "Include"
                                    ],
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "ClientID": {
                                            "description": "The ClientID.",
                                            "type": "string"
                                        },
                                        "Include": {
                                            "description": "True to receive content of type indicated by PackageTypeID.",
                                            "type": "boolean"
                                        },
                                        "PackageTypeID": {
                                            "description": "The PackageType to set subscription status for",
                                            "type": "string"
                                        },
                                        "UpdateGroupID": {
                                            "description": "The Update Group this subscription is relevant for.",
                                            "type": "string"
                                        },
                                        "UpdateGroupSubscriptionID": {
                                            "description": "The Update Group Subscription ID.  This ID will be automatically assigned when creating an Update Group Subscription.",
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "UpdateGroupID",
                                        "PackageTypeID",
                                        "ClientID",
                                        "Include"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "ClientID": {
                                            "description": "The ClientID.",
                                            "type": "string"
                                        },
                                        "Include": {
                                            "description": "True to receive content of type indicated by PackageTypeID.",
                                            "type": "boolean"
                                        },
                                        "PackageTypeID": {
                                            "description": "The PackageType to set subscription status for",
                                            "type": "string"
                                        },
                                        "UpdateGroupID": {
                                            "description": "The Update Group this subscription is relevant for.",
                                            "type": "string"
                                        },
                                        "UpdateGroupSubscriptionID": {
                                            "description": "The Update Group Subscription ID.  This ID will be automatically assigned when creating an Update Group Subscription.",
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "UpdateGroupID",
                                        "PackageTypeID",
                                        "ClientID",
                                        "Include"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get an Update Group Subscription",
                "tags": [
                    "UpdateGroupSubscriptions"
                ]
            },
            "put": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "UpdateGroupSubscriptions_PutUpdateGroupSubscription",
                "parameters": [
                    {
                        "description": "The Update Group Subscription ID",
                        "in": "path",
                        "name": "UpdateGroupSubscriptionID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Update an Update Group Subscription",
                "tags": [
                    "UpdateGroupSubscriptions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ClientID": {
                                        "description": "The ClientID.",
                                        "type": "string"
                                    },
                                    "Include": {
                                        "description": "True to receive content of type indicated by PackageTypeID.",
                                        "type": "boolean"
                                    },
                                    "PackageTypeID": {
                                        "description": "The PackageType to set subscription status for",
                                        "type": "string"
                                    },
                                    "UpdateGroupID": {
                                        "description": "The Update Group this subscription is relevant for.",
                                        "type": "string"
                                    },
                                    "UpdateGroupSubscriptionID": {
                                        "description": "The Update Group Subscription ID.  This ID will be automatically assigned when creating an Update Group Subscription.",
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "UpdateGroupID",
                                    "PackageTypeID",
                                    "ClientID",
                                    "Include"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "ClientID": {
                                        "description": "The ClientID.",
                                        "type": "string"
                                    },
                                    "Include": {
                                        "description": "True to receive content of type indicated by PackageTypeID.",
                                        "type": "boolean"
                                    },
                                    "PackageTypeID": {
                                        "description": "The PackageType to set subscription status for",
                                        "type": "string"
                                    },
                                    "UpdateGroupID": {
                                        "description": "The Update Group this subscription is relevant for.",
                                        "type": "string"
                                    },
                                    "UpdateGroupSubscriptionID": {
                                        "description": "The Update Group Subscription ID.  This ID will be automatically assigned when creating an Update Group Subscription.",
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "UpdateGroupID",
                                    "PackageTypeID",
                                    "ClientID",
                                    "Include"
                                ],
                                "type": "object"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "properties": {
                                    "ClientID": {
                                        "description": "The ClientID.",
                                        "type": "string"
                                    },
                                    "Include": {
                                        "description": "True to receive content of type indicated by PackageTypeID.",
                                        "type": "boolean"
                                    },
                                    "PackageTypeID": {
                                        "description": "The PackageType to set subscription status for",
                                        "type": "string"
                                    },
                                    "UpdateGroupID": {
                                        "description": "The Update Group this subscription is relevant for.",
                                        "type": "string"
                                    },
                                    "UpdateGroupSubscriptionID": {
                                        "description": "The Update Group Subscription ID.  This ID will be automatically assigned when creating an Update Group Subscription.",
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "UpdateGroupID",
                                    "PackageTypeID",
                                    "ClientID",
                                    "Include"
                                ],
                                "type": "object"
                            }
                        },
                        "text/xml": {
                            "schema": {
                                "properties": {
                                    "ClientID": {
                                        "description": "The ClientID.",
                                        "type": "string"
                                    },
                                    "Include": {
                                        "description": "True to receive content of type indicated by PackageTypeID.",
                                        "type": "boolean"
                                    },
                                    "PackageTypeID": {
                                        "description": "The PackageType to set subscription status for",
                                        "type": "string"
                                    },
                                    "UpdateGroupID": {
                                        "description": "The Update Group this subscription is relevant for.",
                                        "type": "string"
                                    },
                                    "UpdateGroupSubscriptionID": {
                                        "description": "The Update Group Subscription ID.  This ID will be automatically assigned when creating an Update Group Subscription.",
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "UpdateGroupID",
                                    "PackageTypeID",
                                    "ClientID",
                                    "Include"
                                ],
                                "type": "object"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "ClientID": {
                                        "description": "The ClientID.",
                                        "type": "string"
                                    },
                                    "Include": {
                                        "description": "True to receive content of type indicated by PackageTypeID.",
                                        "type": "boolean"
                                    },
                                    "PackageTypeID": {
                                        "description": "The PackageType to set subscription status for",
                                        "type": "string"
                                    },
                                    "UpdateGroupID": {
                                        "description": "The Update Group this subscription is relevant for.",
                                        "type": "string"
                                    },
                                    "UpdateGroupSubscriptionID": {
                                        "description": "The Update Group Subscription ID.  This ID will be automatically assigned when creating an Update Group Subscription.",
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "UpdateGroupID",
                                    "PackageTypeID",
                                    "ClientID",
                                    "Include"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The updated Update Group Subscription",
                    "required": true
                }
            }
        },
        "/api/v2/UpdateGroups": {
            "get": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "parameters": [
                    {
                        "description": "Optional. The page limit. The default page limit is 10.",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "Optional. The page offset. The default page offset is 0.",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "properties": {
                                                    "Description": {
                                                        "description": "The description of the update group",
                                                        "type": "string"
                                                    },
                                                    "ID": {
                                                        "type": "string"
                                                    },
                                                    "InventoryFrequency": {
                                                        "description": "The time in minutes between inventory checks. Default value is 1440 minutes (one day).",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "InventoryPackage": {
                                                        "description": "The Package ID of the package used for inventory",
                                                        "type": "string"
                                                    },
                                                    "LocalizedDescription": {
                                                        "description": "Optional. The StringID used to localize the description of the update group",
                                                        "type": "string"
                                                    },
                                                    "LocalizedName": {
                                                        "description": "Optional. The StringID used to localize the name of the update group",
                                                        "type": "string"
                                                    },
                                                    "ReportField": {
                                                        "description": "A field to return in the status report for this update group.\r\n            Specify the field with the format [Label]: {[InventoryPackageID].[Category].[Attribute]}.  (i.e. example: {bec778ca-278d-424a-867a-4653a1a19e86.MyCategory.MyAttribute})",
                                                        "type": "string"
                                                    },
                                                    "UpdateType": {
                                                        "description": "The update type name",
                                                        "type": "string"
                                                    },
                                                    "ValidatingField": {
                                                        "description": "A field used for validation in the status report for this update group.\r\n            Specify the field with the format [Label]: {[InventoryPackageID].[Category].[Attribute]}.  (i.e. example: {bec778ca-278d-424a-867a-4653a1a19e86.MyCategory.MyAttribute})",
                                                        "type": "string"
                                                    },
                                                    "ValueToValidate": {
                                                        "description": "The value to validate the ValidationField against.",
                                                        "type": "string"
                                                    },
                                                    "Version": {
                                                        "description": "The version of the UpdateGroup, this value is incremented with each modification to a related Bundle or PackageType",
                                                        "format": "byte",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "Description",
                                                    "UpdateType"
                                                ],
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "properties": {
                                                    "Description": {
                                                        "description": "The description of the update group",
                                                        "type": "string"
                                                    },
                                                    "ID": {
                                                        "type": "string"
                                                    },
                                                    "InventoryFrequency": {
                                                        "description": "The time in minutes between inventory checks. Default value is 1440 minutes (one day).",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "InventoryPackage": {
                                                        "description": "The Package ID of the package used for inventory",
                                                        "type": "string"
                                                    },
                                                    "LocalizedDescription": {
                                                        "description": "Optional. The StringID used to localize the description of the update group",
                                                        "type": "string"
                                                    },
                                                    "LocalizedName": {
                                                        "description": "Optional. The StringID used to localize the name of the update group",
                                                        "type": "string"
                                                    },
                                                    "ReportField": {
                                                        "description": "A field to return in the status report for this update group.\r\n            Specify the field with the format [Label]: {[InventoryPackageID].[Category].[Attribute]}.  (i.e. example: {bec778ca-278d-424a-867a-4653a1a19e86.MyCategory.MyAttribute})",
                                                        "type": "string"
                                                    },
                                                    "UpdateType": {
                                                        "description": "The update type name",
                                                        "type": "string"
                                                    },
                                                    "ValidatingField": {
                                                        "description": "A field used for validation in the status report for this update group.\r\n            Specify the field with the format [Label]: {[InventoryPackageID].[Category].[Attribute]}.  (i.e. example: {bec778ca-278d-424a-867a-4653a1a19e86.MyCategory.MyAttribute})",
                                                        "type": "string"
                                                    },
                                                    "ValueToValidate": {
                                                        "description": "The value to validate the ValidationField against.",
                                                        "type": "string"
                                                    },
                                                    "Version": {
                                                        "description": "The version of the UpdateGroup, this value is incremented with each modification to a related Bundle or PackageType",
                                                        "format": "byte",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "Description",
                                                    "UpdateType"
                                                ],
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get a list of Update Groups.  Update Groups are used by the client to register for a specific type of update.",
                "tags": [
                    "UpdateGroups"
                ]
            },
            "post": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "UpdateGroups_Post",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Add a new Update Group.  The report field is a string that has a dot based request for a specific piece of submitted data.",
                "tags": [
                    "UpdateGroups"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Description": {
                                        "description": "The description of the update group",
                                        "type": "string"
                                    },
                                    "ID": {
                                        "type": "string"
                                    },
                                    "InventoryFrequency": {
                                        "description": "The time in minutes between inventory checks. Default value is 1440 minutes (one day).",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "InventoryPackage": {
                                        "description": "The Package ID of the package used for inventory",
                                        "type": "string"
                                    },
                                    "LocalizedDescription": {
                                        "description": "Optional. The StringID used to localize the description of the update group",
                                        "type": "string"
                                    },
                                    "LocalizedName": {
                                        "description": "Optional. The StringID used to localize the name of the update group",
                                        "type": "string"
                                    },
                                    "ReportField": {
                                        "description": "A field to return in the status report for this update group.\r\n            Specify the field with the format [Label]: {[InventoryPackageID].[Category].[Attribute]}.  (i.e. example: {bec778ca-278d-424a-867a-4653a1a19e86.MyCategory.MyAttribute})",
                                        "type": "string"
                                    },
                                    "UpdateType": {
                                        "description": "The update type name",
                                        "type": "string"
                                    },
                                    "ValidatingField": {
                                        "description": "A field used for validation in the status report for this update group.\r\n            Specify the field with the format [Label]: {[InventoryPackageID].[Category].[Attribute]}.  (i.e. example: {bec778ca-278d-424a-867a-4653a1a19e86.MyCategory.MyAttribute})",
                                        "type": "string"
                                    },
                                    "ValueToValidate": {
                                        "description": "The value to validate the ValidationField against.",
                                        "type": "string"
                                    },
                                    "Version": {
                                        "description": "The version of the UpdateGroup, this value is incremented with each modification to a related Bundle or PackageType",
                                        "format": "byte",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Description",
                                    "UpdateType"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "Description": {
                                        "description": "The description of the update group",
                                        "type": "string"
                                    },
                                    "ID": {
                                        "type": "string"
                                    },
                                    "InventoryFrequency": {
                                        "description": "The time in minutes between inventory checks. Default value is 1440 minutes (one day).",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "InventoryPackage": {
                                        "description": "The Package ID of the package used for inventory",
                                        "type": "string"
                                    },
                                    "LocalizedDescription": {
                                        "description": "Optional. The StringID used to localize the description of the update group",
                                        "type": "string"
                                    },
                                    "LocalizedName": {
                                        "description": "Optional. The StringID used to localize the name of the update group",
                                        "type": "string"
                                    },
                                    "ReportField": {
                                        "description": "A field to return in the status report for this update group.\r\n            Specify the field with the format [Label]: {[InventoryPackageID].[Category].[Attribute]}.  (i.e. example: {bec778ca-278d-424a-867a-4653a1a19e86.MyCategory.MyAttribute})",
                                        "type": "string"
                                    },
                                    "UpdateType": {
                                        "description": "The update type name",
                                        "type": "string"
                                    },
                                    "ValidatingField": {
                                        "description": "A field used for validation in the status report for this update group.\r\n            Specify the field with the format [Label]: {[InventoryPackageID].[Category].[Attribute]}.  (i.e. example: {bec778ca-278d-424a-867a-4653a1a19e86.MyCategory.MyAttribute})",
                                        "type": "string"
                                    },
                                    "ValueToValidate": {
                                        "description": "The value to validate the ValidationField against.",
                                        "type": "string"
                                    },
                                    "Version": {
                                        "description": "The version of the UpdateGroup, this value is incremented with each modification to a related Bundle or PackageType",
                                        "format": "byte",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Description",
                                    "UpdateType"
                                ],
                                "type": "object"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "properties": {
                                    "Description": {
                                        "description": "The description of the update group",
                                        "type": "string"
                                    },
                                    "ID": {
                                        "type": "string"
                                    },
                                    "InventoryFrequency": {
                                        "description": "The time in minutes between inventory checks. Default value is 1440 minutes (one day).",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "InventoryPackage": {
                                        "description": "The Package ID of the package used for inventory",
                                        "type": "string"
                                    },
                                    "LocalizedDescription": {
                                        "description": "Optional. The StringID used to localize the description of the update group",
                                        "type": "string"
                                    },
                                    "LocalizedName": {
                                        "description": "Optional. The StringID used to localize the name of the update group",
                                        "type": "string"
                                    },
                                    "ReportField": {
                                        "description": "A field to return in the status report for this update group.\r\n            Specify the field with the format [Label]: {[InventoryPackageID].[Category].[Attribute]}.  (i.e. example: {bec778ca-278d-424a-867a-4653a1a19e86.MyCategory.MyAttribute})",
                                        "type": "string"
                                    },
                                    "UpdateType": {
                                        "description": "The update type name",
                                        "type": "string"
                                    },
                                    "ValidatingField": {
                                        "description": "A field used for validation in the status report for this update group.\r\n            Specify the field with the format [Label]: {[InventoryPackageID].[Category].[Attribute]}.  (i.e. example: {bec778ca-278d-424a-867a-4653a1a19e86.MyCategory.MyAttribute})",
                                        "type": "string"
                                    },
                                    "ValueToValidate": {
                                        "description": "The value to validate the ValidationField against.",
                                        "type": "string"
                                    },
                                    "Version": {
                                        "description": "The version of the UpdateGroup, this value is incremented with each modification to a related Bundle or PackageType",
                                        "format": "byte",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Description",
                                    "UpdateType"
                                ],
                                "type": "object"
                            }
                        },
                        "text/xml": {
                            "schema": {
                                "properties": {
                                    "Description": {
                                        "description": "The description of the update group",
                                        "type": "string"
                                    },
                                    "ID": {
                                        "type": "string"
                                    },
                                    "InventoryFrequency": {
                                        "description": "The time in minutes between inventory checks. Default value is 1440 minutes (one day).",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "InventoryPackage": {
                                        "description": "The Package ID of the package used for inventory",
                                        "type": "string"
                                    },
                                    "LocalizedDescription": {
                                        "description": "Optional. The StringID used to localize the description of the update group",
                                        "type": "string"
                                    },
                                    "LocalizedName": {
                                        "description": "Optional. The StringID used to localize the name of the update group",
                                        "type": "string"
                                    },
                                    "ReportField": {
                                        "description": "A field to return in the status report for this update group.\r\n            Specify the field with the format [Label]: {[InventoryPackageID].[Category].[Attribute]}.  (i.e. example: {bec778ca-278d-424a-867a-4653a1a19e86.MyCategory.MyAttribute})",
                                        "type": "string"
                                    },
                                    "UpdateType": {
                                        "description": "The update type name",
                                        "type": "string"
                                    },
                                    "ValidatingField": {
                                        "description": "A field used for validation in the status report for this update group.\r\n            Specify the field with the format [Label]: {[InventoryPackageID].[Category].[Attribute]}.  (i.e. example: {bec778ca-278d-424a-867a-4653a1a19e86.MyCategory.MyAttribute})",
                                        "type": "string"
                                    },
                                    "ValueToValidate": {
                                        "description": "The value to validate the ValidationField against.",
                                        "type": "string"
                                    },
                                    "Version": {
                                        "description": "The version of the UpdateGroup, this value is incremented with each modification to a related Bundle or PackageType",
                                        "format": "byte",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Description",
                                    "UpdateType"
                                ],
                                "type": "object"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "Description": {
                                        "description": "The description of the update group",
                                        "type": "string"
                                    },
                                    "ID": {
                                        "type": "string"
                                    },
                                    "InventoryFrequency": {
                                        "description": "The time in minutes between inventory checks. Default value is 1440 minutes (one day).",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "InventoryPackage": {
                                        "description": "The Package ID of the package used for inventory",
                                        "type": "string"
                                    },
                                    "LocalizedDescription": {
                                        "description": "Optional. The StringID used to localize the description of the update group",
                                        "type": "string"
                                    },
                                    "LocalizedName": {
                                        "description": "Optional. The StringID used to localize the name of the update group",
                                        "type": "string"
                                    },
                                    "ReportField": {
                                        "description": "A field to return in the status report for this update group.\r\n            Specify the field with the format [Label]: {[InventoryPackageID].[Category].[Attribute]}.  (i.e. example: {bec778ca-278d-424a-867a-4653a1a19e86.MyCategory.MyAttribute})",
                                        "type": "string"
                                    },
                                    "UpdateType": {
                                        "description": "The update type name",
                                        "type": "string"
                                    },
                                    "ValidatingField": {
                                        "description": "A field used for validation in the status report for this update group.\r\n            Specify the field with the format [Label]: {[InventoryPackageID].[Category].[Attribute]}.  (i.e. example: {bec778ca-278d-424a-867a-4653a1a19e86.MyCategory.MyAttribute})",
                                        "type": "string"
                                    },
                                    "ValueToValidate": {
                                        "description": "The value to validate the ValidationField against.",
                                        "type": "string"
                                    },
                                    "Version": {
                                        "description": "The version of the UpdateGroup, this value is incremented with each modification to a related Bundle or PackageType",
                                        "format": "byte",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Description",
                                    "UpdateType"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/api/v2/UpdateGroups/{ID}": {
            "delete": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "UpdateGroups_Delete",
                "parameters": [
                    {
                        "description": "The ID of the Update Group to Delete",
                        "in": "path",
                        "name": "ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Delete an Update Group.",
                "tags": [
                    "UpdateGroups"
                ]
            },
            "get": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "parameters": [
                    {
                        "description": "The ID of the Update Group",
                        "in": "path",
                        "name": "ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Description": {
                                            "description": "The description of the update group",
                                            "type": "string"
                                        },
                                        "ID": {
                                            "type": "string"
                                        },
                                        "InventoryFrequency": {
                                            "description": "The time in minutes between inventory checks. Default value is 1440 minutes (one day).",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "InventoryPackage": {
                                            "description": "The Package ID of the package used for inventory",
                                            "type": "string"
                                        },
                                        "LocalizedDescription": {
                                            "description": "Optional. The StringID used to localize the description of the update group",
                                            "type": "string"
                                        },
                                        "LocalizedName": {
                                            "description": "Optional. The StringID used to localize the name of the update group",
                                            "type": "string"
                                        },
                                        "ReportField": {
                                            "description": "A field to return in the status report for this update group.\r\n            Specify the field with the format [Label]: {[InventoryPackageID].[Category].[Attribute]}.  (i.e. example: {bec778ca-278d-424a-867a-4653a1a19e86.MyCategory.MyAttribute})",
                                            "type": "string"
                                        },
                                        "UpdateType": {
                                            "description": "The update type name",
                                            "type": "string"
                                        },
                                        "ValidatingField": {
                                            "description": "A field used for validation in the status report for this update group.\r\n            Specify the field with the format [Label]: {[InventoryPackageID].[Category].[Attribute]}.  (i.e. example: {bec778ca-278d-424a-867a-4653a1a19e86.MyCategory.MyAttribute})",
                                            "type": "string"
                                        },
                                        "ValueToValidate": {
                                            "description": "The value to validate the ValidationField against.",
                                            "type": "string"
                                        },
                                        "Version": {
                                            "description": "The version of the UpdateGroup, this value is incremented with each modification to a related Bundle or PackageType",
                                            "format": "byte",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "Description",
                                        "UpdateType"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "Description": {
                                            "description": "The description of the update group",
                                            "type": "string"
                                        },
                                        "ID": {
                                            "type": "string"
                                        },
                                        "InventoryFrequency": {
                                            "description": "The time in minutes between inventory checks. Default value is 1440 minutes (one day).",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "InventoryPackage": {
                                            "description": "The Package ID of the package used for inventory",
                                            "type": "string"
                                        },
                                        "LocalizedDescription": {
                                            "description": "Optional. The StringID used to localize the description of the update group",
                                            "type": "string"
                                        },
                                        "LocalizedName": {
                                            "description": "Optional. The StringID used to localize the name of the update group",
                                            "type": "string"
                                        },
                                        "ReportField": {
                                            "description": "A field to return in the status report for this update group.\r\n            Specify the field with the format [Label]: {[InventoryPackageID].[Category].[Attribute]}.  (i.e. example: {bec778ca-278d-424a-867a-4653a1a19e86.MyCategory.MyAttribute})",
                                            "type": "string"
                                        },
                                        "UpdateType": {
                                            "description": "The update type name",
                                            "type": "string"
                                        },
                                        "ValidatingField": {
                                            "description": "A field used for validation in the status report for this update group.\r\n            Specify the field with the format [Label]: {[InventoryPackageID].[Category].[Attribute]}.  (i.e. example: {bec778ca-278d-424a-867a-4653a1a19e86.MyCategory.MyAttribute})",
                                            "type": "string"
                                        },
                                        "ValueToValidate": {
                                            "description": "The value to validate the ValidationField against.",
                                            "type": "string"
                                        },
                                        "Version": {
                                            "description": "The version of the UpdateGroup, this value is incremented with each modification to a related Bundle or PackageType",
                                            "format": "byte",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "Description",
                                        "UpdateType"
                                    ],
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "Description": {
                                            "description": "The description of the update group",
                                            "type": "string"
                                        },
                                        "ID": {
                                            "type": "string"
                                        },
                                        "InventoryFrequency": {
                                            "description": "The time in minutes between inventory checks. Default value is 1440 minutes (one day).",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "InventoryPackage": {
                                            "description": "The Package ID of the package used for inventory",
                                            "type": "string"
                                        },
                                        "LocalizedDescription": {
                                            "description": "Optional. The StringID used to localize the description of the update group",
                                            "type": "string"
                                        },
                                        "LocalizedName": {
                                            "description": "Optional. The StringID used to localize the name of the update group",
                                            "type": "string"
                                        },
                                        "ReportField": {
                                            "description": "A field to return in the status report for this update group.\r\n            Specify the field with the format [Label]: {[InventoryPackageID].[Category].[Attribute]}.  (i.e. example: {bec778ca-278d-424a-867a-4653a1a19e86.MyCategory.MyAttribute})",
                                            "type": "string"
                                        },
                                        "UpdateType": {
                                            "description": "The update type name",
                                            "type": "string"
                                        },
                                        "ValidatingField": {
                                            "description": "A field used for validation in the status report for this update group.\r\n            Specify the field with the format [Label]: {[InventoryPackageID].[Category].[Attribute]}.  (i.e. example: {bec778ca-278d-424a-867a-4653a1a19e86.MyCategory.MyAttribute})",
                                            "type": "string"
                                        },
                                        "ValueToValidate": {
                                            "description": "The value to validate the ValidationField against.",
                                            "type": "string"
                                        },
                                        "Version": {
                                            "description": "The version of the UpdateGroup, this value is incremented with each modification to a related Bundle or PackageType",
                                            "format": "byte",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "Description",
                                        "UpdateType"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "Description": {
                                            "description": "The description of the update group",
                                            "type": "string"
                                        },
                                        "ID": {
                                            "type": "string"
                                        },
                                        "InventoryFrequency": {
                                            "description": "The time in minutes between inventory checks. Default value is 1440 minutes (one day).",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "InventoryPackage": {
                                            "description": "The Package ID of the package used for inventory",
                                            "type": "string"
                                        },
                                        "LocalizedDescription": {
                                            "description": "Optional. The StringID used to localize the description of the update group",
                                            "type": "string"
                                        },
                                        "LocalizedName": {
                                            "description": "Optional. The StringID used to localize the name of the update group",
                                            "type": "string"
                                        },
                                        "ReportField": {
                                            "description": "A field to return in the status report for this update group.\r\n            Specify the field with the format [Label]: {[InventoryPackageID].[Category].[Attribute]}.  (i.e. example: {bec778ca-278d-424a-867a-4653a1a19e86.MyCategory.MyAttribute})",
                                            "type": "string"
                                        },
                                        "UpdateType": {
                                            "description": "The update type name",
                                            "type": "string"
                                        },
                                        "ValidatingField": {
                                            "description": "A field used for validation in the status report for this update group.\r\n            Specify the field with the format [Label]: {[InventoryPackageID].[Category].[Attribute]}.  (i.e. example: {bec778ca-278d-424a-867a-4653a1a19e86.MyCategory.MyAttribute})",
                                            "type": "string"
                                        },
                                        "ValueToValidate": {
                                            "description": "The value to validate the ValidationField against.",
                                            "type": "string"
                                        },
                                        "Version": {
                                            "description": "The version of the UpdateGroup, this value is incremented with each modification to a related Bundle or PackageType",
                                            "format": "byte",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "Description",
                                        "UpdateType"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get a specific Update Group by ID.",
                "tags": [
                    "UpdateGroups"
                ]
            },
            "put": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "UpdateGroups_Put",
                "parameters": [
                    {
                        "description": "ID of the Update Group",
                        "in": "path",
                        "name": "ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Modify an Update Group.",
                "tags": [
                    "UpdateGroups"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Description": {
                                        "description": "The description of the update group",
                                        "type": "string"
                                    },
                                    "ID": {
                                        "type": "string"
                                    },
                                    "InventoryFrequency": {
                                        "description": "The time in minutes between inventory checks. Default value is 1440 minutes (one day).",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "InventoryPackage": {
                                        "description": "The Package ID of the package used for inventory",
                                        "type": "string"
                                    },
                                    "LocalizedDescription": {
                                        "description": "Optional. The StringID used to localize the description of the update group",
                                        "type": "string"
                                    },
                                    "LocalizedName": {
                                        "description": "Optional. The StringID used to localize the name of the update group",
                                        "type": "string"
                                    },
                                    "ReportField": {
                                        "description": "A field to return in the status report for this update group.\r\n            Specify the field with the format [Label]: {[InventoryPackageID].[Category].[Attribute]}.  (i.e. example: {bec778ca-278d-424a-867a-4653a1a19e86.MyCategory.MyAttribute})",
                                        "type": "string"
                                    },
                                    "UpdateType": {
                                        "description": "The update type name",
                                        "type": "string"
                                    },
                                    "ValidatingField": {
                                        "description": "A field used for validation in the status report for this update group.\r\n            Specify the field with the format [Label]: {[InventoryPackageID].[Category].[Attribute]}.  (i.e. example: {bec778ca-278d-424a-867a-4653a1a19e86.MyCategory.MyAttribute})",
                                        "type": "string"
                                    },
                                    "ValueToValidate": {
                                        "description": "The value to validate the ValidationField against.",
                                        "type": "string"
                                    },
                                    "Version": {
                                        "description": "The version of the UpdateGroup, this value is incremented with each modification to a related Bundle or PackageType",
                                        "format": "byte",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Description",
                                    "UpdateType"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "Description": {
                                        "description": "The description of the update group",
                                        "type": "string"
                                    },
                                    "ID": {
                                        "type": "string"
                                    },
                                    "InventoryFrequency": {
                                        "description": "The time in minutes between inventory checks. Default value is 1440 minutes (one day).",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "InventoryPackage": {
                                        "description": "The Package ID of the package used for inventory",
                                        "type": "string"
                                    },
                                    "LocalizedDescription": {
                                        "description": "Optional. The StringID used to localize the description of the update group",
                                        "type": "string"
                                    },
                                    "LocalizedName": {
                                        "description": "Optional. The StringID used to localize the name of the update group",
                                        "type": "string"
                                    },
                                    "ReportField": {
                                        "description": "A field to return in the status report for this update group.\r\n            Specify the field with the format [Label]: {[InventoryPackageID].[Category].[Attribute]}.  (i.e. example: {bec778ca-278d-424a-867a-4653a1a19e86.MyCategory.MyAttribute})",
                                        "type": "string"
                                    },
                                    "UpdateType": {
                                        "description": "The update type name",
                                        "type": "string"
                                    },
                                    "ValidatingField": {
                                        "description": "A field used for validation in the status report for this update group.\r\n            Specify the field with the format [Label]: {[InventoryPackageID].[Category].[Attribute]}.  (i.e. example: {bec778ca-278d-424a-867a-4653a1a19e86.MyCategory.MyAttribute})",
                                        "type": "string"
                                    },
                                    "ValueToValidate": {
                                        "description": "The value to validate the ValidationField against.",
                                        "type": "string"
                                    },
                                    "Version": {
                                        "description": "The version of the UpdateGroup, this value is incremented with each modification to a related Bundle or PackageType",
                                        "format": "byte",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Description",
                                    "UpdateType"
                                ],
                                "type": "object"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "properties": {
                                    "Description": {
                                        "description": "The description of the update group",
                                        "type": "string"
                                    },
                                    "ID": {
                                        "type": "string"
                                    },
                                    "InventoryFrequency": {
                                        "description": "The time in minutes between inventory checks. Default value is 1440 minutes (one day).",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "InventoryPackage": {
                                        "description": "The Package ID of the package used for inventory",
                                        "type": "string"
                                    },
                                    "LocalizedDescription": {
                                        "description": "Optional. The StringID used to localize the description of the update group",
                                        "type": "string"
                                    },
                                    "LocalizedName": {
                                        "description": "Optional. The StringID used to localize the name of the update group",
                                        "type": "string"
                                    },
                                    "ReportField": {
                                        "description": "A field to return in the status report for this update group.\r\n            Specify the field with the format [Label]: {[InventoryPackageID].[Category].[Attribute]}.  (i.e. example: {bec778ca-278d-424a-867a-4653a1a19e86.MyCategory.MyAttribute})",
                                        "type": "string"
                                    },
                                    "UpdateType": {
                                        "description": "The update type name",
                                        "type": "string"
                                    },
                                    "ValidatingField": {
                                        "description": "A field used for validation in the status report for this update group.\r\n            Specify the field with the format [Label]: {[InventoryPackageID].[Category].[Attribute]}.  (i.e. example: {bec778ca-278d-424a-867a-4653a1a19e86.MyCategory.MyAttribute})",
                                        "type": "string"
                                    },
                                    "ValueToValidate": {
                                        "description": "The value to validate the ValidationField against.",
                                        "type": "string"
                                    },
                                    "Version": {
                                        "description": "The version of the UpdateGroup, this value is incremented with each modification to a related Bundle or PackageType",
                                        "format": "byte",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Description",
                                    "UpdateType"
                                ],
                                "type": "object"
                            }
                        },
                        "text/xml": {
                            "schema": {
                                "properties": {
                                    "Description": {
                                        "description": "The description of the update group",
                                        "type": "string"
                                    },
                                    "ID": {
                                        "type": "string"
                                    },
                                    "InventoryFrequency": {
                                        "description": "The time in minutes between inventory checks. Default value is 1440 minutes (one day).",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "InventoryPackage": {
                                        "description": "The Package ID of the package used for inventory",
                                        "type": "string"
                                    },
                                    "LocalizedDescription": {
                                        "description": "Optional. The StringID used to localize the description of the update group",
                                        "type": "string"
                                    },
                                    "LocalizedName": {
                                        "description": "Optional. The StringID used to localize the name of the update group",
                                        "type": "string"
                                    },
                                    "ReportField": {
                                        "description": "A field to return in the status report for this update group.\r\n            Specify the field with the format [Label]: {[InventoryPackageID].[Category].[Attribute]}.  (i.e. example: {bec778ca-278d-424a-867a-4653a1a19e86.MyCategory.MyAttribute})",
                                        "type": "string"
                                    },
                                    "UpdateType": {
                                        "description": "The update type name",
                                        "type": "string"
                                    },
                                    "ValidatingField": {
                                        "description": "A field used for validation in the status report for this update group.\r\n            Specify the field with the format [Label]: {[InventoryPackageID].[Category].[Attribute]}.  (i.e. example: {bec778ca-278d-424a-867a-4653a1a19e86.MyCategory.MyAttribute})",
                                        "type": "string"
                                    },
                                    "ValueToValidate": {
                                        "description": "The value to validate the ValidationField against.",
                                        "type": "string"
                                    },
                                    "Version": {
                                        "description": "The version of the UpdateGroup, this value is incremented with each modification to a related Bundle or PackageType",
                                        "format": "byte",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Description",
                                    "UpdateType"
                                ],
                                "type": "object"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "Description": {
                                        "description": "The description of the update group",
                                        "type": "string"
                                    },
                                    "ID": {
                                        "type": "string"
                                    },
                                    "InventoryFrequency": {
                                        "description": "The time in minutes between inventory checks. Default value is 1440 minutes (one day).",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "InventoryPackage": {
                                        "description": "The Package ID of the package used for inventory",
                                        "type": "string"
                                    },
                                    "LocalizedDescription": {
                                        "description": "Optional. The StringID used to localize the description of the update group",
                                        "type": "string"
                                    },
                                    "LocalizedName": {
                                        "description": "Optional. The StringID used to localize the name of the update group",
                                        "type": "string"
                                    },
                                    "ReportField": {
                                        "description": "A field to return in the status report for this update group.\r\n            Specify the field with the format [Label]: {[InventoryPackageID].[Category].[Attribute]}.  (i.e. example: {bec778ca-278d-424a-867a-4653a1a19e86.MyCategory.MyAttribute})",
                                        "type": "string"
                                    },
                                    "UpdateType": {
                                        "description": "The update type name",
                                        "type": "string"
                                    },
                                    "ValidatingField": {
                                        "description": "A field used for validation in the status report for this update group.\r\n            Specify the field with the format [Label]: {[InventoryPackageID].[Category].[Attribute]}.  (i.e. example: {bec778ca-278d-424a-867a-4653a1a19e86.MyCategory.MyAttribute})",
                                        "type": "string"
                                    },
                                    "ValueToValidate": {
                                        "description": "The value to validate the ValidationField against.",
                                        "type": "string"
                                    },
                                    "Version": {
                                        "description": "The version of the UpdateGroup, this value is incremented with each modification to a related Bundle or PackageType",
                                        "format": "byte",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Description",
                                    "UpdateType"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/api/v2/UpdateGroups/{ID}/Bundles": {
            "get": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "UpdateGroups_GetUpdateGroupBundles",
                "parameters": [
                    {
                        "description": "The UpdateGroupID",
                        "in": "path",
                        "name": "ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Include Inactive Bundles (true|false)",
                        "in": "query",
                        "name": "IncludeInactive",
                        "required": true,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "Optional. The page limit. The default page limit is 10.",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "Optional. The page offset. The default page offset is 0.",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "properties": {
                                                    "Active": {
                                                        "description": "Default Value: false. During the creation of the Bundle, this field must be false.",
                                                        "type": "boolean"
                                                    },
                                                    "BundleID": {
                                                        "description": "Read-Only.",
                                                        "type": "string"
                                                    },
                                                    "BundleNumber": {
                                                        "description": "The bundle number",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "Description": {
                                                        "description": "The Bundle description.",
                                                        "type": "string"
                                                    },
                                                    "UpdateGroupID": {
                                                        "description": "The update group this bundle belongs to.",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "Description",
                                                    "UpdateGroupID",
                                                    "BundleNumber"
                                                ],
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "properties": {
                                                    "Active": {
                                                        "description": "Default Value: false. During the creation of the Bundle, this field must be false.",
                                                        "type": "boolean"
                                                    },
                                                    "BundleID": {
                                                        "description": "Read-Only.",
                                                        "type": "string"
                                                    },
                                                    "BundleNumber": {
                                                        "description": "The bundle number",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "Description": {
                                                        "description": "The Bundle description.",
                                                        "type": "string"
                                                    },
                                                    "UpdateGroupID": {
                                                        "description": "The update group this bundle belongs to.",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "Description",
                                                    "UpdateGroupID",
                                                    "BundleNumber"
                                                ],
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get a list of bundles for UpdateGroup.",
                "tags": [
                    "UpdateGroups"
                ]
            }
        },
        "/api/v2/UpdateSystem": {
            "get": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "UpdateSystem_GetCheckin",
                "parameters": [
                    {
                        "description": "The Client ID to check-in.  If this is a new client ID it will be added to Clients.",
                        "in": "query",
                        "name": "ClientID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Get Pkgs w\\o updating Datetimes(true|false)",
                        "in": "query",
                        "name": "Preview",
                        "required": true,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Packages": {
                                            "description": "The packages for the client to run.",
                                            "items": {
                                                "properties": {
                                                    "Autorun": {
                                                        "description": "Value is true if package should run automatically. Default value is false.",
                                                        "type": "boolean"
                                                    },
                                                    "CRC": {
                                                        "description": "The CRC used to validate the download.",
                                                        "type": "string"
                                                    },
                                                    "Description": {
                                                        "description": "The package description",
                                                        "type": "string"
                                                    },
                                                    "LocalizedName": {
                                                        "description": "Optional. The StringID used to localize the name of the Package",
                                                        "type": "string"
                                                    },
                                                    "Notes": {
                                                        "description": "Notes about the package",
                                                        "type": "string"
                                                    },
                                                    "PackageID": {
                                                        "description": "Read Only. The package ID",
                                                        "type": "string"
                                                    },
                                                    "PackageTypeID": {
                                                        "description": "The id of the package type this package belongs to.",
                                                        "type": "string"
                                                    },
                                                    "PreviousVersion": {
                                                        "description": "For delta packages, the previous version required.  For non-delta packages, the Previous version is 0.  Default value is 0.",
                                                        "format": "int32",
                                                        "maximum": 2147483647,
                                                        "minimum": 0,
                                                        "type": "integer"
                                                    },
                                                    "ReleaseDate": {
                                                        "description": "The date the package was released",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "Released": {
                                                        "description": "True if the package is released.  Default value is False.",
                                                        "type": "boolean"
                                                    },
                                                    "RemoveOnSuccess": {
                                                        "description": "True to remove the package after successful execution.  Default value is False.",
                                                        "type": "boolean"
                                                    },
                                                    "Size": {
                                                        "description": "The size of the file at the specified URL.  If a size is not supplied at creation time, the size will be determined by the response from the URL.\r\n            If the size provided does not match the size in the response from the URL an error will be returned.",
                                                        "format": "int64",
                                                        "type": "integer"
                                                    },
                                                    "Switches": {
                                                        "description": "The command line arguments for the package.  Default value is an empty string.",
                                                        "type": "string"
                                                    },
                                                    "Url": {
                                                        "description": "The Url to download the package from.",
                                                        "type": "string"
                                                    },
                                                    "Version": {
                                                        "description": "The version.",
                                                        "format": "int32",
                                                        "maximum": 2147483647,
                                                        "minimum": 1,
                                                        "type": "integer"
                                                    }
                                                },
                                                "required": [
                                                    "PackageTypeID",
                                                    "Url",
                                                    "CRC",
                                                    "Version",
                                                    "Description",
                                                    "ReleaseDate"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "RemovePackages": {
                                            "description": "The package ids for the client to remove.",
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "Packages": {
                                            "description": "The packages for the client to run.",
                                            "items": {
                                                "properties": {
                                                    "Autorun": {
                                                        "description": "Value is true if package should run automatically. Default value is false.",
                                                        "type": "boolean"
                                                    },
                                                    "CRC": {
                                                        "description": "The CRC used to validate the download.",
                                                        "type": "string"
                                                    },
                                                    "Description": {
                                                        "description": "The package description",
                                                        "type": "string"
                                                    },
                                                    "LocalizedName": {
                                                        "description": "Optional. The StringID used to localize the name of the Package",
                                                        "type": "string"
                                                    },
                                                    "Notes": {
                                                        "description": "Notes about the package",
                                                        "type": "string"
                                                    },
                                                    "PackageID": {
                                                        "description": "Read Only. The package ID",
                                                        "type": "string"
                                                    },
                                                    "PackageTypeID": {
                                                        "description": "The id of the package type this package belongs to.",
                                                        "type": "string"
                                                    },
                                                    "PreviousVersion": {
                                                        "description": "For delta packages, the previous version required.  For non-delta packages, the Previous version is 0.  Default value is 0.",
                                                        "format": "int32",
                                                        "maximum": 2147483647,
                                                        "minimum": 0,
                                                        "type": "integer"
                                                    },
                                                    "ReleaseDate": {
                                                        "description": "The date the package was released",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "Released": {
                                                        "description": "True if the package is released.  Default value is False.",
                                                        "type": "boolean"
                                                    },
                                                    "RemoveOnSuccess": {
                                                        "description": "True to remove the package after successful execution.  Default value is False.",
                                                        "type": "boolean"
                                                    },
                                                    "Size": {
                                                        "description": "The size of the file at the specified URL.  If a size is not supplied at creation time, the size will be determined by the response from the URL.\r\n            If the size provided does not match the size in the response from the URL an error will be returned.",
                                                        "format": "int64",
                                                        "type": "integer"
                                                    },
                                                    "Switches": {
                                                        "description": "The command line arguments for the package.  Default value is an empty string.",
                                                        "type": "string"
                                                    },
                                                    "Url": {
                                                        "description": "The Url to download the package from.",
                                                        "type": "string"
                                                    },
                                                    "Version": {
                                                        "description": "The version.",
                                                        "format": "int32",
                                                        "maximum": 2147483647,
                                                        "minimum": 1,
                                                        "type": "integer"
                                                    }
                                                },
                                                "required": [
                                                    "PackageTypeID",
                                                    "Url",
                                                    "CRC",
                                                    "Version",
                                                    "Description",
                                                    "ReleaseDate"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "RemovePackages": {
                                            "description": "The package ids for the client to remove.",
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "Packages": {
                                            "description": "The packages for the client to run.",
                                            "items": {
                                                "properties": {
                                                    "Autorun": {
                                                        "description": "Value is true if package should run automatically. Default value is false.",
                                                        "type": "boolean"
                                                    },
                                                    "CRC": {
                                                        "description": "The CRC used to validate the download.",
                                                        "type": "string"
                                                    },
                                                    "Description": {
                                                        "description": "The package description",
                                                        "type": "string"
                                                    },
                                                    "LocalizedName": {
                                                        "description": "Optional. The StringID used to localize the name of the Package",
                                                        "type": "string"
                                                    },
                                                    "Notes": {
                                                        "description": "Notes about the package",
                                                        "type": "string"
                                                    },
                                                    "PackageID": {
                                                        "description": "Read Only. The package ID",
                                                        "type": "string"
                                                    },
                                                    "PackageTypeID": {
                                                        "description": "The id of the package type this package belongs to.",
                                                        "type": "string"
                                                    },
                                                    "PreviousVersion": {
                                                        "description": "For delta packages, the previous version required.  For non-delta packages, the Previous version is 0.  Default value is 0.",
                                                        "format": "int32",
                                                        "maximum": 2147483647,
                                                        "minimum": 0,
                                                        "type": "integer"
                                                    },
                                                    "ReleaseDate": {
                                                        "description": "The date the package was released",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "Released": {
                                                        "description": "True if the package is released.  Default value is False.",
                                                        "type": "boolean"
                                                    },
                                                    "RemoveOnSuccess": {
                                                        "description": "True to remove the package after successful execution.  Default value is False.",
                                                        "type": "boolean"
                                                    },
                                                    "Size": {
                                                        "description": "The size of the file at the specified URL.  If a size is not supplied at creation time, the size will be determined by the response from the URL.\r\n            If the size provided does not match the size in the response from the URL an error will be returned.",
                                                        "format": "int64",
                                                        "type": "integer"
                                                    },
                                                    "Switches": {
                                                        "description": "The command line arguments for the package.  Default value is an empty string.",
                                                        "type": "string"
                                                    },
                                                    "Url": {
                                                        "description": "The Url to download the package from.",
                                                        "type": "string"
                                                    },
                                                    "Version": {
                                                        "description": "The version.",
                                                        "format": "int32",
                                                        "maximum": 2147483647,
                                                        "minimum": 1,
                                                        "type": "integer"
                                                    }
                                                },
                                                "required": [
                                                    "PackageTypeID",
                                                    "Url",
                                                    "CRC",
                                                    "Version",
                                                    "Description",
                                                    "ReleaseDate"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "RemovePackages": {
                                            "description": "The package ids for the client to remove.",
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "Packages": {
                                            "description": "The packages for the client to run.",
                                            "items": {
                                                "properties": {
                                                    "Autorun": {
                                                        "description": "Value is true if package should run automatically. Default value is false.",
                                                        "type": "boolean"
                                                    },
                                                    "CRC": {
                                                        "description": "The CRC used to validate the download.",
                                                        "type": "string"
                                                    },
                                                    "Description": {
                                                        "description": "The package description",
                                                        "type": "string"
                                                    },
                                                    "LocalizedName": {
                                                        "description": "Optional. The StringID used to localize the name of the Package",
                                                        "type": "string"
                                                    },
                                                    "Notes": {
                                                        "description": "Notes about the package",
                                                        "type": "string"
                                                    },
                                                    "PackageID": {
                                                        "description": "Read Only. The package ID",
                                                        "type": "string"
                                                    },
                                                    "PackageTypeID": {
                                                        "description": "The id of the package type this package belongs to.",
                                                        "type": "string"
                                                    },
                                                    "PreviousVersion": {
                                                        "description": "For delta packages, the previous version required.  For non-delta packages, the Previous version is 0.  Default value is 0.",
                                                        "format": "int32",
                                                        "maximum": 2147483647,
                                                        "minimum": 0,
                                                        "type": "integer"
                                                    },
                                                    "ReleaseDate": {
                                                        "description": "The date the package was released",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "Released": {
                                                        "description": "True if the package is released.  Default value is False.",
                                                        "type": "boolean"
                                                    },
                                                    "RemoveOnSuccess": {
                                                        "description": "True to remove the package after successful execution.  Default value is False.",
                                                        "type": "boolean"
                                                    },
                                                    "Size": {
                                                        "description": "The size of the file at the specified URL.  If a size is not supplied at creation time, the size will be determined by the response from the URL.\r\n            If the size provided does not match the size in the response from the URL an error will be returned.",
                                                        "format": "int64",
                                                        "type": "integer"
                                                    },
                                                    "Switches": {
                                                        "description": "The command line arguments for the package.  Default value is an empty string.",
                                                        "type": "string"
                                                    },
                                                    "Url": {
                                                        "description": "The Url to download the package from.",
                                                        "type": "string"
                                                    },
                                                    "Version": {
                                                        "description": "The version.",
                                                        "format": "int32",
                                                        "maximum": 2147483647,
                                                        "minimum": 1,
                                                        "type": "integer"
                                                    }
                                                },
                                                "required": [
                                                    "PackageTypeID",
                                                    "Url",
                                                    "CRC",
                                                    "Version",
                                                    "Description",
                                                    "ReleaseDate"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "RemovePackages": {
                                            "description": "The package ids for the client to remove.",
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Checks the Client ID into the Update System.",
                "tags": [
                    "UpdateSystem"
                ]
            }
        },
        "/api/v2/UserContentDefinitions": {
            "get": {
                "deprecated": false,
                "description": "Gets a collection of UserContentDefinitions. When successful, the response is a PagedResponse of UserContentDefinitions.\r\n            If unsuccessful, an appropriate ApiError is returned.",
                "operationId": "UserContentDefinitions_GetUserContentDefinitions",
                "parameters": [
                    {
                        "description": "Optional. The page limit.  If not specified, the default page limit is 10.",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "Optional. The page offset.  If not specified, the default page offset is 0.",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "Optional. Filter by UserID.",
                        "in": "query",
                        "name": "userID",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "Optional. Filter by ContentDefinitionID",
                        "in": "query",
                        "name": "contentDefinitionID",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "properties": {
                                                    "ContentDefinitionID": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "UserContentDefinitionID": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "UserID": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "properties": {
                                                    "ContentDefinitionID": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "UserContentDefinitionID": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "UserID": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get UserContentDefinitions",
                "tags": [
                    "UserContentDefinitions"
                ]
            },
            "post": {
                "deprecated": false,
                "description": "Creates a UserContentDefinition.  The body of the POST is the UserContentDefinition to create.\r\n            The UserContentDefinitionID will be assigned on creation of the Job.  When successful, the response\r\n            is the UserContentDefinitionID.  If unsuccessful, an appropriate ApiError is returned.",
                "operationId": "UserContentDefinitions_PostUserContentDefinition",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Create a UserContentDefinition",
                "tags": [
                    "UserContentDefinitions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ContentDefinitionID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "UserContentDefinitionID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "UserID": {
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "ContentDefinitionID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "UserContentDefinitionID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "UserID": {
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "properties": {
                                    "ContentDefinitionID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "UserContentDefinitionID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "UserID": {
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "text/xml": {
                            "schema": {
                                "properties": {
                                    "ContentDefinitionID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "UserContentDefinitionID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "UserID": {
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "ContentDefinitionID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "UserContentDefinitionID": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "UserID": {
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "description": "The UserContentDefinition to create.",
                    "required": true
                }
            }
        },
        "/api/v2/UserContentDefinitions/{userContentDefinitionID}": {
            "delete": {
                "deprecated": false,
                "description": "Deletes an UserContentDefinition. When successful, the response is empty.  If unsuccessful, an appropriate\r\n            ApiError is returned.",
                "operationId": "UserContentDefinitions_DeleteUserContentDefinition",
                "parameters": [
                    {
                        "description": "The ID of the UserContentDefinition to delete",
                        "in": "path",
                        "name": "userContentDefinitionID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Delete a UserContentDefinition",
                "tags": [
                    "UserContentDefinitions"
                ]
            },
            "get": {
                "deprecated": false,
                "description": "Gets a UserContentDefinition by ID. When successful, the response is the requested UserContentDefinition.\r\n            If unsuccessful, an appropriate ApiError is returned.",
                "operationId": "UserContentDefinitions_GetUserContentDefinition",
                "parameters": [
                    {
                        "description": "The ID of the UserContentDefinition to get.",
                        "in": "path",
                        "name": "userContentDefinitionID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "ContentDefinitionID": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "UserContentDefinitionID": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "UserID": {
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "ContentDefinitionID": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "UserContentDefinitionID": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "UserID": {
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "ContentDefinitionID": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "UserContentDefinitionID": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "UserID": {
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "ContentDefinitionID": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "UserContentDefinitionID": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "UserID": {
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get a UserContentDefinition by ID",
                "tags": [
                    "UserContentDefinitions"
                ]
            }
        },
        "/api/v2/Users": {
            "get": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "parameters": [
                    {
                        "description": "Optional. Search by username. Supports beginning and ending wildcards (*).",
                        "in": "query",
                        "name": "username",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Optional. Search by email. Supports beginning and ending wildcards (*).",
                        "in": "query",
                        "name": "email",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Optional. Search by name. Supports beginning and ending wildcards (*).",
                        "in": "query",
                        "name": "name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Optional. The page limit. The default page limit is 10.",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "Optional. The page offset. The default page offset is 0.",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "properties": {
                                                    "ChangePassword": {
                                                        "description": "Never Returned.  When changing a user's password, this field must contain the new password.",
                                                        "type": "string"
                                                    },
                                                    "Email": {
                                                        "description": "The user's email address",
                                                        "type": "string"
                                                    },
                                                    "Name": {
                                                        "description": "The user's name",
                                                        "type": "string"
                                                    },
                                                    "Password": {
                                                        "description": "Never Returned.  Required when creating a new user or updating a user.  When changing a user's password this field must contain the current password.",
                                                        "type": "string"
                                                    },
                                                    "UserID": {
                                                        "description": "The user ID",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "Username": {
                                                        "description": "The username used for authentication",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "properties": {
                                                    "ChangePassword": {
                                                        "description": "Never Returned.  When changing a user's password, this field must contain the new password.",
                                                        "type": "string"
                                                    },
                                                    "Email": {
                                                        "description": "The user's email address",
                                                        "type": "string"
                                                    },
                                                    "Name": {
                                                        "description": "The user's name",
                                                        "type": "string"
                                                    },
                                                    "Password": {
                                                        "description": "Never Returned.  Required when creating a new user or updating a user.  When changing a user's password this field must contain the current password.",
                                                        "type": "string"
                                                    },
                                                    "UserID": {
                                                        "description": "The user ID",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "Username": {
                                                        "description": "The username used for authentication",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get users",
                "tags": [
                    "Users"
                ]
            },
            "post": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "Users_Post",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "ChangePassword": {
                                            "description": "Never Returned.  When changing a user's password, this field must contain the new password.",
                                            "type": "string"
                                        },
                                        "Email": {
                                            "description": "The user's email address",
                                            "type": "string"
                                        },
                                        "Name": {
                                            "description": "The user's name",
                                            "type": "string"
                                        },
                                        "Password": {
                                            "description": "Never Returned.  Required when creating a new user or updating a user.  When changing a user's password this field must contain the current password.",
                                            "type": "string"
                                        },
                                        "UserID": {
                                            "description": "The user ID",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Username": {
                                            "description": "The username used for authentication",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "ChangePassword": {
                                            "description": "Never Returned.  When changing a user's password, this field must contain the new password.",
                                            "type": "string"
                                        },
                                        "Email": {
                                            "description": "The user's email address",
                                            "type": "string"
                                        },
                                        "Name": {
                                            "description": "The user's name",
                                            "type": "string"
                                        },
                                        "Password": {
                                            "description": "Never Returned.  Required when creating a new user or updating a user.  When changing a user's password this field must contain the current password.",
                                            "type": "string"
                                        },
                                        "UserID": {
                                            "description": "The user ID",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Username": {
                                            "description": "The username used for authentication",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "ChangePassword": {
                                            "description": "Never Returned.  When changing a user's password, this field must contain the new password.",
                                            "type": "string"
                                        },
                                        "Email": {
                                            "description": "The user's email address",
                                            "type": "string"
                                        },
                                        "Name": {
                                            "description": "The user's name",
                                            "type": "string"
                                        },
                                        "Password": {
                                            "description": "Never Returned.  Required when creating a new user or updating a user.  When changing a user's password this field must contain the current password.",
                                            "type": "string"
                                        },
                                        "UserID": {
                                            "description": "The user ID",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Username": {
                                            "description": "The username used for authentication",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "ChangePassword": {
                                            "description": "Never Returned.  When changing a user's password, this field must contain the new password.",
                                            "type": "string"
                                        },
                                        "Email": {
                                            "description": "The user's email address",
                                            "type": "string"
                                        },
                                        "Name": {
                                            "description": "The user's name",
                                            "type": "string"
                                        },
                                        "Password": {
                                            "description": "Never Returned.  Required when creating a new user or updating a user.  When changing a user's password this field must contain the current password.",
                                            "type": "string"
                                        },
                                        "UserID": {
                                            "description": "The user ID",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Username": {
                                            "description": "The username used for authentication",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Create a user",
                "tags": [
                    "Users"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ChangePassword": {
                                        "description": "Never Returned.  When changing a user's password, this field must contain the new password.",
                                        "type": "string"
                                    },
                                    "Email": {
                                        "description": "The user's email address",
                                        "type": "string"
                                    },
                                    "Name": {
                                        "description": "The user's name",
                                        "type": "string"
                                    },
                                    "Password": {
                                        "description": "Never Returned.  Required when creating a new user or updating a user.  When changing a user's password this field must contain the current password.",
                                        "type": "string"
                                    },
                                    "UserID": {
                                        "description": "The user ID",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Username": {
                                        "description": "The username used for authentication",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "ChangePassword": {
                                        "description": "Never Returned.  When changing a user's password, this field must contain the new password.",
                                        "type": "string"
                                    },
                                    "Email": {
                                        "description": "The user's email address",
                                        "type": "string"
                                    },
                                    "Name": {
                                        "description": "The user's name",
                                        "type": "string"
                                    },
                                    "Password": {
                                        "description": "Never Returned.  Required when creating a new user or updating a user.  When changing a user's password this field must contain the current password.",
                                        "type": "string"
                                    },
                                    "UserID": {
                                        "description": "The user ID",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Username": {
                                        "description": "The username used for authentication",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "properties": {
                                    "ChangePassword": {
                                        "description": "Never Returned.  When changing a user's password, this field must contain the new password.",
                                        "type": "string"
                                    },
                                    "Email": {
                                        "description": "The user's email address",
                                        "type": "string"
                                    },
                                    "Name": {
                                        "description": "The user's name",
                                        "type": "string"
                                    },
                                    "Password": {
                                        "description": "Never Returned.  Required when creating a new user or updating a user.  When changing a user's password this field must contain the current password.",
                                        "type": "string"
                                    },
                                    "UserID": {
                                        "description": "The user ID",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Username": {
                                        "description": "The username used for authentication",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "text/xml": {
                            "schema": {
                                "properties": {
                                    "ChangePassword": {
                                        "description": "Never Returned.  When changing a user's password, this field must contain the new password.",
                                        "type": "string"
                                    },
                                    "Email": {
                                        "description": "The user's email address",
                                        "type": "string"
                                    },
                                    "Name": {
                                        "description": "The user's name",
                                        "type": "string"
                                    },
                                    "Password": {
                                        "description": "Never Returned.  Required when creating a new user or updating a user.  When changing a user's password this field must contain the current password.",
                                        "type": "string"
                                    },
                                    "UserID": {
                                        "description": "The user ID",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Username": {
                                        "description": "The username used for authentication",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "ChangePassword": {
                                        "description": "Never Returned.  When changing a user's password, this field must contain the new password.",
                                        "type": "string"
                                    },
                                    "Email": {
                                        "description": "The user's email address",
                                        "type": "string"
                                    },
                                    "Name": {
                                        "description": "The user's name",
                                        "type": "string"
                                    },
                                    "Password": {
                                        "description": "Never Returned.  Required when creating a new user or updating a user.  When changing a user's password this field must contain the current password.",
                                        "type": "string"
                                    },
                                    "UserID": {
                                        "description": "The user ID",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Username": {
                                        "description": "The username used for authentication",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "description": "The user to create.",
                    "required": true
                }
            }
        },
        "/api/v2/Users/Current": {
            "get": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "Users_GetCurrentUser",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "ChangePassword": {
                                            "description": "Never Returned.  When changing a user's password, this field must contain the new password.",
                                            "type": "string"
                                        },
                                        "Email": {
                                            "description": "The user's email address",
                                            "type": "string"
                                        },
                                        "Name": {
                                            "description": "The user's name",
                                            "type": "string"
                                        },
                                        "Password": {
                                            "description": "Never Returned.  Required when creating a new user or updating a user.  When changing a user's password this field must contain the current password.",
                                            "type": "string"
                                        },
                                        "UserID": {
                                            "description": "The user ID",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Username": {
                                            "description": "The username used for authentication",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "ChangePassword": {
                                            "description": "Never Returned.  When changing a user's password, this field must contain the new password.",
                                            "type": "string"
                                        },
                                        "Email": {
                                            "description": "The user's email address",
                                            "type": "string"
                                        },
                                        "Name": {
                                            "description": "The user's name",
                                            "type": "string"
                                        },
                                        "Password": {
                                            "description": "Never Returned.  Required when creating a new user or updating a user.  When changing a user's password this field must contain the current password.",
                                            "type": "string"
                                        },
                                        "UserID": {
                                            "description": "The user ID",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Username": {
                                            "description": "The username used for authentication",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "ChangePassword": {
                                            "description": "Never Returned.  When changing a user's password, this field must contain the new password.",
                                            "type": "string"
                                        },
                                        "Email": {
                                            "description": "The user's email address",
                                            "type": "string"
                                        },
                                        "Name": {
                                            "description": "The user's name",
                                            "type": "string"
                                        },
                                        "Password": {
                                            "description": "Never Returned.  Required when creating a new user or updating a user.  When changing a user's password this field must contain the current password.",
                                            "type": "string"
                                        },
                                        "UserID": {
                                            "description": "The user ID",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Username": {
                                            "description": "The username used for authentication",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "ChangePassword": {
                                            "description": "Never Returned.  When changing a user's password, this field must contain the new password.",
                                            "type": "string"
                                        },
                                        "Email": {
                                            "description": "The user's email address",
                                            "type": "string"
                                        },
                                        "Name": {
                                            "description": "The user's name",
                                            "type": "string"
                                        },
                                        "Password": {
                                            "description": "Never Returned.  Required when creating a new user or updating a user.  When changing a user's password this field must contain the current password.",
                                            "type": "string"
                                        },
                                        "UserID": {
                                            "description": "The user ID",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Username": {
                                            "description": "The username used for authentication",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Gets the current user",
                "tags": [
                    "Users"
                ]
            },
            "put": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "Users_PutCurrentUser",
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "summary": "Update a user",
                "tags": [
                    "Users"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ChangePassword": {
                                        "description": "Never Returned.  When changing a user's password, this field must contain the new password.",
                                        "type": "string"
                                    },
                                    "Email": {
                                        "description": "The user's email address",
                                        "type": "string"
                                    },
                                    "Name": {
                                        "description": "The user's name",
                                        "type": "string"
                                    },
                                    "Password": {
                                        "description": "Never Returned.  Required when creating a new user or updating a user.  When changing a user's password this field must contain the current password.",
                                        "type": "string"
                                    },
                                    "UserID": {
                                        "description": "The user ID",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Username": {
                                        "description": "The username used for authentication",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "ChangePassword": {
                                        "description": "Never Returned.  When changing a user's password, this field must contain the new password.",
                                        "type": "string"
                                    },
                                    "Email": {
                                        "description": "The user's email address",
                                        "type": "string"
                                    },
                                    "Name": {
                                        "description": "The user's name",
                                        "type": "string"
                                    },
                                    "Password": {
                                        "description": "Never Returned.  Required when creating a new user or updating a user.  When changing a user's password this field must contain the current password.",
                                        "type": "string"
                                    },
                                    "UserID": {
                                        "description": "The user ID",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Username": {
                                        "description": "The username used for authentication",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "properties": {
                                    "ChangePassword": {
                                        "description": "Never Returned.  When changing a user's password, this field must contain the new password.",
                                        "type": "string"
                                    },
                                    "Email": {
                                        "description": "The user's email address",
                                        "type": "string"
                                    },
                                    "Name": {
                                        "description": "The user's name",
                                        "type": "string"
                                    },
                                    "Password": {
                                        "description": "Never Returned.  Required when creating a new user or updating a user.  When changing a user's password this field must contain the current password.",
                                        "type": "string"
                                    },
                                    "UserID": {
                                        "description": "The user ID",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Username": {
                                        "description": "The username used for authentication",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "text/xml": {
                            "schema": {
                                "properties": {
                                    "ChangePassword": {
                                        "description": "Never Returned.  When changing a user's password, this field must contain the new password.",
                                        "type": "string"
                                    },
                                    "Email": {
                                        "description": "The user's email address",
                                        "type": "string"
                                    },
                                    "Name": {
                                        "description": "The user's name",
                                        "type": "string"
                                    },
                                    "Password": {
                                        "description": "Never Returned.  Required when creating a new user or updating a user.  When changing a user's password this field must contain the current password.",
                                        "type": "string"
                                    },
                                    "UserID": {
                                        "description": "The user ID",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Username": {
                                        "description": "The username used for authentication",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "ChangePassword": {
                                        "description": "Never Returned.  When changing a user's password, this field must contain the new password.",
                                        "type": "string"
                                    },
                                    "Email": {
                                        "description": "The user's email address",
                                        "type": "string"
                                    },
                                    "Name": {
                                        "description": "The user's name",
                                        "type": "string"
                                    },
                                    "Password": {
                                        "description": "Never Returned.  Required when creating a new user or updating a user.  When changing a user's password this field must contain the current password.",
                                        "type": "string"
                                    },
                                    "UserID": {
                                        "description": "The user ID",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Username": {
                                        "description": "The username used for authentication",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "description": "The user",
                    "required": true
                }
            }
        },
        "/api/v2/Users/Current/Permissions": {
            "get": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "parameters": [
                    {
                        "description": "Filter by permission name. Supports ending wildcard (*). Optional.",
                        "in": "query",
                        "name": "Permission",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The page limit. The default page limit is 10.",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "The page offset. The default page offset is 0.",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "properties": {
                                                    "PermissionId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "PermissionName": {
                                                        "type": "string"
                                                    },
                                                    "UserID": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "properties": {
                                                    "PermissionId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "PermissionName": {
                                                        "type": "string"
                                                    },
                                                    "UserID": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get a user's permissions",
                "tags": [
                    "UserPermissions"
                ]
            }
        },
        "/api/v2/Users/Current/Roles": {
            "get": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "UserPermissions_GetCurrentUserRoles",
                "parameters": [
                    {
                        "description": "Filter by role name. Supports ending wildcard (*). Optional.",
                        "in": "query",
                        "name": "Role",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The page limit. The default page limit is 10.",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "The page offset. The default page offset is 0.",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "description": "Defines an API Role",
                                                "properties": {
                                                    "Description": {
                                                        "description": "Role description",
                                                        "type": "string"
                                                    },
                                                    "Id": {
                                                        "description": "The role's identifier.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the role. Must be alpha-numeric strings separated by a period (.).",
                                                        "pattern": "^[0-9a-zA-Z]+(\\.[0-9a-zA-Z]+)*$",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "Name",
                                                    "Description"
                                                ],
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "description": "Defines an API Role",
                                                "properties": {
                                                    "Description": {
                                                        "description": "Role description",
                                                        "type": "string"
                                                    },
                                                    "Id": {
                                                        "description": "The role's identifier.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the role. Must be alpha-numeric strings separated by a period (.).",
                                                        "pattern": "^[0-9a-zA-Z]+(\\.[0-9a-zA-Z]+)*$",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "Name",
                                                    "Description"
                                                ],
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Gets the current user's roles",
                "tags": [
                    "UserPermissions"
                ]
            }
        },
        "/api/v2/Users/{id}": {
            "delete": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "Users_Delete",
                "parameters": [
                    {
                        "description": "The user id",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "summary": "Delete a user",
                "tags": [
                    "Users"
                ]
            },
            "get": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "parameters": [
                    {
                        "description": "The user ID",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "ChangePassword": {
                                            "description": "Never Returned.  When changing a user's password, this field must contain the new password.",
                                            "type": "string"
                                        },
                                        "Email": {
                                            "description": "The user's email address",
                                            "type": "string"
                                        },
                                        "Name": {
                                            "description": "The user's name",
                                            "type": "string"
                                        },
                                        "Password": {
                                            "description": "Never Returned.  Required when creating a new user or updating a user.  When changing a user's password this field must contain the current password.",
                                            "type": "string"
                                        },
                                        "UserID": {
                                            "description": "The user ID",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Username": {
                                            "description": "The username used for authentication",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "ChangePassword": {
                                            "description": "Never Returned.  When changing a user's password, this field must contain the new password.",
                                            "type": "string"
                                        },
                                        "Email": {
                                            "description": "The user's email address",
                                            "type": "string"
                                        },
                                        "Name": {
                                            "description": "The user's name",
                                            "type": "string"
                                        },
                                        "Password": {
                                            "description": "Never Returned.  Required when creating a new user or updating a user.  When changing a user's password this field must contain the current password.",
                                            "type": "string"
                                        },
                                        "UserID": {
                                            "description": "The user ID",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Username": {
                                            "description": "The username used for authentication",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "ChangePassword": {
                                            "description": "Never Returned.  When changing a user's password, this field must contain the new password.",
                                            "type": "string"
                                        },
                                        "Email": {
                                            "description": "The user's email address",
                                            "type": "string"
                                        },
                                        "Name": {
                                            "description": "The user's name",
                                            "type": "string"
                                        },
                                        "Password": {
                                            "description": "Never Returned.  Required when creating a new user or updating a user.  When changing a user's password this field must contain the current password.",
                                            "type": "string"
                                        },
                                        "UserID": {
                                            "description": "The user ID",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Username": {
                                            "description": "The username used for authentication",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "ChangePassword": {
                                            "description": "Never Returned.  When changing a user's password, this field must contain the new password.",
                                            "type": "string"
                                        },
                                        "Email": {
                                            "description": "The user's email address",
                                            "type": "string"
                                        },
                                        "Name": {
                                            "description": "The user's name",
                                            "type": "string"
                                        },
                                        "Password": {
                                            "description": "Never Returned.  Required when creating a new user or updating a user.  When changing a user's password this field must contain the current password.",
                                            "type": "string"
                                        },
                                        "UserID": {
                                            "description": "The user ID",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Username": {
                                            "description": "The username used for authentication",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get a specific user",
                "tags": [
                    "Users"
                ]
            },
            "put": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "Users_Put",
                "parameters": [
                    {
                        "description": "The user id",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "summary": "Update a user",
                "tags": [
                    "Users"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ChangePassword": {
                                        "description": "Never Returned.  When changing a user's password, this field must contain the new password.",
                                        "type": "string"
                                    },
                                    "Email": {
                                        "description": "The user's email address",
                                        "type": "string"
                                    },
                                    "Name": {
                                        "description": "The user's name",
                                        "type": "string"
                                    },
                                    "Password": {
                                        "description": "Never Returned.  Required when creating a new user or updating a user.  When changing a user's password this field must contain the current password.",
                                        "type": "string"
                                    },
                                    "UserID": {
                                        "description": "The user ID",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Username": {
                                        "description": "The username used for authentication",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "ChangePassword": {
                                        "description": "Never Returned.  When changing a user's password, this field must contain the new password.",
                                        "type": "string"
                                    },
                                    "Email": {
                                        "description": "The user's email address",
                                        "type": "string"
                                    },
                                    "Name": {
                                        "description": "The user's name",
                                        "type": "string"
                                    },
                                    "Password": {
                                        "description": "Never Returned.  Required when creating a new user or updating a user.  When changing a user's password this field must contain the current password.",
                                        "type": "string"
                                    },
                                    "UserID": {
                                        "description": "The user ID",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Username": {
                                        "description": "The username used for authentication",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "properties": {
                                    "ChangePassword": {
                                        "description": "Never Returned.  When changing a user's password, this field must contain the new password.",
                                        "type": "string"
                                    },
                                    "Email": {
                                        "description": "The user's email address",
                                        "type": "string"
                                    },
                                    "Name": {
                                        "description": "The user's name",
                                        "type": "string"
                                    },
                                    "Password": {
                                        "description": "Never Returned.  Required when creating a new user or updating a user.  When changing a user's password this field must contain the current password.",
                                        "type": "string"
                                    },
                                    "UserID": {
                                        "description": "The user ID",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Username": {
                                        "description": "The username used for authentication",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "text/xml": {
                            "schema": {
                                "properties": {
                                    "ChangePassword": {
                                        "description": "Never Returned.  When changing a user's password, this field must contain the new password.",
                                        "type": "string"
                                    },
                                    "Email": {
                                        "description": "The user's email address",
                                        "type": "string"
                                    },
                                    "Name": {
                                        "description": "The user's name",
                                        "type": "string"
                                    },
                                    "Password": {
                                        "description": "Never Returned.  Required when creating a new user or updating a user.  When changing a user's password this field must contain the current password.",
                                        "type": "string"
                                    },
                                    "UserID": {
                                        "description": "The user ID",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Username": {
                                        "description": "The username used for authentication",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "ChangePassword": {
                                        "description": "Never Returned.  When changing a user's password, this field must contain the new password.",
                                        "type": "string"
                                    },
                                    "Email": {
                                        "description": "The user's email address",
                                        "type": "string"
                                    },
                                    "Name": {
                                        "description": "The user's name",
                                        "type": "string"
                                    },
                                    "Password": {
                                        "description": "Never Returned.  Required when creating a new user or updating a user.  When changing a user's password this field must contain the current password.",
                                        "type": "string"
                                    },
                                    "UserID": {
                                        "description": "The user ID",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Username": {
                                        "description": "The username used for authentication",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "description": "The user",
                    "required": true
                }
            }
        },
        "/api/v2/Users/{id}/Permissions": {
            "get": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "parameters": [
                    {
                        "description": "The User's ID",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "Filter by permission name. Supports ending wildcard (*). Optional.",
                        "in": "query",
                        "name": "Permission",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The page limit. The default page limit is 10.",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "The page offset. The default page offset is 0.",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "properties": {
                                                    "PermissionId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "PermissionName": {
                                                        "type": "string"
                                                    },
                                                    "UserID": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "properties": {
                                                    "PermissionId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "PermissionName": {
                                                        "type": "string"
                                                    },
                                                    "UserID": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get a user's permissions",
                "tags": [
                    "UserPermissions"
                ]
            }
        },
        "/api/v2/Users/{id}/Roles": {
            "get": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "UserPermissions_GetRoles",
                "parameters": [
                    {
                        "description": "The User's ID",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "Filter by role name. Supports ending wildcard (*). Optional.",
                        "in": "query",
                        "name": "Role",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The page limit. The default page limit is 10.",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "The page offset. The default page offset is 0.",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "description": "Defines an API Role",
                                                "properties": {
                                                    "Description": {
                                                        "description": "Role description",
                                                        "type": "string"
                                                    },
                                                    "Id": {
                                                        "description": "The role's identifier.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the role. Must be alpha-numeric strings separated by a period (.).",
                                                        "pattern": "^[0-9a-zA-Z]+(\\.[0-9a-zA-Z]+)*$",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "Name",
                                                    "Description"
                                                ],
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "description": "Defines an API Role",
                                                "properties": {
                                                    "Description": {
                                                        "description": "Role description",
                                                        "type": "string"
                                                    },
                                                    "Id": {
                                                        "description": "The role's identifier.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the role. Must be alpha-numeric strings separated by a period (.).",
                                                        "pattern": "^[0-9a-zA-Z]+(\\.[0-9a-zA-Z]+)*$",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "Name",
                                                    "Description"
                                                ],
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get a user's roles",
                "tags": [
                    "UserPermissions"
                ]
            },
            "put": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "parameters": [
                    {
                        "description": "The User's ID",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Update a user's roles",
                "tags": [
                    "UserPermissions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "properties": {
                                        "Action": {
                                            "description": "The action to take with the role",
                                            "enum": [
                                                "Grant",
                                                "Revoke"
                                            ],
                                            "type": "string"
                                        },
                                        "Name": {
                                            "description": "The name of the role",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "Name",
                                        "Action"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "items": {
                                    "properties": {
                                        "Action": {
                                            "description": "The action to take with the role",
                                            "enum": [
                                                "Grant",
                                                "Revoke"
                                            ],
                                            "type": "string"
                                        },
                                        "Name": {
                                            "description": "The name of the role",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "Name",
                                        "Action"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "items": {
                                    "properties": {
                                        "Action": {
                                            "description": "The action to take with the role",
                                            "enum": [
                                                "Grant",
                                                "Revoke"
                                            ],
                                            "type": "string"
                                        },
                                        "Name": {
                                            "description": "The name of the role",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "Name",
                                        "Action"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "text/xml": {
                            "schema": {
                                "items": {
                                    "properties": {
                                        "Action": {
                                            "description": "The action to take with the role",
                                            "enum": [
                                                "Grant",
                                                "Revoke"
                                            ],
                                            "type": "string"
                                        },
                                        "Name": {
                                            "description": "The name of the role",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "Name",
                                        "Action"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "items": {
                                    "properties": {
                                        "Action": {
                                            "description": "The action to take with the role",
                                            "enum": [
                                                "Grant",
                                                "Revoke"
                                            ],
                                            "type": "string"
                                        },
                                        "Name": {
                                            "description": "The name of the role",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "Name",
                                        "Action"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        }
                    },
                    "description": "A list of changes to the User's Roles",
                    "required": true
                }
            }
        },
        "/api/v2/VoucherHistory": {
            "get": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "VoucherHistory_GetVoucherHistory",
                "parameters": [
                    {
                        "description": "Optional. Filter history data by Voucher Code.",
                        "in": "query",
                        "name": "VoucherCode",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Optional. Filter history data where changes occured before provided date.",
                        "in": "query",
                        "name": "ChangedBefore",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "description": "Optional. Filter history data where changes occured after provided date.",
                        "in": "query",
                        "name": "ChangedAfter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "description": "Optional. The page limit. The default page limit is 10.",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "Optional. The page offset. The default page offset is 0.",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "properties": {
                                                    "ChangedDate": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "CreatedDate": {
                                                        "description": "Read-Only. The date the voucher was created.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "DealerCode": {
                                                        "description": "The dealer code the voucher is assigned to.  Required for commercial vouchers.",
                                                        "type": "string"
                                                    },
                                                    "Deleted": {
                                                        "description": "Read-Only. True if voucher has been deleted.",
                                                        "type": "boolean"
                                                    },
                                                    "Email": {
                                                        "description": "The email address. Required for Internal Vouchers",
                                                        "type": "string"
                                                    },
                                                    "ExpirationDate": {
                                                        "description": "The expiration date of the voucher. Required for Temporary Vouchers.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "ID": {
                                                        "description": "The id of the voucher history item",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "LicenseTo": {
                                                        "description": "Required for Internal Vouchers",
                                                        "type": "string"
                                                    },
                                                    "ModifiedBy": {
                                                        "description": "Read-Only. The user that made the last modification to the voucher.",
                                                        "type": "string"
                                                    },
                                                    "OrderNumber": {
                                                        "description": "The order number of a commercial license. Required for Commercial Vouchers. Not supported for other Vouchers.",
                                                        "type": "string"
                                                    },
                                                    "Punched": {
                                                        "description": "True if voucher has aleady been used.  False if the voucher has not been used.",
                                                        "type": "boolean"
                                                    },
                                                    "PunchedDate": {
                                                        "description": "Read-Only. The date the voucher was punched.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "Purpose": {
                                                        "description": "Required for Internal Vouchers",
                                                        "type": "string"
                                                    },
                                                    "Type": {
                                                        "description": "The type of voucher.",
                                                        "enum": [
                                                            "Commercial",
                                                            "Internal",
                                                            "Temporary"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "VoucherCode": {
                                                        "description": "The voucher code.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "properties": {
                                                    "ChangedDate": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "CreatedDate": {
                                                        "description": "Read-Only. The date the voucher was created.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "DealerCode": {
                                                        "description": "The dealer code the voucher is assigned to.  Required for commercial vouchers.",
                                                        "type": "string"
                                                    },
                                                    "Deleted": {
                                                        "description": "Read-Only. True if voucher has been deleted.",
                                                        "type": "boolean"
                                                    },
                                                    "Email": {
                                                        "description": "The email address. Required for Internal Vouchers",
                                                        "type": "string"
                                                    },
                                                    "ExpirationDate": {
                                                        "description": "The expiration date of the voucher. Required for Temporary Vouchers.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "ID": {
                                                        "description": "The id of the voucher history item",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "LicenseTo": {
                                                        "description": "Required for Internal Vouchers",
                                                        "type": "string"
                                                    },
                                                    "ModifiedBy": {
                                                        "description": "Read-Only. The user that made the last modification to the voucher.",
                                                        "type": "string"
                                                    },
                                                    "OrderNumber": {
                                                        "description": "The order number of a commercial license. Required for Commercial Vouchers. Not supported for other Vouchers.",
                                                        "type": "string"
                                                    },
                                                    "Punched": {
                                                        "description": "True if voucher has aleady been used.  False if the voucher has not been used.",
                                                        "type": "boolean"
                                                    },
                                                    "PunchedDate": {
                                                        "description": "Read-Only. The date the voucher was punched.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "Purpose": {
                                                        "description": "Required for Internal Vouchers",
                                                        "type": "string"
                                                    },
                                                    "Type": {
                                                        "description": "The type of voucher.",
                                                        "enum": [
                                                            "Commercial",
                                                            "Internal",
                                                            "Temporary"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "VoucherCode": {
                                                        "description": "The voucher code.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Gets voucher history data",
                "tags": [
                    "VoucherHistory"
                ]
            }
        },
        "/api/v2/Vouchers": {
            "get": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "parameters": [
                    {
                        "description": "Optional. Filter vouchers by Type",
                        "in": "query",
                        "name": "Type",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Commercial",
                                "Internal",
                                "Temporary"
                            ]
                        }
                    },
                    {
                        "description": "Optional. Filter vouchers by DealerCode",
                        "in": "query",
                        "name": "DealerCode",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Optional. Filter vouchers by LicenseTo. Wildcard supported (*).",
                        "in": "query",
                        "name": "LicenseTo",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Optional. Filter vouchers by Purpose. Wildcard supported (*).",
                        "in": "query",
                        "name": "Purpose",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Optional. Filter vouchers by OrderNumber",
                        "in": "query",
                        "name": "OrderNumber",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Optional. Filter vouchers by Email. Wildcard supported (*).",
                        "in": "query",
                        "name": "Email",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Optional. Filter vouchers by ModifiedBy",
                        "in": "query",
                        "name": "ModifiedBy",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Optional. Filter vouchers by CreatedDate",
                        "in": "query",
                        "name": "CreatedAfter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "description": "Optional. Filter vouchers by CreatedDate",
                        "in": "query",
                        "name": "CreatedBefore",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "description": "Optional. Filter vouchers by PunchedDate",
                        "in": "query",
                        "name": "PunchedAfter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "description": "Optional. Filter vouchers by PunchedDate",
                        "in": "query",
                        "name": "PunchedBefore",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "description": "Optional. Filter vouchers by Punched status",
                        "in": "query",
                        "name": "Punched",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "Optional. Filter vouchers by ExpirationDate",
                        "in": "query",
                        "name": "ExpirationAfter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "description": "Optional. Filter vouchers by ExpirationDate",
                        "in": "query",
                        "name": "ExpirationBefore",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "description": "Optional. Filter vouchers by Deleted state. By default only vouchers that are not deleted are returned.",
                        "in": "query",
                        "name": "Deleted",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "NotDeleted",
                                "Deleted",
                                "All"
                            ]
                        }
                    },
                    {
                        "description": "Optional. The page limit. The default page limit is 10.",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "Optional. The page offset. The default page offset is 0.",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "description": "A voucher for EDT activation",
                                                "properties": {
                                                    "CreatedDate": {
                                                        "description": "Read-Only. The date the voucher was created.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "DealerCode": {
                                                        "description": "The dealer code the voucher is assigned to.  Required for commercial vouchers.",
                                                        "type": "string"
                                                    },
                                                    "Deleted": {
                                                        "description": "Read-Only. True if voucher has been deleted.",
                                                        "type": "boolean"
                                                    },
                                                    "Email": {
                                                        "description": "The email address. Required for Internal Vouchers",
                                                        "type": "string"
                                                    },
                                                    "ExpirationDate": {
                                                        "description": "The expiration date of the voucher. Required for Temporary Vouchers.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "LicenseTo": {
                                                        "description": "Required for Internal Vouchers",
                                                        "type": "string"
                                                    },
                                                    "ModifiedBy": {
                                                        "description": "Read-Only. The user that made the last modification to the voucher.",
                                                        "type": "string"
                                                    },
                                                    "OrderNumber": {
                                                        "description": "The order number of a commercial license. Required for Commercial Vouchers. Not supported for other Vouchers.",
                                                        "type": "string"
                                                    },
                                                    "Punched": {
                                                        "description": "True if voucher has aleady been used.  False if the voucher has not been used.",
                                                        "type": "boolean"
                                                    },
                                                    "PunchedDate": {
                                                        "description": "Read-Only. The date the voucher was punched.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "Purpose": {
                                                        "description": "Required for Internal Vouchers",
                                                        "type": "string"
                                                    },
                                                    "Type": {
                                                        "description": "The type of voucher. Commercial is the default if not specified.",
                                                        "enum": [
                                                            "Commercial",
                                                            "Internal",
                                                            "Temporary"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "VoucherCode": {
                                                        "description": "The voucher code.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "description": "A voucher for EDT activation",
                                                "properties": {
                                                    "CreatedDate": {
                                                        "description": "Read-Only. The date the voucher was created.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "DealerCode": {
                                                        "description": "The dealer code the voucher is assigned to.  Required for commercial vouchers.",
                                                        "type": "string"
                                                    },
                                                    "Deleted": {
                                                        "description": "Read-Only. True if voucher has been deleted.",
                                                        "type": "boolean"
                                                    },
                                                    "Email": {
                                                        "description": "The email address. Required for Internal Vouchers",
                                                        "type": "string"
                                                    },
                                                    "ExpirationDate": {
                                                        "description": "The expiration date of the voucher. Required for Temporary Vouchers.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "LicenseTo": {
                                                        "description": "Required for Internal Vouchers",
                                                        "type": "string"
                                                    },
                                                    "ModifiedBy": {
                                                        "description": "Read-Only. The user that made the last modification to the voucher.",
                                                        "type": "string"
                                                    },
                                                    "OrderNumber": {
                                                        "description": "The order number of a commercial license. Required for Commercial Vouchers. Not supported for other Vouchers.",
                                                        "type": "string"
                                                    },
                                                    "Punched": {
                                                        "description": "True if voucher has aleady been used.  False if the voucher has not been used.",
                                                        "type": "boolean"
                                                    },
                                                    "PunchedDate": {
                                                        "description": "Read-Only. The date the voucher was punched.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "Purpose": {
                                                        "description": "Required for Internal Vouchers",
                                                        "type": "string"
                                                    },
                                                    "Type": {
                                                        "description": "The type of voucher. Commercial is the default if not specified.",
                                                        "enum": [
                                                            "Commercial",
                                                            "Internal",
                                                            "Temporary"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "VoucherCode": {
                                                        "description": "The voucher code.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Gets a list of vouchers",
                "tags": [
                    "Vouchers"
                ]
            },
            "post": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "Vouchers_Post",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "summary": "Create a voucher",
                "tags": [
                    "Vouchers"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "A voucher for EDT activation",
                                "properties": {
                                    "CreatedDate": {
                                        "description": "Read-Only. The date the voucher was created.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "DealerCode": {
                                        "description": "The dealer code the voucher is assigned to.  Required for commercial vouchers.",
                                        "type": "string"
                                    },
                                    "Deleted": {
                                        "description": "Read-Only. True if voucher has been deleted.",
                                        "type": "boolean"
                                    },
                                    "Email": {
                                        "description": "The email address. Required for Internal Vouchers",
                                        "type": "string"
                                    },
                                    "ExpirationDate": {
                                        "description": "The expiration date of the voucher. Required for Temporary Vouchers.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "LicenseTo": {
                                        "description": "Required for Internal Vouchers",
                                        "type": "string"
                                    },
                                    "ModifiedBy": {
                                        "description": "Read-Only. The user that made the last modification to the voucher.",
                                        "type": "string"
                                    },
                                    "OrderNumber": {
                                        "description": "The order number of a commercial license. Required for Commercial Vouchers. Not supported for other Vouchers.",
                                        "type": "string"
                                    },
                                    "Punched": {
                                        "description": "True if voucher has aleady been used.  False if the voucher has not been used.",
                                        "type": "boolean"
                                    },
                                    "PunchedDate": {
                                        "description": "Read-Only. The date the voucher was punched.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Purpose": {
                                        "description": "Required for Internal Vouchers",
                                        "type": "string"
                                    },
                                    "Type": {
                                        "description": "The type of voucher. Commercial is the default if not specified.",
                                        "enum": [
                                            "Commercial",
                                            "Internal",
                                            "Temporary"
                                        ],
                                        "type": "string"
                                    },
                                    "VoucherCode": {
                                        "description": "The voucher code.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "description": "A voucher for EDT activation",
                                "properties": {
                                    "CreatedDate": {
                                        "description": "Read-Only. The date the voucher was created.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "DealerCode": {
                                        "description": "The dealer code the voucher is assigned to.  Required for commercial vouchers.",
                                        "type": "string"
                                    },
                                    "Deleted": {
                                        "description": "Read-Only. True if voucher has been deleted.",
                                        "type": "boolean"
                                    },
                                    "Email": {
                                        "description": "The email address. Required for Internal Vouchers",
                                        "type": "string"
                                    },
                                    "ExpirationDate": {
                                        "description": "The expiration date of the voucher. Required for Temporary Vouchers.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "LicenseTo": {
                                        "description": "Required for Internal Vouchers",
                                        "type": "string"
                                    },
                                    "ModifiedBy": {
                                        "description": "Read-Only. The user that made the last modification to the voucher.",
                                        "type": "string"
                                    },
                                    "OrderNumber": {
                                        "description": "The order number of a commercial license. Required for Commercial Vouchers. Not supported for other Vouchers.",
                                        "type": "string"
                                    },
                                    "Punched": {
                                        "description": "True if voucher has aleady been used.  False if the voucher has not been used.",
                                        "type": "boolean"
                                    },
                                    "PunchedDate": {
                                        "description": "Read-Only. The date the voucher was punched.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Purpose": {
                                        "description": "Required for Internal Vouchers",
                                        "type": "string"
                                    },
                                    "Type": {
                                        "description": "The type of voucher. Commercial is the default if not specified.",
                                        "enum": [
                                            "Commercial",
                                            "Internal",
                                            "Temporary"
                                        ],
                                        "type": "string"
                                    },
                                    "VoucherCode": {
                                        "description": "The voucher code.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "description": "A voucher for EDT activation",
                                "properties": {
                                    "CreatedDate": {
                                        "description": "Read-Only. The date the voucher was created.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "DealerCode": {
                                        "description": "The dealer code the voucher is assigned to.  Required for commercial vouchers.",
                                        "type": "string"
                                    },
                                    "Deleted": {
                                        "description": "Read-Only. True if voucher has been deleted.",
                                        "type": "boolean"
                                    },
                                    "Email": {
                                        "description": "The email address. Required for Internal Vouchers",
                                        "type": "string"
                                    },
                                    "ExpirationDate": {
                                        "description": "The expiration date of the voucher. Required for Temporary Vouchers.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "LicenseTo": {
                                        "description": "Required for Internal Vouchers",
                                        "type": "string"
                                    },
                                    "ModifiedBy": {
                                        "description": "Read-Only. The user that made the last modification to the voucher.",
                                        "type": "string"
                                    },
                                    "OrderNumber": {
                                        "description": "The order number of a commercial license. Required for Commercial Vouchers. Not supported for other Vouchers.",
                                        "type": "string"
                                    },
                                    "Punched": {
                                        "description": "True if voucher has aleady been used.  False if the voucher has not been used.",
                                        "type": "boolean"
                                    },
                                    "PunchedDate": {
                                        "description": "Read-Only. The date the voucher was punched.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Purpose": {
                                        "description": "Required for Internal Vouchers",
                                        "type": "string"
                                    },
                                    "Type": {
                                        "description": "The type of voucher. Commercial is the default if not specified.",
                                        "enum": [
                                            "Commercial",
                                            "Internal",
                                            "Temporary"
                                        ],
                                        "type": "string"
                                    },
                                    "VoucherCode": {
                                        "description": "The voucher code.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "text/xml": {
                            "schema": {
                                "description": "A voucher for EDT activation",
                                "properties": {
                                    "CreatedDate": {
                                        "description": "Read-Only. The date the voucher was created.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "DealerCode": {
                                        "description": "The dealer code the voucher is assigned to.  Required for commercial vouchers.",
                                        "type": "string"
                                    },
                                    "Deleted": {
                                        "description": "Read-Only. True if voucher has been deleted.",
                                        "type": "boolean"
                                    },
                                    "Email": {
                                        "description": "The email address. Required for Internal Vouchers",
                                        "type": "string"
                                    },
                                    "ExpirationDate": {
                                        "description": "The expiration date of the voucher. Required for Temporary Vouchers.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "LicenseTo": {
                                        "description": "Required for Internal Vouchers",
                                        "type": "string"
                                    },
                                    "ModifiedBy": {
                                        "description": "Read-Only. The user that made the last modification to the voucher.",
                                        "type": "string"
                                    },
                                    "OrderNumber": {
                                        "description": "The order number of a commercial license. Required for Commercial Vouchers. Not supported for other Vouchers.",
                                        "type": "string"
                                    },
                                    "Punched": {
                                        "description": "True if voucher has aleady been used.  False if the voucher has not been used.",
                                        "type": "boolean"
                                    },
                                    "PunchedDate": {
                                        "description": "Read-Only. The date the voucher was punched.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Purpose": {
                                        "description": "Required for Internal Vouchers",
                                        "type": "string"
                                    },
                                    "Type": {
                                        "description": "The type of voucher. Commercial is the default if not specified.",
                                        "enum": [
                                            "Commercial",
                                            "Internal",
                                            "Temporary"
                                        ],
                                        "type": "string"
                                    },
                                    "VoucherCode": {
                                        "description": "The voucher code.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "description": "A voucher for EDT activation",
                                "properties": {
                                    "CreatedDate": {
                                        "description": "Read-Only. The date the voucher was created.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "DealerCode": {
                                        "description": "The dealer code the voucher is assigned to.  Required for commercial vouchers.",
                                        "type": "string"
                                    },
                                    "Deleted": {
                                        "description": "Read-Only. True if voucher has been deleted.",
                                        "type": "boolean"
                                    },
                                    "Email": {
                                        "description": "The email address. Required for Internal Vouchers",
                                        "type": "string"
                                    },
                                    "ExpirationDate": {
                                        "description": "The expiration date of the voucher. Required for Temporary Vouchers.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "LicenseTo": {
                                        "description": "Required for Internal Vouchers",
                                        "type": "string"
                                    },
                                    "ModifiedBy": {
                                        "description": "Read-Only. The user that made the last modification to the voucher.",
                                        "type": "string"
                                    },
                                    "OrderNumber": {
                                        "description": "The order number of a commercial license. Required for Commercial Vouchers. Not supported for other Vouchers.",
                                        "type": "string"
                                    },
                                    "Punched": {
                                        "description": "True if voucher has aleady been used.  False if the voucher has not been used.",
                                        "type": "boolean"
                                    },
                                    "PunchedDate": {
                                        "description": "Read-Only. The date the voucher was punched.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Purpose": {
                                        "description": "Required for Internal Vouchers",
                                        "type": "string"
                                    },
                                    "Type": {
                                        "description": "The type of voucher. Commercial is the default if not specified.",
                                        "enum": [
                                            "Commercial",
                                            "Internal",
                                            "Temporary"
                                        ],
                                        "type": "string"
                                    },
                                    "VoucherCode": {
                                        "description": "The voucher code.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "description": "The voucher to add.",
                    "required": true
                }
            }
        },
        "/api/v2/Vouchers/{VoucherCode}": {
            "delete": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "Vouchers_Delete",
                "parameters": [
                    {
                        "description": "The voucher code of the voucher to delete.",
                        "in": "path",
                        "name": "VoucherCode",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "summary": "Delete a voucher",
                "tags": [
                    "Vouchers"
                ]
            },
            "get": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "parameters": [
                    {
                        "description": "The voucher code of the voucher to get.",
                        "in": "path",
                        "name": "VoucherCode",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Optional. Filter vouchers by Deleted state. By default only vouchers that are not deleted are returned.",
                        "in": "query",
                        "name": "Deleted",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "NotDeleted",
                                "Deleted",
                                "All"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "A voucher for EDT activation",
                                    "properties": {
                                        "CreatedDate": {
                                            "description": "Read-Only. The date the voucher was created.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "DealerCode": {
                                            "description": "The dealer code the voucher is assigned to.  Required for commercial vouchers.",
                                            "type": "string"
                                        },
                                        "Deleted": {
                                            "description": "Read-Only. True if voucher has been deleted.",
                                            "type": "boolean"
                                        },
                                        "Email": {
                                            "description": "The email address. Required for Internal Vouchers",
                                            "type": "string"
                                        },
                                        "ExpirationDate": {
                                            "description": "The expiration date of the voucher. Required for Temporary Vouchers.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "LicenseTo": {
                                            "description": "Required for Internal Vouchers",
                                            "type": "string"
                                        },
                                        "ModifiedBy": {
                                            "description": "Read-Only. The user that made the last modification to the voucher.",
                                            "type": "string"
                                        },
                                        "OrderNumber": {
                                            "description": "The order number of a commercial license. Required for Commercial Vouchers. Not supported for other Vouchers.",
                                            "type": "string"
                                        },
                                        "Punched": {
                                            "description": "True if voucher has aleady been used.  False if the voucher has not been used.",
                                            "type": "boolean"
                                        },
                                        "PunchedDate": {
                                            "description": "Read-Only. The date the voucher was punched.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "Purpose": {
                                            "description": "Required for Internal Vouchers",
                                            "type": "string"
                                        },
                                        "Type": {
                                            "description": "The type of voucher. Commercial is the default if not specified.",
                                            "enum": [
                                                "Commercial",
                                                "Internal",
                                                "Temporary"
                                            ],
                                            "type": "string"
                                        },
                                        "VoucherCode": {
                                            "description": "The voucher code.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "description": "A voucher for EDT activation",
                                    "properties": {
                                        "CreatedDate": {
                                            "description": "Read-Only. The date the voucher was created.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "DealerCode": {
                                            "description": "The dealer code the voucher is assigned to.  Required for commercial vouchers.",
                                            "type": "string"
                                        },
                                        "Deleted": {
                                            "description": "Read-Only. True if voucher has been deleted.",
                                            "type": "boolean"
                                        },
                                        "Email": {
                                            "description": "The email address. Required for Internal Vouchers",
                                            "type": "string"
                                        },
                                        "ExpirationDate": {
                                            "description": "The expiration date of the voucher. Required for Temporary Vouchers.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "LicenseTo": {
                                            "description": "Required for Internal Vouchers",
                                            "type": "string"
                                        },
                                        "ModifiedBy": {
                                            "description": "Read-Only. The user that made the last modification to the voucher.",
                                            "type": "string"
                                        },
                                        "OrderNumber": {
                                            "description": "The order number of a commercial license. Required for Commercial Vouchers. Not supported for other Vouchers.",
                                            "type": "string"
                                        },
                                        "Punched": {
                                            "description": "True if voucher has aleady been used.  False if the voucher has not been used.",
                                            "type": "boolean"
                                        },
                                        "PunchedDate": {
                                            "description": "Read-Only. The date the voucher was punched.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "Purpose": {
                                            "description": "Required for Internal Vouchers",
                                            "type": "string"
                                        },
                                        "Type": {
                                            "description": "The type of voucher. Commercial is the default if not specified.",
                                            "enum": [
                                                "Commercial",
                                                "Internal",
                                                "Temporary"
                                            ],
                                            "type": "string"
                                        },
                                        "VoucherCode": {
                                            "description": "The voucher code.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "description": "A voucher for EDT activation",
                                    "properties": {
                                        "CreatedDate": {
                                            "description": "Read-Only. The date the voucher was created.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "DealerCode": {
                                            "description": "The dealer code the voucher is assigned to.  Required for commercial vouchers.",
                                            "type": "string"
                                        },
                                        "Deleted": {
                                            "description": "Read-Only. True if voucher has been deleted.",
                                            "type": "boolean"
                                        },
                                        "Email": {
                                            "description": "The email address. Required for Internal Vouchers",
                                            "type": "string"
                                        },
                                        "ExpirationDate": {
                                            "description": "The expiration date of the voucher. Required for Temporary Vouchers.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "LicenseTo": {
                                            "description": "Required for Internal Vouchers",
                                            "type": "string"
                                        },
                                        "ModifiedBy": {
                                            "description": "Read-Only. The user that made the last modification to the voucher.",
                                            "type": "string"
                                        },
                                        "OrderNumber": {
                                            "description": "The order number of a commercial license. Required for Commercial Vouchers. Not supported for other Vouchers.",
                                            "type": "string"
                                        },
                                        "Punched": {
                                            "description": "True if voucher has aleady been used.  False if the voucher has not been used.",
                                            "type": "boolean"
                                        },
                                        "PunchedDate": {
                                            "description": "Read-Only. The date the voucher was punched.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "Purpose": {
                                            "description": "Required for Internal Vouchers",
                                            "type": "string"
                                        },
                                        "Type": {
                                            "description": "The type of voucher. Commercial is the default if not specified.",
                                            "enum": [
                                                "Commercial",
                                                "Internal",
                                                "Temporary"
                                            ],
                                            "type": "string"
                                        },
                                        "VoucherCode": {
                                            "description": "The voucher code.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "description": "A voucher for EDT activation",
                                    "properties": {
                                        "CreatedDate": {
                                            "description": "Read-Only. The date the voucher was created.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "DealerCode": {
                                            "description": "The dealer code the voucher is assigned to.  Required for commercial vouchers.",
                                            "type": "string"
                                        },
                                        "Deleted": {
                                            "description": "Read-Only. True if voucher has been deleted.",
                                            "type": "boolean"
                                        },
                                        "Email": {
                                            "description": "The email address. Required for Internal Vouchers",
                                            "type": "string"
                                        },
                                        "ExpirationDate": {
                                            "description": "The expiration date of the voucher. Required for Temporary Vouchers.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "LicenseTo": {
                                            "description": "Required for Internal Vouchers",
                                            "type": "string"
                                        },
                                        "ModifiedBy": {
                                            "description": "Read-Only. The user that made the last modification to the voucher.",
                                            "type": "string"
                                        },
                                        "OrderNumber": {
                                            "description": "The order number of a commercial license. Required for Commercial Vouchers. Not supported for other Vouchers.",
                                            "type": "string"
                                        },
                                        "Punched": {
                                            "description": "True if voucher has aleady been used.  False if the voucher has not been used.",
                                            "type": "boolean"
                                        },
                                        "PunchedDate": {
                                            "description": "Read-Only. The date the voucher was punched.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "Purpose": {
                                            "description": "Required for Internal Vouchers",
                                            "type": "string"
                                        },
                                        "Type": {
                                            "description": "The type of voucher. Commercial is the default if not specified.",
                                            "enum": [
                                                "Commercial",
                                                "Internal",
                                                "Temporary"
                                            ],
                                            "type": "string"
                                        },
                                        "VoucherCode": {
                                            "description": "The voucher code.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get a voucher",
                "tags": [
                    "Vouchers"
                ]
            },
            "put": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "Vouchers_Put",
                "parameters": [
                    {
                        "description": "The voucher code of the voucher to update.",
                        "in": "path",
                        "name": "VoucherCode",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "summary": "Update a voucher",
                "tags": [
                    "Vouchers"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "A voucher for EDT activation",
                                "properties": {
                                    "CreatedDate": {
                                        "description": "Read-Only. The date the voucher was created.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "DealerCode": {
                                        "description": "The dealer code the voucher is assigned to.  Required for commercial vouchers.",
                                        "type": "string"
                                    },
                                    "Deleted": {
                                        "description": "Read-Only. True if voucher has been deleted.",
                                        "type": "boolean"
                                    },
                                    "Email": {
                                        "description": "The email address. Required for Internal Vouchers",
                                        "type": "string"
                                    },
                                    "ExpirationDate": {
                                        "description": "The expiration date of the voucher. Required for Temporary Vouchers.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "LicenseTo": {
                                        "description": "Required for Internal Vouchers",
                                        "type": "string"
                                    },
                                    "ModifiedBy": {
                                        "description": "Read-Only. The user that made the last modification to the voucher.",
                                        "type": "string"
                                    },
                                    "OrderNumber": {
                                        "description": "The order number of a commercial license. Required for Commercial Vouchers. Not supported for other Vouchers.",
                                        "type": "string"
                                    },
                                    "Punched": {
                                        "description": "True if voucher has aleady been used.  False if the voucher has not been used.",
                                        "type": "boolean"
                                    },
                                    "PunchedDate": {
                                        "description": "Read-Only. The date the voucher was punched.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Purpose": {
                                        "description": "Required for Internal Vouchers",
                                        "type": "string"
                                    },
                                    "Type": {
                                        "description": "The type of voucher. Commercial is the default if not specified.",
                                        "enum": [
                                            "Commercial",
                                            "Internal",
                                            "Temporary"
                                        ],
                                        "type": "string"
                                    },
                                    "VoucherCode": {
                                        "description": "The voucher code.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "description": "A voucher for EDT activation",
                                "properties": {
                                    "CreatedDate": {
                                        "description": "Read-Only. The date the voucher was created.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "DealerCode": {
                                        "description": "The dealer code the voucher is assigned to.  Required for commercial vouchers.",
                                        "type": "string"
                                    },
                                    "Deleted": {
                                        "description": "Read-Only. True if voucher has been deleted.",
                                        "type": "boolean"
                                    },
                                    "Email": {
                                        "description": "The email address. Required for Internal Vouchers",
                                        "type": "string"
                                    },
                                    "ExpirationDate": {
                                        "description": "The expiration date of the voucher. Required for Temporary Vouchers.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "LicenseTo": {
                                        "description": "Required for Internal Vouchers",
                                        "type": "string"
                                    },
                                    "ModifiedBy": {
                                        "description": "Read-Only. The user that made the last modification to the voucher.",
                                        "type": "string"
                                    },
                                    "OrderNumber": {
                                        "description": "The order number of a commercial license. Required for Commercial Vouchers. Not supported for other Vouchers.",
                                        "type": "string"
                                    },
                                    "Punched": {
                                        "description": "True if voucher has aleady been used.  False if the voucher has not been used.",
                                        "type": "boolean"
                                    },
                                    "PunchedDate": {
                                        "description": "Read-Only. The date the voucher was punched.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Purpose": {
                                        "description": "Required for Internal Vouchers",
                                        "type": "string"
                                    },
                                    "Type": {
                                        "description": "The type of voucher. Commercial is the default if not specified.",
                                        "enum": [
                                            "Commercial",
                                            "Internal",
                                            "Temporary"
                                        ],
                                        "type": "string"
                                    },
                                    "VoucherCode": {
                                        "description": "The voucher code.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "description": "A voucher for EDT activation",
                                "properties": {
                                    "CreatedDate": {
                                        "description": "Read-Only. The date the voucher was created.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "DealerCode": {
                                        "description": "The dealer code the voucher is assigned to.  Required for commercial vouchers.",
                                        "type": "string"
                                    },
                                    "Deleted": {
                                        "description": "Read-Only. True if voucher has been deleted.",
                                        "type": "boolean"
                                    },
                                    "Email": {
                                        "description": "The email address. Required for Internal Vouchers",
                                        "type": "string"
                                    },
                                    "ExpirationDate": {
                                        "description": "The expiration date of the voucher. Required for Temporary Vouchers.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "LicenseTo": {
                                        "description": "Required for Internal Vouchers",
                                        "type": "string"
                                    },
                                    "ModifiedBy": {
                                        "description": "Read-Only. The user that made the last modification to the voucher.",
                                        "type": "string"
                                    },
                                    "OrderNumber": {
                                        "description": "The order number of a commercial license. Required for Commercial Vouchers. Not supported for other Vouchers.",
                                        "type": "string"
                                    },
                                    "Punched": {
                                        "description": "True if voucher has aleady been used.  False if the voucher has not been used.",
                                        "type": "boolean"
                                    },
                                    "PunchedDate": {
                                        "description": "Read-Only. The date the voucher was punched.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Purpose": {
                                        "description": "Required for Internal Vouchers",
                                        "type": "string"
                                    },
                                    "Type": {
                                        "description": "The type of voucher. Commercial is the default if not specified.",
                                        "enum": [
                                            "Commercial",
                                            "Internal",
                                            "Temporary"
                                        ],
                                        "type": "string"
                                    },
                                    "VoucherCode": {
                                        "description": "The voucher code.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "text/xml": {
                            "schema": {
                                "description": "A voucher for EDT activation",
                                "properties": {
                                    "CreatedDate": {
                                        "description": "Read-Only. The date the voucher was created.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "DealerCode": {
                                        "description": "The dealer code the voucher is assigned to.  Required for commercial vouchers.",
                                        "type": "string"
                                    },
                                    "Deleted": {
                                        "description": "Read-Only. True if voucher has been deleted.",
                                        "type": "boolean"
                                    },
                                    "Email": {
                                        "description": "The email address. Required for Internal Vouchers",
                                        "type": "string"
                                    },
                                    "ExpirationDate": {
                                        "description": "The expiration date of the voucher. Required for Temporary Vouchers.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "LicenseTo": {
                                        "description": "Required for Internal Vouchers",
                                        "type": "string"
                                    },
                                    "ModifiedBy": {
                                        "description": "Read-Only. The user that made the last modification to the voucher.",
                                        "type": "string"
                                    },
                                    "OrderNumber": {
                                        "description": "The order number of a commercial license. Required for Commercial Vouchers. Not supported for other Vouchers.",
                                        "type": "string"
                                    },
                                    "Punched": {
                                        "description": "True if voucher has aleady been used.  False if the voucher has not been used.",
                                        "type": "boolean"
                                    },
                                    "PunchedDate": {
                                        "description": "Read-Only. The date the voucher was punched.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Purpose": {
                                        "description": "Required for Internal Vouchers",
                                        "type": "string"
                                    },
                                    "Type": {
                                        "description": "The type of voucher. Commercial is the default if not specified.",
                                        "enum": [
                                            "Commercial",
                                            "Internal",
                                            "Temporary"
                                        ],
                                        "type": "string"
                                    },
                                    "VoucherCode": {
                                        "description": "The voucher code.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "description": "A voucher for EDT activation",
                                "properties": {
                                    "CreatedDate": {
                                        "description": "Read-Only. The date the voucher was created.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "DealerCode": {
                                        "description": "The dealer code the voucher is assigned to.  Required for commercial vouchers.",
                                        "type": "string"
                                    },
                                    "Deleted": {
                                        "description": "Read-Only. True if voucher has been deleted.",
                                        "type": "boolean"
                                    },
                                    "Email": {
                                        "description": "The email address. Required for Internal Vouchers",
                                        "type": "string"
                                    },
                                    "ExpirationDate": {
                                        "description": "The expiration date of the voucher. Required for Temporary Vouchers.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "LicenseTo": {
                                        "description": "Required for Internal Vouchers",
                                        "type": "string"
                                    },
                                    "ModifiedBy": {
                                        "description": "Read-Only. The user that made the last modification to the voucher.",
                                        "type": "string"
                                    },
                                    "OrderNumber": {
                                        "description": "The order number of a commercial license. Required for Commercial Vouchers. Not supported for other Vouchers.",
                                        "type": "string"
                                    },
                                    "Punched": {
                                        "description": "True if voucher has aleady been used.  False if the voucher has not been used.",
                                        "type": "boolean"
                                    },
                                    "PunchedDate": {
                                        "description": "Read-Only. The date the voucher was punched.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Purpose": {
                                        "description": "Required for Internal Vouchers",
                                        "type": "string"
                                    },
                                    "Type": {
                                        "description": "The type of voucher. Commercial is the default if not specified.",
                                        "enum": [
                                            "Commercial",
                                            "Internal",
                                            "Temporary"
                                        ],
                                        "type": "string"
                                    },
                                    "VoucherCode": {
                                        "description": "The voucher code.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "description": "The updated voucher.",
                    "required": true
                }
            }
        },
        "/api/v2/Vouchers/{VoucherCode}/VoucherHistory": {
            "get": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "Vouchers_GetVoucherHistory",
                "parameters": [
                    {
                        "description": "The voucher code to get history for.",
                        "in": "path",
                        "name": "VoucherCode",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Optional. The page limit. The default page limit is 10.",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "Optional. The page offset. The default page offset is 0.",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "properties": {
                                                    "ChangedDate": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "CreatedDate": {
                                                        "description": "Read-Only. The date the voucher was created.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "DealerCode": {
                                                        "description": "The dealer code the voucher is assigned to.  Required for commercial vouchers.",
                                                        "type": "string"
                                                    },
                                                    "Deleted": {
                                                        "description": "Read-Only. True if voucher has been deleted.",
                                                        "type": "boolean"
                                                    },
                                                    "Email": {
                                                        "description": "The email address. Required for Internal Vouchers",
                                                        "type": "string"
                                                    },
                                                    "ExpirationDate": {
                                                        "description": "The expiration date of the voucher. Required for Temporary Vouchers.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "ID": {
                                                        "description": "The id of the voucher history item",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "LicenseTo": {
                                                        "description": "Required for Internal Vouchers",
                                                        "type": "string"
                                                    },
                                                    "ModifiedBy": {
                                                        "description": "Read-Only. The user that made the last modification to the voucher.",
                                                        "type": "string"
                                                    },
                                                    "OrderNumber": {
                                                        "description": "The order number of a commercial license. Required for Commercial Vouchers. Not supported for other Vouchers.",
                                                        "type": "string"
                                                    },
                                                    "Punched": {
                                                        "description": "True if voucher has aleady been used.  False if the voucher has not been used.",
                                                        "type": "boolean"
                                                    },
                                                    "PunchedDate": {
                                                        "description": "Read-Only. The date the voucher was punched.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "Purpose": {
                                                        "description": "Required for Internal Vouchers",
                                                        "type": "string"
                                                    },
                                                    "Type": {
                                                        "description": "The type of voucher.",
                                                        "enum": [
                                                            "Commercial",
                                                            "Internal",
                                                            "Temporary"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "VoucherCode": {
                                                        "description": "The voucher code.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "properties": {
                                                    "ChangedDate": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "CreatedDate": {
                                                        "description": "Read-Only. The date the voucher was created.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "DealerCode": {
                                                        "description": "The dealer code the voucher is assigned to.  Required for commercial vouchers.",
                                                        "type": "string"
                                                    },
                                                    "Deleted": {
                                                        "description": "Read-Only. True if voucher has been deleted.",
                                                        "type": "boolean"
                                                    },
                                                    "Email": {
                                                        "description": "The email address. Required for Internal Vouchers",
                                                        "type": "string"
                                                    },
                                                    "ExpirationDate": {
                                                        "description": "The expiration date of the voucher. Required for Temporary Vouchers.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "ID": {
                                                        "description": "The id of the voucher history item",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "LicenseTo": {
                                                        "description": "Required for Internal Vouchers",
                                                        "type": "string"
                                                    },
                                                    "ModifiedBy": {
                                                        "description": "Read-Only. The user that made the last modification to the voucher.",
                                                        "type": "string"
                                                    },
                                                    "OrderNumber": {
                                                        "description": "The order number of a commercial license. Required for Commercial Vouchers. Not supported for other Vouchers.",
                                                        "type": "string"
                                                    },
                                                    "Punched": {
                                                        "description": "True if voucher has aleady been used.  False if the voucher has not been used.",
                                                        "type": "boolean"
                                                    },
                                                    "PunchedDate": {
                                                        "description": "Read-Only. The date the voucher was punched.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "Purpose": {
                                                        "description": "Required for Internal Vouchers",
                                                        "type": "string"
                                                    },
                                                    "Type": {
                                                        "description": "The type of voucher.",
                                                        "enum": [
                                                            "Commercial",
                                                            "Internal",
                                                            "Temporary"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "VoucherCode": {
                                                        "description": "The voucher code.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get a voucher's history.",
                "tags": [
                    "Vouchers"
                ]
            }
        },
        "/api/v2/activities": {
            "get": {
                "deprecated": false,
                "description": "Gets a collection of Activities. When successful, the response is a PagedResponse of Activities.  \r\n            If unsuccessful, an appropriate ApiError is returned.",
                "operationId": "Activities_GetActivities",
                "parameters": [
                    {
                        "description": "Optional. The page limit.  If not specified, the default page limit is 10.",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "Optional. The page offset.  If not specified, the default page offset is 0.",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "Does it include deleted activity, or not",
                        "in": "query",
                        "name": "isIncludeDeleted",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "description": "A DTO for an IActivity",
                                                "properties": {
                                                    "ActivityID": {
                                                        "description": "The ID of the activity",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "Deleted": {
                                                        "description": "",
                                                        "type": "boolean"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the activity",
                                                        "type": "string"
                                                    },
                                                    "Parameters": {
                                                        "description": "The parameters for this activity",
                                                        "items": {
                                                            "description": "A DTO for an IParameter",
                                                            "properties": {
                                                                "Direction": {
                                                                    "description": "The parameter direction (Input or Output)",
                                                                    "enum": [
                                                                        "Input",
                                                                        "Output"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "Name": {
                                                                    "description": "The name of the parameter",
                                                                    "type": "string"
                                                                },
                                                                "Type": {
                                                                    "description": "The data type of the parameter",
                                                                    "enum": [
                                                                        "String",
                                                                        "Boolean",
                                                                        "Integer",
                                                                        "Float",
                                                                        "StringDictionary"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "readOnly": true,
                                                        "type": "array"
                                                    },
                                                    "Steps": {
                                                        "description": "The steps which are performed for this activity",
                                                        "items": {
                                                            "description": "A DTO for an IActivityStep",
                                                            "properties": {
                                                                "ActivityID": {
                                                                    "description": "The id of the activity this activity step belongs to",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "ActivityStepID": {
                                                                    "description": "The id of this activity step",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "ImplementationID": {
                                                                    "description": "The implementation id which is used to look up the step implementation",
                                                                    "type": "string"
                                                                },
                                                                "ParameterMappings": {
                                                                    "description": "The mapping of values from a source to be used for the step parameters",
                                                                    "items": {
                                                                        "description": "A DTO for an IParameterMapping",
                                                                        "properties": {
                                                                            "Name": {
                                                                                "description": "The name of the parameter this mapping applies to",
                                                                                "type": "string"
                                                                            },
                                                                            "Source": {
                                                                                "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                                "type": "string"
                                                                            },
                                                                            "SourceType": {
                                                                                "description": "The source type used for supplying the parameter",
                                                                                "enum": [
                                                                                    "Constant",
                                                                                    "Variable"
                                                                                ],
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "readOnly": true,
                                                                    "type": "array"
                                                                },
                                                                "RunOrder": {
                                                                    "description": "The order of this activity step relative to other activity steps",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "StepID": {
                                                                    "description": "The id of the step",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "StepName": {
                                                                    "description": "The name of the step",
                                                                    "type": "string"
                                                                },
                                                                "UseConfig": {
                                                                    "description": "Indicates the configuration for the ActivityStep to use at runtime.  The build agent must provide this configuration",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "readOnly": true,
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "description": "A DTO for an IActivity",
                                                "properties": {
                                                    "ActivityID": {
                                                        "description": "The ID of the activity",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "Deleted": {
                                                        "description": "",
                                                        "type": "boolean"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the activity",
                                                        "type": "string"
                                                    },
                                                    "Parameters": {
                                                        "description": "The parameters for this activity",
                                                        "items": {
                                                            "description": "A DTO for an IParameter",
                                                            "properties": {
                                                                "Direction": {
                                                                    "description": "The parameter direction (Input or Output)",
                                                                    "enum": [
                                                                        "Input",
                                                                        "Output"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "Name": {
                                                                    "description": "The name of the parameter",
                                                                    "type": "string"
                                                                },
                                                                "Type": {
                                                                    "description": "The data type of the parameter",
                                                                    "enum": [
                                                                        "String",
                                                                        "Boolean",
                                                                        "Integer",
                                                                        "Float",
                                                                        "StringDictionary"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "readOnly": true,
                                                        "type": "array"
                                                    },
                                                    "Steps": {
                                                        "description": "The steps which are performed for this activity",
                                                        "items": {
                                                            "description": "A DTO for an IActivityStep",
                                                            "properties": {
                                                                "ActivityID": {
                                                                    "description": "The id of the activity this activity step belongs to",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "ActivityStepID": {
                                                                    "description": "The id of this activity step",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "ImplementationID": {
                                                                    "description": "The implementation id which is used to look up the step implementation",
                                                                    "type": "string"
                                                                },
                                                                "ParameterMappings": {
                                                                    "description": "The mapping of values from a source to be used for the step parameters",
                                                                    "items": {
                                                                        "description": "A DTO for an IParameterMapping",
                                                                        "properties": {
                                                                            "Name": {
                                                                                "description": "The name of the parameter this mapping applies to",
                                                                                "type": "string"
                                                                            },
                                                                            "Source": {
                                                                                "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                                "type": "string"
                                                                            },
                                                                            "SourceType": {
                                                                                "description": "The source type used for supplying the parameter",
                                                                                "enum": [
                                                                                    "Constant",
                                                                                    "Variable"
                                                                                ],
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "readOnly": true,
                                                                    "type": "array"
                                                                },
                                                                "RunOrder": {
                                                                    "description": "The order of this activity step relative to other activity steps",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "StepID": {
                                                                    "description": "The id of the step",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "StepName": {
                                                                    "description": "The name of the step",
                                                                    "type": "string"
                                                                },
                                                                "UseConfig": {
                                                                    "description": "Indicates the configuration for the ActivityStep to use at runtime.  The build agent must provide this configuration",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "readOnly": true,
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get Activities",
                "tags": [
                    "Activities"
                ]
            },
            "post": {
                "deprecated": false,
                "description": "Creates an Activity.  The body of the POST is the Activity to create.  The ActivityID will be assigned\r\n            on creation of the Activity.  When successful, the response is the ActivityID.  If unsuccessful, an \r\n            appropriate ApiError is returned.",
                "operationId": "Activities_PostActivity",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Create an Activity",
                "tags": [
                    "Activities"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "A DTO for an IActivity",
                                "properties": {
                                    "ActivityID": {
                                        "description": "The ID of the activity",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Deleted": {
                                        "description": "",
                                        "type": "boolean"
                                    },
                                    "Name": {
                                        "description": "The name of the activity",
                                        "type": "string"
                                    },
                                    "Parameters": {
                                        "description": "The parameters for this activity",
                                        "items": {
                                            "description": "A DTO for an IParameter",
                                            "properties": {
                                                "Direction": {
                                                    "description": "The parameter direction (Input or Output)",
                                                    "enum": [
                                                        "Input",
                                                        "Output"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name of the parameter",
                                                    "type": "string"
                                                },
                                                "Type": {
                                                    "description": "The data type of the parameter",
                                                    "enum": [
                                                        "String",
                                                        "Boolean",
                                                        "Integer",
                                                        "Float",
                                                        "StringDictionary"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    },
                                    "Steps": {
                                        "description": "The steps which are performed for this activity",
                                        "items": {
                                            "description": "A DTO for an IActivityStep",
                                            "properties": {
                                                "ActivityID": {
                                                    "description": "The id of the activity this activity step belongs to",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "ActivityStepID": {
                                                    "description": "The id of this activity step",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "ImplementationID": {
                                                    "description": "The implementation id which is used to look up the step implementation",
                                                    "type": "string"
                                                },
                                                "ParameterMappings": {
                                                    "description": "The mapping of values from a source to be used for the step parameters",
                                                    "items": {
                                                        "description": "A DTO for an IParameterMapping",
                                                        "properties": {
                                                            "Name": {
                                                                "description": "The name of the parameter this mapping applies to",
                                                                "type": "string"
                                                            },
                                                            "Source": {
                                                                "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                "type": "string"
                                                            },
                                                            "SourceType": {
                                                                "description": "The source type used for supplying the parameter",
                                                                "enum": [
                                                                    "Constant",
                                                                    "Variable"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "readOnly": true,
                                                    "type": "array"
                                                },
                                                "RunOrder": {
                                                    "description": "The order of this activity step relative to other activity steps",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "StepID": {
                                                    "description": "The id of the step",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "StepName": {
                                                    "description": "The name of the step",
                                                    "type": "string"
                                                },
                                                "UseConfig": {
                                                    "description": "Indicates the configuration for the ActivityStep to use at runtime.  The build agent must provide this configuration",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "description": "A DTO for an IActivity",
                                "properties": {
                                    "ActivityID": {
                                        "description": "The ID of the activity",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Deleted": {
                                        "description": "",
                                        "type": "boolean"
                                    },
                                    "Name": {
                                        "description": "The name of the activity",
                                        "type": "string"
                                    },
                                    "Parameters": {
                                        "description": "The parameters for this activity",
                                        "items": {
                                            "description": "A DTO for an IParameter",
                                            "properties": {
                                                "Direction": {
                                                    "description": "The parameter direction (Input or Output)",
                                                    "enum": [
                                                        "Input",
                                                        "Output"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name of the parameter",
                                                    "type": "string"
                                                },
                                                "Type": {
                                                    "description": "The data type of the parameter",
                                                    "enum": [
                                                        "String",
                                                        "Boolean",
                                                        "Integer",
                                                        "Float",
                                                        "StringDictionary"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    },
                                    "Steps": {
                                        "description": "The steps which are performed for this activity",
                                        "items": {
                                            "description": "A DTO for an IActivityStep",
                                            "properties": {
                                                "ActivityID": {
                                                    "description": "The id of the activity this activity step belongs to",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "ActivityStepID": {
                                                    "description": "The id of this activity step",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "ImplementationID": {
                                                    "description": "The implementation id which is used to look up the step implementation",
                                                    "type": "string"
                                                },
                                                "ParameterMappings": {
                                                    "description": "The mapping of values from a source to be used for the step parameters",
                                                    "items": {
                                                        "description": "A DTO for an IParameterMapping",
                                                        "properties": {
                                                            "Name": {
                                                                "description": "The name of the parameter this mapping applies to",
                                                                "type": "string"
                                                            },
                                                            "Source": {
                                                                "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                "type": "string"
                                                            },
                                                            "SourceType": {
                                                                "description": "The source type used for supplying the parameter",
                                                                "enum": [
                                                                    "Constant",
                                                                    "Variable"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "readOnly": true,
                                                    "type": "array"
                                                },
                                                "RunOrder": {
                                                    "description": "The order of this activity step relative to other activity steps",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "StepID": {
                                                    "description": "The id of the step",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "StepName": {
                                                    "description": "The name of the step",
                                                    "type": "string"
                                                },
                                                "UseConfig": {
                                                    "description": "Indicates the configuration for the ActivityStep to use at runtime.  The build agent must provide this configuration",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "description": "A DTO for an IActivity",
                                "properties": {
                                    "ActivityID": {
                                        "description": "The ID of the activity",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Deleted": {
                                        "description": "",
                                        "type": "boolean"
                                    },
                                    "Name": {
                                        "description": "The name of the activity",
                                        "type": "string"
                                    },
                                    "Parameters": {
                                        "description": "The parameters for this activity",
                                        "items": {
                                            "description": "A DTO for an IParameter",
                                            "properties": {
                                                "Direction": {
                                                    "description": "The parameter direction (Input or Output)",
                                                    "enum": [
                                                        "Input",
                                                        "Output"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name of the parameter",
                                                    "type": "string"
                                                },
                                                "Type": {
                                                    "description": "The data type of the parameter",
                                                    "enum": [
                                                        "String",
                                                        "Boolean",
                                                        "Integer",
                                                        "Float",
                                                        "StringDictionary"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    },
                                    "Steps": {
                                        "description": "The steps which are performed for this activity",
                                        "items": {
                                            "description": "A DTO for an IActivityStep",
                                            "properties": {
                                                "ActivityID": {
                                                    "description": "The id of the activity this activity step belongs to",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "ActivityStepID": {
                                                    "description": "The id of this activity step",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "ImplementationID": {
                                                    "description": "The implementation id which is used to look up the step implementation",
                                                    "type": "string"
                                                },
                                                "ParameterMappings": {
                                                    "description": "The mapping of values from a source to be used for the step parameters",
                                                    "items": {
                                                        "description": "A DTO for an IParameterMapping",
                                                        "properties": {
                                                            "Name": {
                                                                "description": "The name of the parameter this mapping applies to",
                                                                "type": "string"
                                                            },
                                                            "Source": {
                                                                "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                "type": "string"
                                                            },
                                                            "SourceType": {
                                                                "description": "The source type used for supplying the parameter",
                                                                "enum": [
                                                                    "Constant",
                                                                    "Variable"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "readOnly": true,
                                                    "type": "array"
                                                },
                                                "RunOrder": {
                                                    "description": "The order of this activity step relative to other activity steps",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "StepID": {
                                                    "description": "The id of the step",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "StepName": {
                                                    "description": "The name of the step",
                                                    "type": "string"
                                                },
                                                "UseConfig": {
                                                    "description": "Indicates the configuration for the ActivityStep to use at runtime.  The build agent must provide this configuration",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "text/xml": {
                            "schema": {
                                "description": "A DTO for an IActivity",
                                "properties": {
                                    "ActivityID": {
                                        "description": "The ID of the activity",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Deleted": {
                                        "description": "",
                                        "type": "boolean"
                                    },
                                    "Name": {
                                        "description": "The name of the activity",
                                        "type": "string"
                                    },
                                    "Parameters": {
                                        "description": "The parameters for this activity",
                                        "items": {
                                            "description": "A DTO for an IParameter",
                                            "properties": {
                                                "Direction": {
                                                    "description": "The parameter direction (Input or Output)",
                                                    "enum": [
                                                        "Input",
                                                        "Output"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name of the parameter",
                                                    "type": "string"
                                                },
                                                "Type": {
                                                    "description": "The data type of the parameter",
                                                    "enum": [
                                                        "String",
                                                        "Boolean",
                                                        "Integer",
                                                        "Float",
                                                        "StringDictionary"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    },
                                    "Steps": {
                                        "description": "The steps which are performed for this activity",
                                        "items": {
                                            "description": "A DTO for an IActivityStep",
                                            "properties": {
                                                "ActivityID": {
                                                    "description": "The id of the activity this activity step belongs to",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "ActivityStepID": {
                                                    "description": "The id of this activity step",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "ImplementationID": {
                                                    "description": "The implementation id which is used to look up the step implementation",
                                                    "type": "string"
                                                },
                                                "ParameterMappings": {
                                                    "description": "The mapping of values from a source to be used for the step parameters",
                                                    "items": {
                                                        "description": "A DTO for an IParameterMapping",
                                                        "properties": {
                                                            "Name": {
                                                                "description": "The name of the parameter this mapping applies to",
                                                                "type": "string"
                                                            },
                                                            "Source": {
                                                                "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                "type": "string"
                                                            },
                                                            "SourceType": {
                                                                "description": "The source type used for supplying the parameter",
                                                                "enum": [
                                                                    "Constant",
                                                                    "Variable"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "readOnly": true,
                                                    "type": "array"
                                                },
                                                "RunOrder": {
                                                    "description": "The order of this activity step relative to other activity steps",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "StepID": {
                                                    "description": "The id of the step",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "StepName": {
                                                    "description": "The name of the step",
                                                    "type": "string"
                                                },
                                                "UseConfig": {
                                                    "description": "Indicates the configuration for the ActivityStep to use at runtime.  The build agent must provide this configuration",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "description": "A DTO for an IActivity",
                                "properties": {
                                    "ActivityID": {
                                        "description": "The ID of the activity",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Deleted": {
                                        "description": "",
                                        "type": "boolean"
                                    },
                                    "Name": {
                                        "description": "The name of the activity",
                                        "type": "string"
                                    },
                                    "Parameters": {
                                        "description": "The parameters for this activity",
                                        "items": {
                                            "description": "A DTO for an IParameter",
                                            "properties": {
                                                "Direction": {
                                                    "description": "The parameter direction (Input or Output)",
                                                    "enum": [
                                                        "Input",
                                                        "Output"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name of the parameter",
                                                    "type": "string"
                                                },
                                                "Type": {
                                                    "description": "The data type of the parameter",
                                                    "enum": [
                                                        "String",
                                                        "Boolean",
                                                        "Integer",
                                                        "Float",
                                                        "StringDictionary"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    },
                                    "Steps": {
                                        "description": "The steps which are performed for this activity",
                                        "items": {
                                            "description": "A DTO for an IActivityStep",
                                            "properties": {
                                                "ActivityID": {
                                                    "description": "The id of the activity this activity step belongs to",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "ActivityStepID": {
                                                    "description": "The id of this activity step",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "ImplementationID": {
                                                    "description": "The implementation id which is used to look up the step implementation",
                                                    "type": "string"
                                                },
                                                "ParameterMappings": {
                                                    "description": "The mapping of values from a source to be used for the step parameters",
                                                    "items": {
                                                        "description": "A DTO for an IParameterMapping",
                                                        "properties": {
                                                            "Name": {
                                                                "description": "The name of the parameter this mapping applies to",
                                                                "type": "string"
                                                            },
                                                            "Source": {
                                                                "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                "type": "string"
                                                            },
                                                            "SourceType": {
                                                                "description": "The source type used for supplying the parameter",
                                                                "enum": [
                                                                    "Constant",
                                                                    "Variable"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "readOnly": true,
                                                    "type": "array"
                                                },
                                                "RunOrder": {
                                                    "description": "The order of this activity step relative to other activity steps",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "StepID": {
                                                    "description": "The id of the step",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "StepName": {
                                                    "description": "The name of the step",
                                                    "type": "string"
                                                },
                                                "UseConfig": {
                                                    "description": "Indicates the configuration for the ActivityStep to use at runtime.  The build agent must provide this configuration",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "description": "The activity to create.  The ActivityID will be assigned on creation of the Activity.",
                    "required": true
                }
            }
        },
        "/api/v2/activities/{activityID}": {
            "delete": {
                "deprecated": false,
                "description": "Deletes an Activity. When successful, the response is empty.  If unsuccessful, an appropriate\r\n            ApiError is returned.",
                "operationId": "Activities_DeleteActivity",
                "parameters": [
                    {
                        "description": "The id of the activity to delete",
                        "in": "path",
                        "name": "activityID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Mark the delete flag for the Activity",
                "tags": [
                    "Activities"
                ]
            },
            "get": {
                "deprecated": false,
                "description": "Gets an Activity by ID. When successful, the response is the requested Activity.  If unsuccessful,\r\n            an appropriate ApiError is returned.",
                "operationId": "Activities_GetActivity",
                "parameters": [
                    {
                        "description": "The ID of the Activity to get.",
                        "in": "path",
                        "name": "activityID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "Does it include deleted activity, or not",
                        "in": "query",
                        "name": "isIncludeDeleted",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "A DTO for an IActivity",
                                    "properties": {
                                        "ActivityID": {
                                            "description": "The ID of the activity",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Deleted": {
                                            "description": "",
                                            "type": "boolean"
                                        },
                                        "Name": {
                                            "description": "The name of the activity",
                                            "type": "string"
                                        },
                                        "Parameters": {
                                            "description": "The parameters for this activity",
                                            "items": {
                                                "description": "A DTO for an IParameter",
                                                "properties": {
                                                    "Direction": {
                                                        "description": "The parameter direction (Input or Output)",
                                                        "enum": [
                                                            "Input",
                                                            "Output"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the parameter",
                                                        "type": "string"
                                                    },
                                                    "Type": {
                                                        "description": "The data type of the parameter",
                                                        "enum": [
                                                            "String",
                                                            "Boolean",
                                                            "Integer",
                                                            "Float",
                                                            "StringDictionary"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Steps": {
                                            "description": "The steps which are performed for this activity",
                                            "items": {
                                                "description": "A DTO for an IActivityStep",
                                                "properties": {
                                                    "ActivityID": {
                                                        "description": "The id of the activity this activity step belongs to",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "ActivityStepID": {
                                                        "description": "The id of this activity step",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "ImplementationID": {
                                                        "description": "The implementation id which is used to look up the step implementation",
                                                        "type": "string"
                                                    },
                                                    "ParameterMappings": {
                                                        "description": "The mapping of values from a source to be used for the step parameters",
                                                        "items": {
                                                            "description": "A DTO for an IParameterMapping",
                                                            "properties": {
                                                                "Name": {
                                                                    "description": "The name of the parameter this mapping applies to",
                                                                    "type": "string"
                                                                },
                                                                "Source": {
                                                                    "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                    "type": "string"
                                                                },
                                                                "SourceType": {
                                                                    "description": "The source type used for supplying the parameter",
                                                                    "enum": [
                                                                        "Constant",
                                                                        "Variable"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "readOnly": true,
                                                        "type": "array"
                                                    },
                                                    "RunOrder": {
                                                        "description": "The order of this activity step relative to other activity steps",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "StepID": {
                                                        "description": "The id of the step",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "StepName": {
                                                        "description": "The name of the step",
                                                        "type": "string"
                                                    },
                                                    "UseConfig": {
                                                        "description": "Indicates the configuration for the ActivityStep to use at runtime.  The build agent must provide this configuration",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "description": "A DTO for an IActivity",
                                    "properties": {
                                        "ActivityID": {
                                            "description": "The ID of the activity",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Deleted": {
                                            "description": "",
                                            "type": "boolean"
                                        },
                                        "Name": {
                                            "description": "The name of the activity",
                                            "type": "string"
                                        },
                                        "Parameters": {
                                            "description": "The parameters for this activity",
                                            "items": {
                                                "description": "A DTO for an IParameter",
                                                "properties": {
                                                    "Direction": {
                                                        "description": "The parameter direction (Input or Output)",
                                                        "enum": [
                                                            "Input",
                                                            "Output"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the parameter",
                                                        "type": "string"
                                                    },
                                                    "Type": {
                                                        "description": "The data type of the parameter",
                                                        "enum": [
                                                            "String",
                                                            "Boolean",
                                                            "Integer",
                                                            "Float",
                                                            "StringDictionary"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Steps": {
                                            "description": "The steps which are performed for this activity",
                                            "items": {
                                                "description": "A DTO for an IActivityStep",
                                                "properties": {
                                                    "ActivityID": {
                                                        "description": "The id of the activity this activity step belongs to",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "ActivityStepID": {
                                                        "description": "The id of this activity step",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "ImplementationID": {
                                                        "description": "The implementation id which is used to look up the step implementation",
                                                        "type": "string"
                                                    },
                                                    "ParameterMappings": {
                                                        "description": "The mapping of values from a source to be used for the step parameters",
                                                        "items": {
                                                            "description": "A DTO for an IParameterMapping",
                                                            "properties": {
                                                                "Name": {
                                                                    "description": "The name of the parameter this mapping applies to",
                                                                    "type": "string"
                                                                },
                                                                "Source": {
                                                                    "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                    "type": "string"
                                                                },
                                                                "SourceType": {
                                                                    "description": "The source type used for supplying the parameter",
                                                                    "enum": [
                                                                        "Constant",
                                                                        "Variable"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "readOnly": true,
                                                        "type": "array"
                                                    },
                                                    "RunOrder": {
                                                        "description": "The order of this activity step relative to other activity steps",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "StepID": {
                                                        "description": "The id of the step",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "StepName": {
                                                        "description": "The name of the step",
                                                        "type": "string"
                                                    },
                                                    "UseConfig": {
                                                        "description": "Indicates the configuration for the ActivityStep to use at runtime.  The build agent must provide this configuration",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "description": "A DTO for an IActivity",
                                    "properties": {
                                        "ActivityID": {
                                            "description": "The ID of the activity",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Deleted": {
                                            "description": "",
                                            "type": "boolean"
                                        },
                                        "Name": {
                                            "description": "The name of the activity",
                                            "type": "string"
                                        },
                                        "Parameters": {
                                            "description": "The parameters for this activity",
                                            "items": {
                                                "description": "A DTO for an IParameter",
                                                "properties": {
                                                    "Direction": {
                                                        "description": "The parameter direction (Input or Output)",
                                                        "enum": [
                                                            "Input",
                                                            "Output"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the parameter",
                                                        "type": "string"
                                                    },
                                                    "Type": {
                                                        "description": "The data type of the parameter",
                                                        "enum": [
                                                            "String",
                                                            "Boolean",
                                                            "Integer",
                                                            "Float",
                                                            "StringDictionary"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Steps": {
                                            "description": "The steps which are performed for this activity",
                                            "items": {
                                                "description": "A DTO for an IActivityStep",
                                                "properties": {
                                                    "ActivityID": {
                                                        "description": "The id of the activity this activity step belongs to",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "ActivityStepID": {
                                                        "description": "The id of this activity step",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "ImplementationID": {
                                                        "description": "The implementation id which is used to look up the step implementation",
                                                        "type": "string"
                                                    },
                                                    "ParameterMappings": {
                                                        "description": "The mapping of values from a source to be used for the step parameters",
                                                        "items": {
                                                            "description": "A DTO for an IParameterMapping",
                                                            "properties": {
                                                                "Name": {
                                                                    "description": "The name of the parameter this mapping applies to",
                                                                    "type": "string"
                                                                },
                                                                "Source": {
                                                                    "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                    "type": "string"
                                                                },
                                                                "SourceType": {
                                                                    "description": "The source type used for supplying the parameter",
                                                                    "enum": [
                                                                        "Constant",
                                                                        "Variable"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "readOnly": true,
                                                        "type": "array"
                                                    },
                                                    "RunOrder": {
                                                        "description": "The order of this activity step relative to other activity steps",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "StepID": {
                                                        "description": "The id of the step",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "StepName": {
                                                        "description": "The name of the step",
                                                        "type": "string"
                                                    },
                                                    "UseConfig": {
                                                        "description": "Indicates the configuration for the ActivityStep to use at runtime.  The build agent must provide this configuration",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "description": "A DTO for an IActivity",
                                    "properties": {
                                        "ActivityID": {
                                            "description": "The ID of the activity",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Deleted": {
                                            "description": "",
                                            "type": "boolean"
                                        },
                                        "Name": {
                                            "description": "The name of the activity",
                                            "type": "string"
                                        },
                                        "Parameters": {
                                            "description": "The parameters for this activity",
                                            "items": {
                                                "description": "A DTO for an IParameter",
                                                "properties": {
                                                    "Direction": {
                                                        "description": "The parameter direction (Input or Output)",
                                                        "enum": [
                                                            "Input",
                                                            "Output"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the parameter",
                                                        "type": "string"
                                                    },
                                                    "Type": {
                                                        "description": "The data type of the parameter",
                                                        "enum": [
                                                            "String",
                                                            "Boolean",
                                                            "Integer",
                                                            "Float",
                                                            "StringDictionary"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Steps": {
                                            "description": "The steps which are performed for this activity",
                                            "items": {
                                                "description": "A DTO for an IActivityStep",
                                                "properties": {
                                                    "ActivityID": {
                                                        "description": "The id of the activity this activity step belongs to",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "ActivityStepID": {
                                                        "description": "The id of this activity step",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "ImplementationID": {
                                                        "description": "The implementation id which is used to look up the step implementation",
                                                        "type": "string"
                                                    },
                                                    "ParameterMappings": {
                                                        "description": "The mapping of values from a source to be used for the step parameters",
                                                        "items": {
                                                            "description": "A DTO for an IParameterMapping",
                                                            "properties": {
                                                                "Name": {
                                                                    "description": "The name of the parameter this mapping applies to",
                                                                    "type": "string"
                                                                },
                                                                "Source": {
                                                                    "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                    "type": "string"
                                                                },
                                                                "SourceType": {
                                                                    "description": "The source type used for supplying the parameter",
                                                                    "enum": [
                                                                        "Constant",
                                                                        "Variable"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "readOnly": true,
                                                        "type": "array"
                                                    },
                                                    "RunOrder": {
                                                        "description": "The order of this activity step relative to other activity steps",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "StepID": {
                                                        "description": "The id of the step",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "StepName": {
                                                        "description": "The name of the step",
                                                        "type": "string"
                                                    },
                                                    "UseConfig": {
                                                        "description": "Indicates the configuration for the ActivityStep to use at runtime.  The build agent must provide this configuration",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get an Activity by ID",
                "tags": [
                    "Activities"
                ]
            },
            "put": {
                "deprecated": false,
                "description": "Updates an Activity.  The body of the PUT is the updated Activity.  When successful, the response is empty.\r\n            If unsuccessful, an appropriate ApiError is returned.",
                "operationId": "Activities_PutActivity",
                "parameters": [
                    {
                        "description": "The id of the activity to update",
                        "in": "path",
                        "name": "activityID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Update an Activity",
                "tags": [
                    "Activities"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "A DTO for an IActivity",
                                "properties": {
                                    "ActivityID": {
                                        "description": "The ID of the activity",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Deleted": {
                                        "description": "",
                                        "type": "boolean"
                                    },
                                    "Name": {
                                        "description": "The name of the activity",
                                        "type": "string"
                                    },
                                    "Parameters": {
                                        "description": "The parameters for this activity",
                                        "items": {
                                            "description": "A DTO for an IParameter",
                                            "properties": {
                                                "Direction": {
                                                    "description": "The parameter direction (Input or Output)",
                                                    "enum": [
                                                        "Input",
                                                        "Output"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name of the parameter",
                                                    "type": "string"
                                                },
                                                "Type": {
                                                    "description": "The data type of the parameter",
                                                    "enum": [
                                                        "String",
                                                        "Boolean",
                                                        "Integer",
                                                        "Float",
                                                        "StringDictionary"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    },
                                    "Steps": {
                                        "description": "The steps which are performed for this activity",
                                        "items": {
                                            "description": "A DTO for an IActivityStep",
                                            "properties": {
                                                "ActivityID": {
                                                    "description": "The id of the activity this activity step belongs to",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "ActivityStepID": {
                                                    "description": "The id of this activity step",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "ImplementationID": {
                                                    "description": "The implementation id which is used to look up the step implementation",
                                                    "type": "string"
                                                },
                                                "ParameterMappings": {
                                                    "description": "The mapping of values from a source to be used for the step parameters",
                                                    "items": {
                                                        "description": "A DTO for an IParameterMapping",
                                                        "properties": {
                                                            "Name": {
                                                                "description": "The name of the parameter this mapping applies to",
                                                                "type": "string"
                                                            },
                                                            "Source": {
                                                                "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                "type": "string"
                                                            },
                                                            "SourceType": {
                                                                "description": "The source type used for supplying the parameter",
                                                                "enum": [
                                                                    "Constant",
                                                                    "Variable"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "readOnly": true,
                                                    "type": "array"
                                                },
                                                "RunOrder": {
                                                    "description": "The order of this activity step relative to other activity steps",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "StepID": {
                                                    "description": "The id of the step",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "StepName": {
                                                    "description": "The name of the step",
                                                    "type": "string"
                                                },
                                                "UseConfig": {
                                                    "description": "Indicates the configuration for the ActivityStep to use at runtime.  The build agent must provide this configuration",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "description": "A DTO for an IActivity",
                                "properties": {
                                    "ActivityID": {
                                        "description": "The ID of the activity",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Deleted": {
                                        "description": "",
                                        "type": "boolean"
                                    },
                                    "Name": {
                                        "description": "The name of the activity",
                                        "type": "string"
                                    },
                                    "Parameters": {
                                        "description": "The parameters for this activity",
                                        "items": {
                                            "description": "A DTO for an IParameter",
                                            "properties": {
                                                "Direction": {
                                                    "description": "The parameter direction (Input or Output)",
                                                    "enum": [
                                                        "Input",
                                                        "Output"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name of the parameter",
                                                    "type": "string"
                                                },
                                                "Type": {
                                                    "description": "The data type of the parameter",
                                                    "enum": [
                                                        "String",
                                                        "Boolean",
                                                        "Integer",
                                                        "Float",
                                                        "StringDictionary"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    },
                                    "Steps": {
                                        "description": "The steps which are performed for this activity",
                                        "items": {
                                            "description": "A DTO for an IActivityStep",
                                            "properties": {
                                                "ActivityID": {
                                                    "description": "The id of the activity this activity step belongs to",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "ActivityStepID": {
                                                    "description": "The id of this activity step",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "ImplementationID": {
                                                    "description": "The implementation id which is used to look up the step implementation",
                                                    "type": "string"
                                                },
                                                "ParameterMappings": {
                                                    "description": "The mapping of values from a source to be used for the step parameters",
                                                    "items": {
                                                        "description": "A DTO for an IParameterMapping",
                                                        "properties": {
                                                            "Name": {
                                                                "description": "The name of the parameter this mapping applies to",
                                                                "type": "string"
                                                            },
                                                            "Source": {
                                                                "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                "type": "string"
                                                            },
                                                            "SourceType": {
                                                                "description": "The source type used for supplying the parameter",
                                                                "enum": [
                                                                    "Constant",
                                                                    "Variable"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "readOnly": true,
                                                    "type": "array"
                                                },
                                                "RunOrder": {
                                                    "description": "The order of this activity step relative to other activity steps",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "StepID": {
                                                    "description": "The id of the step",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "StepName": {
                                                    "description": "The name of the step",
                                                    "type": "string"
                                                },
                                                "UseConfig": {
                                                    "description": "Indicates the configuration for the ActivityStep to use at runtime.  The build agent must provide this configuration",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "description": "A DTO for an IActivity",
                                "properties": {
                                    "ActivityID": {
                                        "description": "The ID of the activity",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Deleted": {
                                        "description": "",
                                        "type": "boolean"
                                    },
                                    "Name": {
                                        "description": "The name of the activity",
                                        "type": "string"
                                    },
                                    "Parameters": {
                                        "description": "The parameters for this activity",
                                        "items": {
                                            "description": "A DTO for an IParameter",
                                            "properties": {
                                                "Direction": {
                                                    "description": "The parameter direction (Input or Output)",
                                                    "enum": [
                                                        "Input",
                                                        "Output"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name of the parameter",
                                                    "type": "string"
                                                },
                                                "Type": {
                                                    "description": "The data type of the parameter",
                                                    "enum": [
                                                        "String",
                                                        "Boolean",
                                                        "Integer",
                                                        "Float",
                                                        "StringDictionary"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    },
                                    "Steps": {
                                        "description": "The steps which are performed for this activity",
                                        "items": {
                                            "description": "A DTO for an IActivityStep",
                                            "properties": {
                                                "ActivityID": {
                                                    "description": "The id of the activity this activity step belongs to",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "ActivityStepID": {
                                                    "description": "The id of this activity step",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "ImplementationID": {
                                                    "description": "The implementation id which is used to look up the step implementation",
                                                    "type": "string"
                                                },
                                                "ParameterMappings": {
                                                    "description": "The mapping of values from a source to be used for the step parameters",
                                                    "items": {
                                                        "description": "A DTO for an IParameterMapping",
                                                        "properties": {
                                                            "Name": {
                                                                "description": "The name of the parameter this mapping applies to",
                                                                "type": "string"
                                                            },
                                                            "Source": {
                                                                "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                "type": "string"
                                                            },
                                                            "SourceType": {
                                                                "description": "The source type used for supplying the parameter",
                                                                "enum": [
                                                                    "Constant",
                                                                    "Variable"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "readOnly": true,
                                                    "type": "array"
                                                },
                                                "RunOrder": {
                                                    "description": "The order of this activity step relative to other activity steps",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "StepID": {
                                                    "description": "The id of the step",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "StepName": {
                                                    "description": "The name of the step",
                                                    "type": "string"
                                                },
                                                "UseConfig": {
                                                    "description": "Indicates the configuration for the ActivityStep to use at runtime.  The build agent must provide this configuration",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "text/xml": {
                            "schema": {
                                "description": "A DTO for an IActivity",
                                "properties": {
                                    "ActivityID": {
                                        "description": "The ID of the activity",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Deleted": {
                                        "description": "",
                                        "type": "boolean"
                                    },
                                    "Name": {
                                        "description": "The name of the activity",
                                        "type": "string"
                                    },
                                    "Parameters": {
                                        "description": "The parameters for this activity",
                                        "items": {
                                            "description": "A DTO for an IParameter",
                                            "properties": {
                                                "Direction": {
                                                    "description": "The parameter direction (Input or Output)",
                                                    "enum": [
                                                        "Input",
                                                        "Output"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name of the parameter",
                                                    "type": "string"
                                                },
                                                "Type": {
                                                    "description": "The data type of the parameter",
                                                    "enum": [
                                                        "String",
                                                        "Boolean",
                                                        "Integer",
                                                        "Float",
                                                        "StringDictionary"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    },
                                    "Steps": {
                                        "description": "The steps which are performed for this activity",
                                        "items": {
                                            "description": "A DTO for an IActivityStep",
                                            "properties": {
                                                "ActivityID": {
                                                    "description": "The id of the activity this activity step belongs to",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "ActivityStepID": {
                                                    "description": "The id of this activity step",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "ImplementationID": {
                                                    "description": "The implementation id which is used to look up the step implementation",
                                                    "type": "string"
                                                },
                                                "ParameterMappings": {
                                                    "description": "The mapping of values from a source to be used for the step parameters",
                                                    "items": {
                                                        "description": "A DTO for an IParameterMapping",
                                                        "properties": {
                                                            "Name": {
                                                                "description": "The name of the parameter this mapping applies to",
                                                                "type": "string"
                                                            },
                                                            "Source": {
                                                                "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                "type": "string"
                                                            },
                                                            "SourceType": {
                                                                "description": "The source type used for supplying the parameter",
                                                                "enum": [
                                                                    "Constant",
                                                                    "Variable"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "readOnly": true,
                                                    "type": "array"
                                                },
                                                "RunOrder": {
                                                    "description": "The order of this activity step relative to other activity steps",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "StepID": {
                                                    "description": "The id of the step",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "StepName": {
                                                    "description": "The name of the step",
                                                    "type": "string"
                                                },
                                                "UseConfig": {
                                                    "description": "Indicates the configuration for the ActivityStep to use at runtime.  The build agent must provide this configuration",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "description": "A DTO for an IActivity",
                                "properties": {
                                    "ActivityID": {
                                        "description": "The ID of the activity",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Deleted": {
                                        "description": "",
                                        "type": "boolean"
                                    },
                                    "Name": {
                                        "description": "The name of the activity",
                                        "type": "string"
                                    },
                                    "Parameters": {
                                        "description": "The parameters for this activity",
                                        "items": {
                                            "description": "A DTO for an IParameter",
                                            "properties": {
                                                "Direction": {
                                                    "description": "The parameter direction (Input or Output)",
                                                    "enum": [
                                                        "Input",
                                                        "Output"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name of the parameter",
                                                    "type": "string"
                                                },
                                                "Type": {
                                                    "description": "The data type of the parameter",
                                                    "enum": [
                                                        "String",
                                                        "Boolean",
                                                        "Integer",
                                                        "Float",
                                                        "StringDictionary"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    },
                                    "Steps": {
                                        "description": "The steps which are performed for this activity",
                                        "items": {
                                            "description": "A DTO for an IActivityStep",
                                            "properties": {
                                                "ActivityID": {
                                                    "description": "The id of the activity this activity step belongs to",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "ActivityStepID": {
                                                    "description": "The id of this activity step",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "ImplementationID": {
                                                    "description": "The implementation id which is used to look up the step implementation",
                                                    "type": "string"
                                                },
                                                "ParameterMappings": {
                                                    "description": "The mapping of values from a source to be used for the step parameters",
                                                    "items": {
                                                        "description": "A DTO for an IParameterMapping",
                                                        "properties": {
                                                            "Name": {
                                                                "description": "The name of the parameter this mapping applies to",
                                                                "type": "string"
                                                            },
                                                            "Source": {
                                                                "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                "type": "string"
                                                            },
                                                            "SourceType": {
                                                                "description": "The source type used for supplying the parameter",
                                                                "enum": [
                                                                    "Constant",
                                                                    "Variable"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "readOnly": true,
                                                    "type": "array"
                                                },
                                                "RunOrder": {
                                                    "description": "The order of this activity step relative to other activity steps",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "StepID": {
                                                    "description": "The id of the step",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "StepName": {
                                                    "description": "The name of the step",
                                                    "type": "string"
                                                },
                                                "UseConfig": {
                                                    "description": "Indicates the configuration for the ActivityStep to use at runtime.  The build agent must provide this configuration",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "description": "The updated activity",
                    "required": true
                }
            }
        },
        "/api/v2/activityRuns": {
            "get": {
                "deprecated": false,
                "description": "Gets a collection of ActivityRuns. When successful, the response is a PagedResponse of ActivityRuns.  \r\n            If unsuccessful, an appropriate ApiError is returned.",
                "operationId": "ActivityRuns_GetActivityRuns",
                "parameters": [
                    {
                        "description": "Optional. The page limit.  If not specified, the default page limit is 10.",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "Optional. The page offset.  If not specified, the default page offset is 0.",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "Optional. Filter activity runs by status.  Value should be a comma separated list of status to include.\r\n            If not specified, the default status filter is “InProgress”.",
                        "in": "query",
                        "name": "status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Ready",
                                "InProgress",
                                "Succeeded",
                                "Cancelled",
                                "Failed"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "description": "A DTO for an IActivityRun",
                                                "properties": {
                                                    "ActivityRunID": {
                                                        "description": "The identifier for the ActivityRun",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "EndDate": {
                                                        "description": "Read Only. The UTC date and time when the activity completed",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "JobActivityID": {
                                                        "description": "Read Only. The ID of the Job Activity that defines this activity run",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "JobRunID": {
                                                        "description": "Read Only. The ID of the JobRun under which this ActivityRun is executing",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "Parameters": {
                                                        "description": "The parameters used for this run of the activity.  Parameters cannot be added or removed, but output parameter values may be updated.",
                                                        "items": {
                                                            "description": "A DTO for an IParameterValue",
                                                            "properties": {
                                                                "Direction": {
                                                                    "description": "The parameter direction (Input or Output)",
                                                                    "enum": [
                                                                        "Input",
                                                                        "Output"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "Name": {
                                                                    "description": "The name of the parameter this value is for",
                                                                    "type": "string"
                                                                },
                                                                "Value": {
                                                                    "description": "The parameter value in string representation",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "readOnly": true,
                                                        "type": "array"
                                                    },
                                                    "StartDate": {
                                                        "description": "Read Only. The UTC date and time when the activity started",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "Status": {
                                                        "description": "The status of this ActivityRun",
                                                        "properties": {
                                                            "CurrentStep": {
                                                                "description": "The activity step currently executing, indicated by numeric order",
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "Status": {
                                                                "description": "The status of the ActivityRun",
                                                                "enum": [
                                                                    "Ready",
                                                                    "InProgress",
                                                                    "Succeeded",
                                                                    "Cancelled",
                                                                    "Failed"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "StepProgress": {
                                                                "description": "The percent progress from the currently executing step.  This value shall be null if progress is not available",
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "StepStatus": {
                                                                "description": "The status text from the currently executing step",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "Steps": {
                                                        "description": "Read Only. The steps to be executed for the activity.  These steps come from the relationship through JobActivity down to ActivityStep",
                                                        "items": {
                                                            "description": "A DTO for an IActivityStep",
                                                            "properties": {
                                                                "ActivityID": {
                                                                    "description": "The id of the activity this activity step belongs to",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "ActivityStepID": {
                                                                    "description": "The id of this activity step",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "ImplementationID": {
                                                                    "description": "The implementation id which is used to look up the step implementation",
                                                                    "type": "string"
                                                                },
                                                                "ParameterMappings": {
                                                                    "description": "The mapping of values from a source to be used for the step parameters",
                                                                    "items": {
                                                                        "description": "A DTO for an IParameterMapping",
                                                                        "properties": {
                                                                            "Name": {
                                                                                "description": "The name of the parameter this mapping applies to",
                                                                                "type": "string"
                                                                            },
                                                                            "Source": {
                                                                                "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                                "type": "string"
                                                                            },
                                                                            "SourceType": {
                                                                                "description": "The source type used for supplying the parameter",
                                                                                "enum": [
                                                                                    "Constant",
                                                                                    "Variable"
                                                                                ],
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "readOnly": true,
                                                                    "type": "array"
                                                                },
                                                                "RunOrder": {
                                                                    "description": "The order of this activity step relative to other activity steps",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "StepID": {
                                                                    "description": "The id of the step",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "StepName": {
                                                                    "description": "The name of the step",
                                                                    "type": "string"
                                                                },
                                                                "UseConfig": {
                                                                    "description": "Indicates the configuration for the ActivityStep to use at runtime.  The build agent must provide this configuration",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "readOnly": true,
                                                        "type": "array"
                                                    }
                                                },
                                                "required": [
                                                    "Status"
                                                ],
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "description": "A DTO for an IActivityRun",
                                                "properties": {
                                                    "ActivityRunID": {
                                                        "description": "The identifier for the ActivityRun",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "EndDate": {
                                                        "description": "Read Only. The UTC date and time when the activity completed",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "JobActivityID": {
                                                        "description": "Read Only. The ID of the Job Activity that defines this activity run",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "JobRunID": {
                                                        "description": "Read Only. The ID of the JobRun under which this ActivityRun is executing",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "Parameters": {
                                                        "description": "The parameters used for this run of the activity.  Parameters cannot be added or removed, but output parameter values may be updated.",
                                                        "items": {
                                                            "description": "A DTO for an IParameterValue",
                                                            "properties": {
                                                                "Direction": {
                                                                    "description": "The parameter direction (Input or Output)",
                                                                    "enum": [
                                                                        "Input",
                                                                        "Output"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "Name": {
                                                                    "description": "The name of the parameter this value is for",
                                                                    "type": "string"
                                                                },
                                                                "Value": {
                                                                    "description": "The parameter value in string representation",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "readOnly": true,
                                                        "type": "array"
                                                    },
                                                    "StartDate": {
                                                        "description": "Read Only. The UTC date and time when the activity started",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "Status": {
                                                        "description": "The status of this ActivityRun",
                                                        "properties": {
                                                            "CurrentStep": {
                                                                "description": "The activity step currently executing, indicated by numeric order",
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "Status": {
                                                                "description": "The status of the ActivityRun",
                                                                "enum": [
                                                                    "Ready",
                                                                    "InProgress",
                                                                    "Succeeded",
                                                                    "Cancelled",
                                                                    "Failed"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "StepProgress": {
                                                                "description": "The percent progress from the currently executing step.  This value shall be null if progress is not available",
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "StepStatus": {
                                                                "description": "The status text from the currently executing step",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "Steps": {
                                                        "description": "Read Only. The steps to be executed for the activity.  These steps come from the relationship through JobActivity down to ActivityStep",
                                                        "items": {
                                                            "description": "A DTO for an IActivityStep",
                                                            "properties": {
                                                                "ActivityID": {
                                                                    "description": "The id of the activity this activity step belongs to",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "ActivityStepID": {
                                                                    "description": "The id of this activity step",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "ImplementationID": {
                                                                    "description": "The implementation id which is used to look up the step implementation",
                                                                    "type": "string"
                                                                },
                                                                "ParameterMappings": {
                                                                    "description": "The mapping of values from a source to be used for the step parameters",
                                                                    "items": {
                                                                        "description": "A DTO for an IParameterMapping",
                                                                        "properties": {
                                                                            "Name": {
                                                                                "description": "The name of the parameter this mapping applies to",
                                                                                "type": "string"
                                                                            },
                                                                            "Source": {
                                                                                "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                                "type": "string"
                                                                            },
                                                                            "SourceType": {
                                                                                "description": "The source type used for supplying the parameter",
                                                                                "enum": [
                                                                                    "Constant",
                                                                                    "Variable"
                                                                                ],
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "readOnly": true,
                                                                    "type": "array"
                                                                },
                                                                "RunOrder": {
                                                                    "description": "The order of this activity step relative to other activity steps",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "StepID": {
                                                                    "description": "The id of the step",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "StepName": {
                                                                    "description": "The name of the step",
                                                                    "type": "string"
                                                                },
                                                                "UseConfig": {
                                                                    "description": "Indicates the configuration for the ActivityStep to use at runtime.  The build agent must provide this configuration",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "readOnly": true,
                                                        "type": "array"
                                                    }
                                                },
                                                "required": [
                                                    "Status"
                                                ],
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get ActivityRuns",
                "tags": [
                    "ActivityRuns"
                ]
            }
        },
        "/api/v2/activityRuns/{activityRunID}": {
            "get": {
                "deprecated": false,
                "description": "Gets an ActivityRun by ID. When successful, the response is the requested ActivityRun.  If unsuccessful,\r\n            an appropriate ApiError is returned.",
                "operationId": "ActivityRuns_GetActivityRun",
                "parameters": [
                    {
                        "description": "The ID of the ActivityRun to get.",
                        "in": "path",
                        "name": "activityRunID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "A DTO for an IActivityRun",
                                    "properties": {
                                        "ActivityRunID": {
                                            "description": "The identifier for the ActivityRun",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "EndDate": {
                                            "description": "Read Only. The UTC date and time when the activity completed",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "JobActivityID": {
                                            "description": "Read Only. The ID of the Job Activity that defines this activity run",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "JobRunID": {
                                            "description": "Read Only. The ID of the JobRun under which this ActivityRun is executing",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Parameters": {
                                            "description": "The parameters used for this run of the activity.  Parameters cannot be added or removed, but output parameter values may be updated.",
                                            "items": {
                                                "description": "A DTO for an IParameterValue",
                                                "properties": {
                                                    "Direction": {
                                                        "description": "The parameter direction (Input or Output)",
                                                        "enum": [
                                                            "Input",
                                                            "Output"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the parameter this value is for",
                                                        "type": "string"
                                                    },
                                                    "Value": {
                                                        "description": "The parameter value in string representation",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "StartDate": {
                                            "description": "Read Only. The UTC date and time when the activity started",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "The status of this ActivityRun",
                                            "properties": {
                                                "CurrentStep": {
                                                    "description": "The activity step currently executing, indicated by numeric order",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "Status": {
                                                    "description": "The status of the ActivityRun",
                                                    "enum": [
                                                        "Ready",
                                                        "InProgress",
                                                        "Succeeded",
                                                        "Cancelled",
                                                        "Failed"
                                                    ],
                                                    "type": "string"
                                                },
                                                "StepProgress": {
                                                    "description": "The percent progress from the currently executing step.  This value shall be null if progress is not available",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "StepStatus": {
                                                    "description": "The status text from the currently executing step",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "Steps": {
                                            "description": "Read Only. The steps to be executed for the activity.  These steps come from the relationship through JobActivity down to ActivityStep",
                                            "items": {
                                                "description": "A DTO for an IActivityStep",
                                                "properties": {
                                                    "ActivityID": {
                                                        "description": "The id of the activity this activity step belongs to",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "ActivityStepID": {
                                                        "description": "The id of this activity step",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "ImplementationID": {
                                                        "description": "The implementation id which is used to look up the step implementation",
                                                        "type": "string"
                                                    },
                                                    "ParameterMappings": {
                                                        "description": "The mapping of values from a source to be used for the step parameters",
                                                        "items": {
                                                            "description": "A DTO for an IParameterMapping",
                                                            "properties": {
                                                                "Name": {
                                                                    "description": "The name of the parameter this mapping applies to",
                                                                    "type": "string"
                                                                },
                                                                "Source": {
                                                                    "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                    "type": "string"
                                                                },
                                                                "SourceType": {
                                                                    "description": "The source type used for supplying the parameter",
                                                                    "enum": [
                                                                        "Constant",
                                                                        "Variable"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "readOnly": true,
                                                        "type": "array"
                                                    },
                                                    "RunOrder": {
                                                        "description": "The order of this activity step relative to other activity steps",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "StepID": {
                                                        "description": "The id of the step",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "StepName": {
                                                        "description": "The name of the step",
                                                        "type": "string"
                                                    },
                                                    "UseConfig": {
                                                        "description": "Indicates the configuration for the ActivityStep to use at runtime.  The build agent must provide this configuration",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        }
                                    },
                                    "required": [
                                        "Status"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "description": "A DTO for an IActivityRun",
                                    "properties": {
                                        "ActivityRunID": {
                                            "description": "The identifier for the ActivityRun",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "EndDate": {
                                            "description": "Read Only. The UTC date and time when the activity completed",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "JobActivityID": {
                                            "description": "Read Only. The ID of the Job Activity that defines this activity run",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "JobRunID": {
                                            "description": "Read Only. The ID of the JobRun under which this ActivityRun is executing",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Parameters": {
                                            "description": "The parameters used for this run of the activity.  Parameters cannot be added or removed, but output parameter values may be updated.",
                                            "items": {
                                                "description": "A DTO for an IParameterValue",
                                                "properties": {
                                                    "Direction": {
                                                        "description": "The parameter direction (Input or Output)",
                                                        "enum": [
                                                            "Input",
                                                            "Output"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the parameter this value is for",
                                                        "type": "string"
                                                    },
                                                    "Value": {
                                                        "description": "The parameter value in string representation",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "StartDate": {
                                            "description": "Read Only. The UTC date and time when the activity started",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "The status of this ActivityRun",
                                            "properties": {
                                                "CurrentStep": {
                                                    "description": "The activity step currently executing, indicated by numeric order",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "Status": {
                                                    "description": "The status of the ActivityRun",
                                                    "enum": [
                                                        "Ready",
                                                        "InProgress",
                                                        "Succeeded",
                                                        "Cancelled",
                                                        "Failed"
                                                    ],
                                                    "type": "string"
                                                },
                                                "StepProgress": {
                                                    "description": "The percent progress from the currently executing step.  This value shall be null if progress is not available",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "StepStatus": {
                                                    "description": "The status text from the currently executing step",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "Steps": {
                                            "description": "Read Only. The steps to be executed for the activity.  These steps come from the relationship through JobActivity down to ActivityStep",
                                            "items": {
                                                "description": "A DTO for an IActivityStep",
                                                "properties": {
                                                    "ActivityID": {
                                                        "description": "The id of the activity this activity step belongs to",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "ActivityStepID": {
                                                        "description": "The id of this activity step",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "ImplementationID": {
                                                        "description": "The implementation id which is used to look up the step implementation",
                                                        "type": "string"
                                                    },
                                                    "ParameterMappings": {
                                                        "description": "The mapping of values from a source to be used for the step parameters",
                                                        "items": {
                                                            "description": "A DTO for an IParameterMapping",
                                                            "properties": {
                                                                "Name": {
                                                                    "description": "The name of the parameter this mapping applies to",
                                                                    "type": "string"
                                                                },
                                                                "Source": {
                                                                    "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                    "type": "string"
                                                                },
                                                                "SourceType": {
                                                                    "description": "The source type used for supplying the parameter",
                                                                    "enum": [
                                                                        "Constant",
                                                                        "Variable"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "readOnly": true,
                                                        "type": "array"
                                                    },
                                                    "RunOrder": {
                                                        "description": "The order of this activity step relative to other activity steps",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "StepID": {
                                                        "description": "The id of the step",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "StepName": {
                                                        "description": "The name of the step",
                                                        "type": "string"
                                                    },
                                                    "UseConfig": {
                                                        "description": "Indicates the configuration for the ActivityStep to use at runtime.  The build agent must provide this configuration",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        }
                                    },
                                    "required": [
                                        "Status"
                                    ],
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "description": "A DTO for an IActivityRun",
                                    "properties": {
                                        "ActivityRunID": {
                                            "description": "The identifier for the ActivityRun",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "EndDate": {
                                            "description": "Read Only. The UTC date and time when the activity completed",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "JobActivityID": {
                                            "description": "Read Only. The ID of the Job Activity that defines this activity run",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "JobRunID": {
                                            "description": "Read Only. The ID of the JobRun under which this ActivityRun is executing",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Parameters": {
                                            "description": "The parameters used for this run of the activity.  Parameters cannot be added or removed, but output parameter values may be updated.",
                                            "items": {
                                                "description": "A DTO for an IParameterValue",
                                                "properties": {
                                                    "Direction": {
                                                        "description": "The parameter direction (Input or Output)",
                                                        "enum": [
                                                            "Input",
                                                            "Output"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the parameter this value is for",
                                                        "type": "string"
                                                    },
                                                    "Value": {
                                                        "description": "The parameter value in string representation",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "StartDate": {
                                            "description": "Read Only. The UTC date and time when the activity started",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "The status of this ActivityRun",
                                            "properties": {
                                                "CurrentStep": {
                                                    "description": "The activity step currently executing, indicated by numeric order",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "Status": {
                                                    "description": "The status of the ActivityRun",
                                                    "enum": [
                                                        "Ready",
                                                        "InProgress",
                                                        "Succeeded",
                                                        "Cancelled",
                                                        "Failed"
                                                    ],
                                                    "type": "string"
                                                },
                                                "StepProgress": {
                                                    "description": "The percent progress from the currently executing step.  This value shall be null if progress is not available",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "StepStatus": {
                                                    "description": "The status text from the currently executing step",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "Steps": {
                                            "description": "Read Only. The steps to be executed for the activity.  These steps come from the relationship through JobActivity down to ActivityStep",
                                            "items": {
                                                "description": "A DTO for an IActivityStep",
                                                "properties": {
                                                    "ActivityID": {
                                                        "description": "The id of the activity this activity step belongs to",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "ActivityStepID": {
                                                        "description": "The id of this activity step",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "ImplementationID": {
                                                        "description": "The implementation id which is used to look up the step implementation",
                                                        "type": "string"
                                                    },
                                                    "ParameterMappings": {
                                                        "description": "The mapping of values from a source to be used for the step parameters",
                                                        "items": {
                                                            "description": "A DTO for an IParameterMapping",
                                                            "properties": {
                                                                "Name": {
                                                                    "description": "The name of the parameter this mapping applies to",
                                                                    "type": "string"
                                                                },
                                                                "Source": {
                                                                    "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                    "type": "string"
                                                                },
                                                                "SourceType": {
                                                                    "description": "The source type used for supplying the parameter",
                                                                    "enum": [
                                                                        "Constant",
                                                                        "Variable"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "readOnly": true,
                                                        "type": "array"
                                                    },
                                                    "RunOrder": {
                                                        "description": "The order of this activity step relative to other activity steps",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "StepID": {
                                                        "description": "The id of the step",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "StepName": {
                                                        "description": "The name of the step",
                                                        "type": "string"
                                                    },
                                                    "UseConfig": {
                                                        "description": "Indicates the configuration for the ActivityStep to use at runtime.  The build agent must provide this configuration",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        }
                                    },
                                    "required": [
                                        "Status"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "description": "A DTO for an IActivityRun",
                                    "properties": {
                                        "ActivityRunID": {
                                            "description": "The identifier for the ActivityRun",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "EndDate": {
                                            "description": "Read Only. The UTC date and time when the activity completed",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "JobActivityID": {
                                            "description": "Read Only. The ID of the Job Activity that defines this activity run",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "JobRunID": {
                                            "description": "Read Only. The ID of the JobRun under which this ActivityRun is executing",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Parameters": {
                                            "description": "The parameters used for this run of the activity.  Parameters cannot be added or removed, but output parameter values may be updated.",
                                            "items": {
                                                "description": "A DTO for an IParameterValue",
                                                "properties": {
                                                    "Direction": {
                                                        "description": "The parameter direction (Input or Output)",
                                                        "enum": [
                                                            "Input",
                                                            "Output"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the parameter this value is for",
                                                        "type": "string"
                                                    },
                                                    "Value": {
                                                        "description": "The parameter value in string representation",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "StartDate": {
                                            "description": "Read Only. The UTC date and time when the activity started",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "The status of this ActivityRun",
                                            "properties": {
                                                "CurrentStep": {
                                                    "description": "The activity step currently executing, indicated by numeric order",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "Status": {
                                                    "description": "The status of the ActivityRun",
                                                    "enum": [
                                                        "Ready",
                                                        "InProgress",
                                                        "Succeeded",
                                                        "Cancelled",
                                                        "Failed"
                                                    ],
                                                    "type": "string"
                                                },
                                                "StepProgress": {
                                                    "description": "The percent progress from the currently executing step.  This value shall be null if progress is not available",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "StepStatus": {
                                                    "description": "The status text from the currently executing step",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "Steps": {
                                            "description": "Read Only. The steps to be executed for the activity.  These steps come from the relationship through JobActivity down to ActivityStep",
                                            "items": {
                                                "description": "A DTO for an IActivityStep",
                                                "properties": {
                                                    "ActivityID": {
                                                        "description": "The id of the activity this activity step belongs to",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "ActivityStepID": {
                                                        "description": "The id of this activity step",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "ImplementationID": {
                                                        "description": "The implementation id which is used to look up the step implementation",
                                                        "type": "string"
                                                    },
                                                    "ParameterMappings": {
                                                        "description": "The mapping of values from a source to be used for the step parameters",
                                                        "items": {
                                                            "description": "A DTO for an IParameterMapping",
                                                            "properties": {
                                                                "Name": {
                                                                    "description": "The name of the parameter this mapping applies to",
                                                                    "type": "string"
                                                                },
                                                                "Source": {
                                                                    "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                    "type": "string"
                                                                },
                                                                "SourceType": {
                                                                    "description": "The source type used for supplying the parameter",
                                                                    "enum": [
                                                                        "Constant",
                                                                        "Variable"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "readOnly": true,
                                                        "type": "array"
                                                    },
                                                    "RunOrder": {
                                                        "description": "The order of this activity step relative to other activity steps",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "StepID": {
                                                        "description": "The id of the step",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "StepName": {
                                                        "description": "The name of the step",
                                                        "type": "string"
                                                    },
                                                    "UseConfig": {
                                                        "description": "Indicates the configuration for the ActivityStep to use at runtime.  The build agent must provide this configuration",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        }
                                    },
                                    "required": [
                                        "Status"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get an ActivityRun by ID",
                "tags": [
                    "ActivityRuns"
                ]
            },
            "put": {
                "deprecated": false,
                "description": "Updates the ActivityRunStatus of an ActivityRun.  The body of the PUT is the updated ActivityRunStatus.\r\n            When successful, the response is empty.  If unsuccessful, an appropriate ApiError is returned.",
                "operationId": "ActivityRuns_PutActivityRun",
                "parameters": [
                    {
                        "description": "The ID of the ActivityRun to update ActivityRunStatus for.",
                        "in": "path",
                        "name": "activityRunID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Update an ActivityRun",
                "tags": [
                    "ActivityRuns"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "A DTO for an IActivityRun",
                                "properties": {
                                    "ActivityRunID": {
                                        "description": "The identifier for the ActivityRun",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "EndDate": {
                                        "description": "Read Only. The UTC date and time when the activity completed",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "JobActivityID": {
                                        "description": "Read Only. The ID of the Job Activity that defines this activity run",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "JobRunID": {
                                        "description": "Read Only. The ID of the JobRun under which this ActivityRun is executing",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Parameters": {
                                        "description": "The parameters used for this run of the activity.  Parameters cannot be added or removed, but output parameter values may be updated.",
                                        "items": {
                                            "description": "A DTO for an IParameterValue",
                                            "properties": {
                                                "Direction": {
                                                    "description": "The parameter direction (Input or Output)",
                                                    "enum": [
                                                        "Input",
                                                        "Output"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name of the parameter this value is for",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "The parameter value in string representation",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    },
                                    "StartDate": {
                                        "description": "Read Only. The UTC date and time when the activity started",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Status": {
                                        "description": "The status of this ActivityRun",
                                        "properties": {
                                            "CurrentStep": {
                                                "description": "The activity step currently executing, indicated by numeric order",
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "Status": {
                                                "description": "The status of the ActivityRun",
                                                "enum": [
                                                    "Ready",
                                                    "InProgress",
                                                    "Succeeded",
                                                    "Cancelled",
                                                    "Failed"
                                                ],
                                                "type": "string"
                                            },
                                            "StepProgress": {
                                                "description": "The percent progress from the currently executing step.  This value shall be null if progress is not available",
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "StepStatus": {
                                                "description": "The status text from the currently executing step",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "Steps": {
                                        "description": "Read Only. The steps to be executed for the activity.  These steps come from the relationship through JobActivity down to ActivityStep",
                                        "items": {
                                            "description": "A DTO for an IActivityStep",
                                            "properties": {
                                                "ActivityID": {
                                                    "description": "The id of the activity this activity step belongs to",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "ActivityStepID": {
                                                    "description": "The id of this activity step",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "ImplementationID": {
                                                    "description": "The implementation id which is used to look up the step implementation",
                                                    "type": "string"
                                                },
                                                "ParameterMappings": {
                                                    "description": "The mapping of values from a source to be used for the step parameters",
                                                    "items": {
                                                        "description": "A DTO for an IParameterMapping",
                                                        "properties": {
                                                            "Name": {
                                                                "description": "The name of the parameter this mapping applies to",
                                                                "type": "string"
                                                            },
                                                            "Source": {
                                                                "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                "type": "string"
                                                            },
                                                            "SourceType": {
                                                                "description": "The source type used for supplying the parameter",
                                                                "enum": [
                                                                    "Constant",
                                                                    "Variable"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "readOnly": true,
                                                    "type": "array"
                                                },
                                                "RunOrder": {
                                                    "description": "The order of this activity step relative to other activity steps",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "StepID": {
                                                    "description": "The id of the step",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "StepName": {
                                                    "description": "The name of the step",
                                                    "type": "string"
                                                },
                                                "UseConfig": {
                                                    "description": "Indicates the configuration for the ActivityStep to use at runtime.  The build agent must provide this configuration",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "Status"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "description": "A DTO for an IActivityRun",
                                "properties": {
                                    "ActivityRunID": {
                                        "description": "The identifier for the ActivityRun",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "EndDate": {
                                        "description": "Read Only. The UTC date and time when the activity completed",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "JobActivityID": {
                                        "description": "Read Only. The ID of the Job Activity that defines this activity run",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "JobRunID": {
                                        "description": "Read Only. The ID of the JobRun under which this ActivityRun is executing",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Parameters": {
                                        "description": "The parameters used for this run of the activity.  Parameters cannot be added or removed, but output parameter values may be updated.",
                                        "items": {
                                            "description": "A DTO for an IParameterValue",
                                            "properties": {
                                                "Direction": {
                                                    "description": "The parameter direction (Input or Output)",
                                                    "enum": [
                                                        "Input",
                                                        "Output"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name of the parameter this value is for",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "The parameter value in string representation",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    },
                                    "StartDate": {
                                        "description": "Read Only. The UTC date and time when the activity started",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Status": {
                                        "description": "The status of this ActivityRun",
                                        "properties": {
                                            "CurrentStep": {
                                                "description": "The activity step currently executing, indicated by numeric order",
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "Status": {
                                                "description": "The status of the ActivityRun",
                                                "enum": [
                                                    "Ready",
                                                    "InProgress",
                                                    "Succeeded",
                                                    "Cancelled",
                                                    "Failed"
                                                ],
                                                "type": "string"
                                            },
                                            "StepProgress": {
                                                "description": "The percent progress from the currently executing step.  This value shall be null if progress is not available",
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "StepStatus": {
                                                "description": "The status text from the currently executing step",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "Steps": {
                                        "description": "Read Only. The steps to be executed for the activity.  These steps come from the relationship through JobActivity down to ActivityStep",
                                        "items": {
                                            "description": "A DTO for an IActivityStep",
                                            "properties": {
                                                "ActivityID": {
                                                    "description": "The id of the activity this activity step belongs to",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "ActivityStepID": {
                                                    "description": "The id of this activity step",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "ImplementationID": {
                                                    "description": "The implementation id which is used to look up the step implementation",
                                                    "type": "string"
                                                },
                                                "ParameterMappings": {
                                                    "description": "The mapping of values from a source to be used for the step parameters",
                                                    "items": {
                                                        "description": "A DTO for an IParameterMapping",
                                                        "properties": {
                                                            "Name": {
                                                                "description": "The name of the parameter this mapping applies to",
                                                                "type": "string"
                                                            },
                                                            "Source": {
                                                                "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                "type": "string"
                                                            },
                                                            "SourceType": {
                                                                "description": "The source type used for supplying the parameter",
                                                                "enum": [
                                                                    "Constant",
                                                                    "Variable"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "readOnly": true,
                                                    "type": "array"
                                                },
                                                "RunOrder": {
                                                    "description": "The order of this activity step relative to other activity steps",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "StepID": {
                                                    "description": "The id of the step",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "StepName": {
                                                    "description": "The name of the step",
                                                    "type": "string"
                                                },
                                                "UseConfig": {
                                                    "description": "Indicates the configuration for the ActivityStep to use at runtime.  The build agent must provide this configuration",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "Status"
                                ],
                                "type": "object"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "description": "A DTO for an IActivityRun",
                                "properties": {
                                    "ActivityRunID": {
                                        "description": "The identifier for the ActivityRun",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "EndDate": {
                                        "description": "Read Only. The UTC date and time when the activity completed",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "JobActivityID": {
                                        "description": "Read Only. The ID of the Job Activity that defines this activity run",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "JobRunID": {
                                        "description": "Read Only. The ID of the JobRun under which this ActivityRun is executing",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Parameters": {
                                        "description": "The parameters used for this run of the activity.  Parameters cannot be added or removed, but output parameter values may be updated.",
                                        "items": {
                                            "description": "A DTO for an IParameterValue",
                                            "properties": {
                                                "Direction": {
                                                    "description": "The parameter direction (Input or Output)",
                                                    "enum": [
                                                        "Input",
                                                        "Output"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name of the parameter this value is for",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "The parameter value in string representation",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    },
                                    "StartDate": {
                                        "description": "Read Only. The UTC date and time when the activity started",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Status": {
                                        "description": "The status of this ActivityRun",
                                        "properties": {
                                            "CurrentStep": {
                                                "description": "The activity step currently executing, indicated by numeric order",
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "Status": {
                                                "description": "The status of the ActivityRun",
                                                "enum": [
                                                    "Ready",
                                                    "InProgress",
                                                    "Succeeded",
                                                    "Cancelled",
                                                    "Failed"
                                                ],
                                                "type": "string"
                                            },
                                            "StepProgress": {
                                                "description": "The percent progress from the currently executing step.  This value shall be null if progress is not available",
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "StepStatus": {
                                                "description": "The status text from the currently executing step",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "Steps": {
                                        "description": "Read Only. The steps to be executed for the activity.  These steps come from the relationship through JobActivity down to ActivityStep",
                                        "items": {
                                            "description": "A DTO for an IActivityStep",
                                            "properties": {
                                                "ActivityID": {
                                                    "description": "The id of the activity this activity step belongs to",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "ActivityStepID": {
                                                    "description": "The id of this activity step",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "ImplementationID": {
                                                    "description": "The implementation id which is used to look up the step implementation",
                                                    "type": "string"
                                                },
                                                "ParameterMappings": {
                                                    "description": "The mapping of values from a source to be used for the step parameters",
                                                    "items": {
                                                        "description": "A DTO for an IParameterMapping",
                                                        "properties": {
                                                            "Name": {
                                                                "description": "The name of the parameter this mapping applies to",
                                                                "type": "string"
                                                            },
                                                            "Source": {
                                                                "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                "type": "string"
                                                            },
                                                            "SourceType": {
                                                                "description": "The source type used for supplying the parameter",
                                                                "enum": [
                                                                    "Constant",
                                                                    "Variable"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "readOnly": true,
                                                    "type": "array"
                                                },
                                                "RunOrder": {
                                                    "description": "The order of this activity step relative to other activity steps",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "StepID": {
                                                    "description": "The id of the step",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "StepName": {
                                                    "description": "The name of the step",
                                                    "type": "string"
                                                },
                                                "UseConfig": {
                                                    "description": "Indicates the configuration for the ActivityStep to use at runtime.  The build agent must provide this configuration",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "Status"
                                ],
                                "type": "object"
                            }
                        },
                        "text/xml": {
                            "schema": {
                                "description": "A DTO for an IActivityRun",
                                "properties": {
                                    "ActivityRunID": {
                                        "description": "The identifier for the ActivityRun",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "EndDate": {
                                        "description": "Read Only. The UTC date and time when the activity completed",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "JobActivityID": {
                                        "description": "Read Only. The ID of the Job Activity that defines this activity run",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "JobRunID": {
                                        "description": "Read Only. The ID of the JobRun under which this ActivityRun is executing",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Parameters": {
                                        "description": "The parameters used for this run of the activity.  Parameters cannot be added or removed, but output parameter values may be updated.",
                                        "items": {
                                            "description": "A DTO for an IParameterValue",
                                            "properties": {
                                                "Direction": {
                                                    "description": "The parameter direction (Input or Output)",
                                                    "enum": [
                                                        "Input",
                                                        "Output"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name of the parameter this value is for",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "The parameter value in string representation",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    },
                                    "StartDate": {
                                        "description": "Read Only. The UTC date and time when the activity started",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Status": {
                                        "description": "The status of this ActivityRun",
                                        "properties": {
                                            "CurrentStep": {
                                                "description": "The activity step currently executing, indicated by numeric order",
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "Status": {
                                                "description": "The status of the ActivityRun",
                                                "enum": [
                                                    "Ready",
                                                    "InProgress",
                                                    "Succeeded",
                                                    "Cancelled",
                                                    "Failed"
                                                ],
                                                "type": "string"
                                            },
                                            "StepProgress": {
                                                "description": "The percent progress from the currently executing step.  This value shall be null if progress is not available",
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "StepStatus": {
                                                "description": "The status text from the currently executing step",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "Steps": {
                                        "description": "Read Only. The steps to be executed for the activity.  These steps come from the relationship through JobActivity down to ActivityStep",
                                        "items": {
                                            "description": "A DTO for an IActivityStep",
                                            "properties": {
                                                "ActivityID": {
                                                    "description": "The id of the activity this activity step belongs to",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "ActivityStepID": {
                                                    "description": "The id of this activity step",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "ImplementationID": {
                                                    "description": "The implementation id which is used to look up the step implementation",
                                                    "type": "string"
                                                },
                                                "ParameterMappings": {
                                                    "description": "The mapping of values from a source to be used for the step parameters",
                                                    "items": {
                                                        "description": "A DTO for an IParameterMapping",
                                                        "properties": {
                                                            "Name": {
                                                                "description": "The name of the parameter this mapping applies to",
                                                                "type": "string"
                                                            },
                                                            "Source": {
                                                                "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                "type": "string"
                                                            },
                                                            "SourceType": {
                                                                "description": "The source type used for supplying the parameter",
                                                                "enum": [
                                                                    "Constant",
                                                                    "Variable"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "readOnly": true,
                                                    "type": "array"
                                                },
                                                "RunOrder": {
                                                    "description": "The order of this activity step relative to other activity steps",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "StepID": {
                                                    "description": "The id of the step",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "StepName": {
                                                    "description": "The name of the step",
                                                    "type": "string"
                                                },
                                                "UseConfig": {
                                                    "description": "Indicates the configuration for the ActivityStep to use at runtime.  The build agent must provide this configuration",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "Status"
                                ],
                                "type": "object"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "description": "A DTO for an IActivityRun",
                                "properties": {
                                    "ActivityRunID": {
                                        "description": "The identifier for the ActivityRun",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "EndDate": {
                                        "description": "Read Only. The UTC date and time when the activity completed",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "JobActivityID": {
                                        "description": "Read Only. The ID of the Job Activity that defines this activity run",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "JobRunID": {
                                        "description": "Read Only. The ID of the JobRun under which this ActivityRun is executing",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Parameters": {
                                        "description": "The parameters used for this run of the activity.  Parameters cannot be added or removed, but output parameter values may be updated.",
                                        "items": {
                                            "description": "A DTO for an IParameterValue",
                                            "properties": {
                                                "Direction": {
                                                    "description": "The parameter direction (Input or Output)",
                                                    "enum": [
                                                        "Input",
                                                        "Output"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name of the parameter this value is for",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "The parameter value in string representation",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    },
                                    "StartDate": {
                                        "description": "Read Only. The UTC date and time when the activity started",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Status": {
                                        "description": "The status of this ActivityRun",
                                        "properties": {
                                            "CurrentStep": {
                                                "description": "The activity step currently executing, indicated by numeric order",
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "Status": {
                                                "description": "The status of the ActivityRun",
                                                "enum": [
                                                    "Ready",
                                                    "InProgress",
                                                    "Succeeded",
                                                    "Cancelled",
                                                    "Failed"
                                                ],
                                                "type": "string"
                                            },
                                            "StepProgress": {
                                                "description": "The percent progress from the currently executing step.  This value shall be null if progress is not available",
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "StepStatus": {
                                                "description": "The status text from the currently executing step",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "Steps": {
                                        "description": "Read Only. The steps to be executed for the activity.  These steps come from the relationship through JobActivity down to ActivityStep",
                                        "items": {
                                            "description": "A DTO for an IActivityStep",
                                            "properties": {
                                                "ActivityID": {
                                                    "description": "The id of the activity this activity step belongs to",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "ActivityStepID": {
                                                    "description": "The id of this activity step",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "ImplementationID": {
                                                    "description": "The implementation id which is used to look up the step implementation",
                                                    "type": "string"
                                                },
                                                "ParameterMappings": {
                                                    "description": "The mapping of values from a source to be used for the step parameters",
                                                    "items": {
                                                        "description": "A DTO for an IParameterMapping",
                                                        "properties": {
                                                            "Name": {
                                                                "description": "The name of the parameter this mapping applies to",
                                                                "type": "string"
                                                            },
                                                            "Source": {
                                                                "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                "type": "string"
                                                            },
                                                            "SourceType": {
                                                                "description": "The source type used for supplying the parameter",
                                                                "enum": [
                                                                    "Constant",
                                                                    "Variable"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "readOnly": true,
                                                    "type": "array"
                                                },
                                                "RunOrder": {
                                                    "description": "The order of this activity step relative to other activity steps",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "StepID": {
                                                    "description": "The id of the step",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "StepName": {
                                                    "description": "The name of the step",
                                                    "type": "string"
                                                },
                                                "UseConfig": {
                                                    "description": "Indicates the configuration for the ActivityStep to use at runtime.  The build agent must provide this configuration",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "Status"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The updated ActivityRun.",
                    "required": true
                }
            }
        },
        "/api/v2/activityRuns/{activityRunID}/status": {
            "get": {
                "deprecated": false,
                "description": "Gets the ActivityRunStatus of an ActivityRun.  When successful, the response is the requested ActivityRunStatus.\r\n            If unsuccessful, an appropriate ApiError is returned.",
                "operationId": "ActivityRuns_GetActivityRunStatus",
                "parameters": [
                    {
                        "description": "The ID of the ActivityRun to get ActivityRunStatus for.",
                        "in": "path",
                        "name": "activityRunID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "A DTO for an IActivityRunStatus",
                                    "properties": {
                                        "CurrentStep": {
                                            "description": "The activity step currently executing, indicated by numeric order",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Status": {
                                            "description": "The status of the ActivityRun",
                                            "enum": [
                                                "Ready",
                                                "InProgress",
                                                "Succeeded",
                                                "Cancelled",
                                                "Failed"
                                            ],
                                            "type": "string"
                                        },
                                        "StepProgress": {
                                            "description": "The percent progress from the currently executing step.  This value shall be null if progress is not available",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "StepStatus": {
                                            "description": "The status text from the currently executing step",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "description": "A DTO for an IActivityRunStatus",
                                    "properties": {
                                        "CurrentStep": {
                                            "description": "The activity step currently executing, indicated by numeric order",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Status": {
                                            "description": "The status of the ActivityRun",
                                            "enum": [
                                                "Ready",
                                                "InProgress",
                                                "Succeeded",
                                                "Cancelled",
                                                "Failed"
                                            ],
                                            "type": "string"
                                        },
                                        "StepProgress": {
                                            "description": "The percent progress from the currently executing step.  This value shall be null if progress is not available",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "StepStatus": {
                                            "description": "The status text from the currently executing step",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "description": "A DTO for an IActivityRunStatus",
                                    "properties": {
                                        "CurrentStep": {
                                            "description": "The activity step currently executing, indicated by numeric order",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Status": {
                                            "description": "The status of the ActivityRun",
                                            "enum": [
                                                "Ready",
                                                "InProgress",
                                                "Succeeded",
                                                "Cancelled",
                                                "Failed"
                                            ],
                                            "type": "string"
                                        },
                                        "StepProgress": {
                                            "description": "The percent progress from the currently executing step.  This value shall be null if progress is not available",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "StepStatus": {
                                            "description": "The status text from the currently executing step",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "description": "A DTO for an IActivityRunStatus",
                                    "properties": {
                                        "CurrentStep": {
                                            "description": "The activity step currently executing, indicated by numeric order",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Status": {
                                            "description": "The status of the ActivityRun",
                                            "enum": [
                                                "Ready",
                                                "InProgress",
                                                "Succeeded",
                                                "Cancelled",
                                                "Failed"
                                            ],
                                            "type": "string"
                                        },
                                        "StepProgress": {
                                            "description": "The percent progress from the currently executing step.  This value shall be null if progress is not available",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "StepStatus": {
                                            "description": "The status text from the currently executing step",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get the ActivityRunStatus of an ActivityRun",
                "tags": [
                    "ActivityRuns"
                ]
            },
            "put": {
                "deprecated": false,
                "description": "Updates the ActivityRunStatus of an ActivityRun.  The body of the PUT is the updated ActivityRunStatus.\r\n            When successful, the response is empty.  If unsuccessful, an appropriate ApiError is returned.",
                "operationId": "ActivityRuns_PutActivityRunStatus",
                "parameters": [
                    {
                        "description": "The ID of the ActivityRun to update ActivityRunStatus for.",
                        "in": "path",
                        "name": "activityRunID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Update the ActivityRunStatus of an ActivityRun",
                "tags": [
                    "ActivityRuns"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "A DTO for an IActivityRunStatus",
                                "properties": {
                                    "CurrentStep": {
                                        "description": "The activity step currently executing, indicated by numeric order",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Status": {
                                        "description": "The status of the ActivityRun",
                                        "enum": [
                                            "Ready",
                                            "InProgress",
                                            "Succeeded",
                                            "Cancelled",
                                            "Failed"
                                        ],
                                        "type": "string"
                                    },
                                    "StepProgress": {
                                        "description": "The percent progress from the currently executing step.  This value shall be null if progress is not available",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "StepStatus": {
                                        "description": "The status text from the currently executing step",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "description": "A DTO for an IActivityRunStatus",
                                "properties": {
                                    "CurrentStep": {
                                        "description": "The activity step currently executing, indicated by numeric order",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Status": {
                                        "description": "The status of the ActivityRun",
                                        "enum": [
                                            "Ready",
                                            "InProgress",
                                            "Succeeded",
                                            "Cancelled",
                                            "Failed"
                                        ],
                                        "type": "string"
                                    },
                                    "StepProgress": {
                                        "description": "The percent progress from the currently executing step.  This value shall be null if progress is not available",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "StepStatus": {
                                        "description": "The status text from the currently executing step",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "description": "A DTO for an IActivityRunStatus",
                                "properties": {
                                    "CurrentStep": {
                                        "description": "The activity step currently executing, indicated by numeric order",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Status": {
                                        "description": "The status of the ActivityRun",
                                        "enum": [
                                            "Ready",
                                            "InProgress",
                                            "Succeeded",
                                            "Cancelled",
                                            "Failed"
                                        ],
                                        "type": "string"
                                    },
                                    "StepProgress": {
                                        "description": "The percent progress from the currently executing step.  This value shall be null if progress is not available",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "StepStatus": {
                                        "description": "The status text from the currently executing step",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "text/xml": {
                            "schema": {
                                "description": "A DTO for an IActivityRunStatus",
                                "properties": {
                                    "CurrentStep": {
                                        "description": "The activity step currently executing, indicated by numeric order",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Status": {
                                        "description": "The status of the ActivityRun",
                                        "enum": [
                                            "Ready",
                                            "InProgress",
                                            "Succeeded",
                                            "Cancelled",
                                            "Failed"
                                        ],
                                        "type": "string"
                                    },
                                    "StepProgress": {
                                        "description": "The percent progress from the currently executing step.  This value shall be null if progress is not available",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "StepStatus": {
                                        "description": "The status text from the currently executing step",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "description": "A DTO for an IActivityRunStatus",
                                "properties": {
                                    "CurrentStep": {
                                        "description": "The activity step currently executing, indicated by numeric order",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Status": {
                                        "description": "The status of the ActivityRun",
                                        "enum": [
                                            "Ready",
                                            "InProgress",
                                            "Succeeded",
                                            "Cancelled",
                                            "Failed"
                                        ],
                                        "type": "string"
                                    },
                                    "StepProgress": {
                                        "description": "The percent progress from the currently executing step.  This value shall be null if progress is not available",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "StepStatus": {
                                        "description": "The status text from the currently executing step",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "description": "The updated ActivityRunStatus.",
                    "required": true
                }
            }
        },
        "/api/v2/agents": {
            "get": {
                "deprecated": false,
                "description": "Gets a collection of Agents. When successful, the response is a PagedResponse of Agents.  \r\n            If unsuccessful, an appropriate ApiError is returned.",
                "operationId": "Agents_GetAgents",
                "parameters": [
                    {
                        "description": "Optional. The page limit.  If not specified, the default page limit is 10.",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "Optional. The page offset.  If not specified, the default page offset is 0.",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "description": "A DTO for an IAgent",
                                                "properties": {
                                                    "AgentID": {
                                                        "description": "The id of the Agent",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "KeepAliveInterval": {
                                                        "description": "The 'Heartbeat Interval' used by the Build Agent.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "MachineName": {
                                                        "description": "The machine name of the computer the agent is running on",
                                                        "type": "string"
                                                    },
                                                    "Status": {
                                                        "description": "The agent status.",
                                                        "properties": {
                                                            "LastStatusUpdate": {
                                                                "description": "ReadOnly. The UTC date and time of the last status update",
                                                                "format": "date-time",
                                                                "type": "string"
                                                            },
                                                            "Online": {
                                                                "description": "Indicates if the agent is online",
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "Online"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "StepConfigurations": {
                                                        "description": "The agent's step configurations",
                                                        "items": {
                                                            "description": "Step Configuration",
                                                            "properties": {
                                                                "Configurations": {
                                                                    "description": "The configuration names supported.  The configurations collection is empty for steps which do not require configuration.",
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "StepImplementationID": {
                                                                    "description": "The Implementation ID of the step this configuration is for",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "StepImplementationID"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "readOnly": true,
                                                        "type": "array"
                                                    },
                                                    "UserID": {
                                                        "description": "The UserID of the Agent",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    }
                                                },
                                                "required": [
                                                    "UserID",
                                                    "MachineName",
                                                    "Status",
                                                    "KeepAliveInterval"
                                                ],
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "description": "A DTO for an IAgent",
                                                "properties": {
                                                    "AgentID": {
                                                        "description": "The id of the Agent",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "KeepAliveInterval": {
                                                        "description": "The 'Heartbeat Interval' used by the Build Agent.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "MachineName": {
                                                        "description": "The machine name of the computer the agent is running on",
                                                        "type": "string"
                                                    },
                                                    "Status": {
                                                        "description": "The agent status.",
                                                        "properties": {
                                                            "LastStatusUpdate": {
                                                                "description": "ReadOnly. The UTC date and time of the last status update",
                                                                "format": "date-time",
                                                                "type": "string"
                                                            },
                                                            "Online": {
                                                                "description": "Indicates if the agent is online",
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "Online"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "StepConfigurations": {
                                                        "description": "The agent's step configurations",
                                                        "items": {
                                                            "description": "Step Configuration",
                                                            "properties": {
                                                                "Configurations": {
                                                                    "description": "The configuration names supported.  The configurations collection is empty for steps which do not require configuration.",
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "StepImplementationID": {
                                                                    "description": "The Implementation ID of the step this configuration is for",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "StepImplementationID"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "readOnly": true,
                                                        "type": "array"
                                                    },
                                                    "UserID": {
                                                        "description": "The UserID of the Agent",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    }
                                                },
                                                "required": [
                                                    "UserID",
                                                    "MachineName",
                                                    "Status",
                                                    "KeepAliveInterval"
                                                ],
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get Agents",
                "tags": [
                    "Agents"
                ]
            },
            "post": {
                "deprecated": false,
                "description": "Creates an Agent.  The body of the POST is the Agent to create.  The AgentID will be assigned\r\n            on creation of the Agent.  When successful, the response is the AgentID.  If unsuccessful, an\r\n            appropriate ApiError is returned.",
                "operationId": "Agents_PostAgent",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Create an Agent",
                "tags": [
                    "Agents"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "A DTO for an IAgent",
                                "properties": {
                                    "AgentID": {
                                        "description": "The id of the Agent",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "KeepAliveInterval": {
                                        "description": "The 'Heartbeat Interval' used by the Build Agent.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "MachineName": {
                                        "description": "The machine name of the computer the agent is running on",
                                        "type": "string"
                                    },
                                    "Status": {
                                        "description": "The agent status.",
                                        "properties": {
                                            "LastStatusUpdate": {
                                                "description": "ReadOnly. The UTC date and time of the last status update",
                                                "format": "date-time",
                                                "type": "string"
                                            },
                                            "Online": {
                                                "description": "Indicates if the agent is online",
                                                "type": "boolean"
                                            }
                                        },
                                        "required": [
                                            "Online"
                                        ],
                                        "type": "object"
                                    },
                                    "StepConfigurations": {
                                        "description": "The agent's step configurations",
                                        "items": {
                                            "description": "Step Configuration",
                                            "properties": {
                                                "Configurations": {
                                                    "description": "The configuration names supported.  The configurations collection is empty for steps which do not require configuration.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "StepImplementationID": {
                                                    "description": "The Implementation ID of the step this configuration is for",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "StepImplementationID"
                                            ],
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    },
                                    "UserID": {
                                        "description": "The UserID of the Agent",
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "UserID",
                                    "MachineName",
                                    "Status",
                                    "KeepAliveInterval"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "description": "A DTO for an IAgent",
                                "properties": {
                                    "AgentID": {
                                        "description": "The id of the Agent",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "KeepAliveInterval": {
                                        "description": "The 'Heartbeat Interval' used by the Build Agent.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "MachineName": {
                                        "description": "The machine name of the computer the agent is running on",
                                        "type": "string"
                                    },
                                    "Status": {
                                        "description": "The agent status.",
                                        "properties": {
                                            "LastStatusUpdate": {
                                                "description": "ReadOnly. The UTC date and time of the last status update",
                                                "format": "date-time",
                                                "type": "string"
                                            },
                                            "Online": {
                                                "description": "Indicates if the agent is online",
                                                "type": "boolean"
                                            }
                                        },
                                        "required": [
                                            "Online"
                                        ],
                                        "type": "object"
                                    },
                                    "StepConfigurations": {
                                        "description": "The agent's step configurations",
                                        "items": {
                                            "description": "Step Configuration",
                                            "properties": {
                                                "Configurations": {
                                                    "description": "The configuration names supported.  The configurations collection is empty for steps which do not require configuration.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "StepImplementationID": {
                                                    "description": "The Implementation ID of the step this configuration is for",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "StepImplementationID"
                                            ],
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    },
                                    "UserID": {
                                        "description": "The UserID of the Agent",
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "UserID",
                                    "MachineName",
                                    "Status",
                                    "KeepAliveInterval"
                                ],
                                "type": "object"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "description": "A DTO for an IAgent",
                                "properties": {
                                    "AgentID": {
                                        "description": "The id of the Agent",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "KeepAliveInterval": {
                                        "description": "The 'Heartbeat Interval' used by the Build Agent.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "MachineName": {
                                        "description": "The machine name of the computer the agent is running on",
                                        "type": "string"
                                    },
                                    "Status": {
                                        "description": "The agent status.",
                                        "properties": {
                                            "LastStatusUpdate": {
                                                "description": "ReadOnly. The UTC date and time of the last status update",
                                                "format": "date-time",
                                                "type": "string"
                                            },
                                            "Online": {
                                                "description": "Indicates if the agent is online",
                                                "type": "boolean"
                                            }
                                        },
                                        "required": [
                                            "Online"
                                        ],
                                        "type": "object"
                                    },
                                    "StepConfigurations": {
                                        "description": "The agent's step configurations",
                                        "items": {
                                            "description": "Step Configuration",
                                            "properties": {
                                                "Configurations": {
                                                    "description": "The configuration names supported.  The configurations collection is empty for steps which do not require configuration.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "StepImplementationID": {
                                                    "description": "The Implementation ID of the step this configuration is for",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "StepImplementationID"
                                            ],
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    },
                                    "UserID": {
                                        "description": "The UserID of the Agent",
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "UserID",
                                    "MachineName",
                                    "Status",
                                    "KeepAliveInterval"
                                ],
                                "type": "object"
                            }
                        },
                        "text/xml": {
                            "schema": {
                                "description": "A DTO for an IAgent",
                                "properties": {
                                    "AgentID": {
                                        "description": "The id of the Agent",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "KeepAliveInterval": {
                                        "description": "The 'Heartbeat Interval' used by the Build Agent.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "MachineName": {
                                        "description": "The machine name of the computer the agent is running on",
                                        "type": "string"
                                    },
                                    "Status": {
                                        "description": "The agent status.",
                                        "properties": {
                                            "LastStatusUpdate": {
                                                "description": "ReadOnly. The UTC date and time of the last status update",
                                                "format": "date-time",
                                                "type": "string"
                                            },
                                            "Online": {
                                                "description": "Indicates if the agent is online",
                                                "type": "boolean"
                                            }
                                        },
                                        "required": [
                                            "Online"
                                        ],
                                        "type": "object"
                                    },
                                    "StepConfigurations": {
                                        "description": "The agent's step configurations",
                                        "items": {
                                            "description": "Step Configuration",
                                            "properties": {
                                                "Configurations": {
                                                    "description": "The configuration names supported.  The configurations collection is empty for steps which do not require configuration.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "StepImplementationID": {
                                                    "description": "The Implementation ID of the step this configuration is for",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "StepImplementationID"
                                            ],
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    },
                                    "UserID": {
                                        "description": "The UserID of the Agent",
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "UserID",
                                    "MachineName",
                                    "Status",
                                    "KeepAliveInterval"
                                ],
                                "type": "object"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "description": "A DTO for an IAgent",
                                "properties": {
                                    "AgentID": {
                                        "description": "The id of the Agent",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "KeepAliveInterval": {
                                        "description": "The 'Heartbeat Interval' used by the Build Agent.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "MachineName": {
                                        "description": "The machine name of the computer the agent is running on",
                                        "type": "string"
                                    },
                                    "Status": {
                                        "description": "The agent status.",
                                        "properties": {
                                            "LastStatusUpdate": {
                                                "description": "ReadOnly. The UTC date and time of the last status update",
                                                "format": "date-time",
                                                "type": "string"
                                            },
                                            "Online": {
                                                "description": "Indicates if the agent is online",
                                                "type": "boolean"
                                            }
                                        },
                                        "required": [
                                            "Online"
                                        ],
                                        "type": "object"
                                    },
                                    "StepConfigurations": {
                                        "description": "The agent's step configurations",
                                        "items": {
                                            "description": "Step Configuration",
                                            "properties": {
                                                "Configurations": {
                                                    "description": "The configuration names supported.  The configurations collection is empty for steps which do not require configuration.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "StepImplementationID": {
                                                    "description": "The Implementation ID of the step this configuration is for",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "StepImplementationID"
                                            ],
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    },
                                    "UserID": {
                                        "description": "The UserID of the Agent",
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "UserID",
                                    "MachineName",
                                    "Status",
                                    "KeepAliveInterval"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The Agent to create.  The AgentID will be assigned on creation of the Agent.",
                    "required": true
                }
            }
        },
        "/api/v2/agents/Current": {
            "get": {
                "deprecated": false,
                "description": "Gets the Agent associated with the current user. When successful, the response is the requested Agent.  If unsuccessful,\r\n            an appropriate ApiError is returned.",
                "operationId": "Agents_GetCurrentAgentAsync",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "A DTO for an IAgent",
                                    "properties": {
                                        "AgentID": {
                                            "description": "The id of the Agent",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "KeepAliveInterval": {
                                            "description": "The 'Heartbeat Interval' used by the Build Agent.",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MachineName": {
                                            "description": "The machine name of the computer the agent is running on",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "The agent status.",
                                            "properties": {
                                                "LastStatusUpdate": {
                                                    "description": "ReadOnly. The UTC date and time of the last status update",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "Online": {
                                                    "description": "Indicates if the agent is online",
                                                    "type": "boolean"
                                                }
                                            },
                                            "required": [
                                                "Online"
                                            ],
                                            "type": "object"
                                        },
                                        "StepConfigurations": {
                                            "description": "The agent's step configurations",
                                            "items": {
                                                "description": "Step Configuration",
                                                "properties": {
                                                    "Configurations": {
                                                        "description": "The configuration names supported.  The configurations collection is empty for steps which do not require configuration.",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "StepImplementationID": {
                                                        "description": "The Implementation ID of the step this configuration is for",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "StepImplementationID"
                                                ],
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "UserID": {
                                            "description": "The UserID of the Agent",
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "UserID",
                                        "MachineName",
                                        "Status",
                                        "KeepAliveInterval"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "description": "A DTO for an IAgent",
                                    "properties": {
                                        "AgentID": {
                                            "description": "The id of the Agent",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "KeepAliveInterval": {
                                            "description": "The 'Heartbeat Interval' used by the Build Agent.",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MachineName": {
                                            "description": "The machine name of the computer the agent is running on",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "The agent status.",
                                            "properties": {
                                                "LastStatusUpdate": {
                                                    "description": "ReadOnly. The UTC date and time of the last status update",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "Online": {
                                                    "description": "Indicates if the agent is online",
                                                    "type": "boolean"
                                                }
                                            },
                                            "required": [
                                                "Online"
                                            ],
                                            "type": "object"
                                        },
                                        "StepConfigurations": {
                                            "description": "The agent's step configurations",
                                            "items": {
                                                "description": "Step Configuration",
                                                "properties": {
                                                    "Configurations": {
                                                        "description": "The configuration names supported.  The configurations collection is empty for steps which do not require configuration.",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "StepImplementationID": {
                                                        "description": "The Implementation ID of the step this configuration is for",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "StepImplementationID"
                                                ],
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "UserID": {
                                            "description": "The UserID of the Agent",
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "UserID",
                                        "MachineName",
                                        "Status",
                                        "KeepAliveInterval"
                                    ],
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "description": "A DTO for an IAgent",
                                    "properties": {
                                        "AgentID": {
                                            "description": "The id of the Agent",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "KeepAliveInterval": {
                                            "description": "The 'Heartbeat Interval' used by the Build Agent.",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MachineName": {
                                            "description": "The machine name of the computer the agent is running on",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "The agent status.",
                                            "properties": {
                                                "LastStatusUpdate": {
                                                    "description": "ReadOnly. The UTC date and time of the last status update",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "Online": {
                                                    "description": "Indicates if the agent is online",
                                                    "type": "boolean"
                                                }
                                            },
                                            "required": [
                                                "Online"
                                            ],
                                            "type": "object"
                                        },
                                        "StepConfigurations": {
                                            "description": "The agent's step configurations",
                                            "items": {
                                                "description": "Step Configuration",
                                                "properties": {
                                                    "Configurations": {
                                                        "description": "The configuration names supported.  The configurations collection is empty for steps which do not require configuration.",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "StepImplementationID": {
                                                        "description": "The Implementation ID of the step this configuration is for",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "StepImplementationID"
                                                ],
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "UserID": {
                                            "description": "The UserID of the Agent",
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "UserID",
                                        "MachineName",
                                        "Status",
                                        "KeepAliveInterval"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "description": "A DTO for an IAgent",
                                    "properties": {
                                        "AgentID": {
                                            "description": "The id of the Agent",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "KeepAliveInterval": {
                                            "description": "The 'Heartbeat Interval' used by the Build Agent.",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MachineName": {
                                            "description": "The machine name of the computer the agent is running on",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "The agent status.",
                                            "properties": {
                                                "LastStatusUpdate": {
                                                    "description": "ReadOnly. The UTC date and time of the last status update",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "Online": {
                                                    "description": "Indicates if the agent is online",
                                                    "type": "boolean"
                                                }
                                            },
                                            "required": [
                                                "Online"
                                            ],
                                            "type": "object"
                                        },
                                        "StepConfigurations": {
                                            "description": "The agent's step configurations",
                                            "items": {
                                                "description": "Step Configuration",
                                                "properties": {
                                                    "Configurations": {
                                                        "description": "The configuration names supported.  The configurations collection is empty for steps which do not require configuration.",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "StepImplementationID": {
                                                        "description": "The Implementation ID of the step this configuration is for",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "StepImplementationID"
                                                ],
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "UserID": {
                                            "description": "The UserID of the Agent",
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "UserID",
                                        "MachineName",
                                        "Status",
                                        "KeepAliveInterval"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get Agent associated with the current user",
                "tags": [
                    "Agents"
                ]
            }
        },
        "/api/v2/agents/Current/ActivityRun": {
            "get": {
                "deprecated": false,
                "description": "Gets the activity run assigned to an agent.  When successful, the response is the ActivityRun\r\n            assigned to the Agent.  If unsuccessful, an appropriate ApiError is returned.",
                "operationId": "Agents_GetCurrentAgentActivityRun",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "A DTO for an IActivityRun",
                                    "properties": {
                                        "ActivityRunID": {
                                            "description": "The identifier for the ActivityRun",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "EndDate": {
                                            "description": "Read Only. The UTC date and time when the activity completed",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "JobActivityID": {
                                            "description": "Read Only. The ID of the Job Activity that defines this activity run",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "JobRunID": {
                                            "description": "Read Only. The ID of the JobRun under which this ActivityRun is executing",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Parameters": {
                                            "description": "The parameters used for this run of the activity.  Parameters cannot be added or removed, but output parameter values may be updated.",
                                            "items": {
                                                "description": "A DTO for an IParameterValue",
                                                "properties": {
                                                    "Direction": {
                                                        "description": "The parameter direction (Input or Output)",
                                                        "enum": [
                                                            "Input",
                                                            "Output"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the parameter this value is for",
                                                        "type": "string"
                                                    },
                                                    "Value": {
                                                        "description": "The parameter value in string representation",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "StartDate": {
                                            "description": "Read Only. The UTC date and time when the activity started",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "The status of this ActivityRun",
                                            "properties": {
                                                "CurrentStep": {
                                                    "description": "The activity step currently executing, indicated by numeric order",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "Status": {
                                                    "description": "The status of the ActivityRun",
                                                    "enum": [
                                                        "Ready",
                                                        "InProgress",
                                                        "Succeeded",
                                                        "Cancelled",
                                                        "Failed"
                                                    ],
                                                    "type": "string"
                                                },
                                                "StepProgress": {
                                                    "description": "The percent progress from the currently executing step.  This value shall be null if progress is not available",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "StepStatus": {
                                                    "description": "The status text from the currently executing step",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "Steps": {
                                            "description": "Read Only. The steps to be executed for the activity.  These steps come from the relationship through JobActivity down to ActivityStep",
                                            "items": {
                                                "description": "A DTO for an IActivityStep",
                                                "properties": {
                                                    "ActivityID": {
                                                        "description": "The id of the activity this activity step belongs to",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "ActivityStepID": {
                                                        "description": "The id of this activity step",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "ImplementationID": {
                                                        "description": "The implementation id which is used to look up the step implementation",
                                                        "type": "string"
                                                    },
                                                    "ParameterMappings": {
                                                        "description": "The mapping of values from a source to be used for the step parameters",
                                                        "items": {
                                                            "description": "A DTO for an IParameterMapping",
                                                            "properties": {
                                                                "Name": {
                                                                    "description": "The name of the parameter this mapping applies to",
                                                                    "type": "string"
                                                                },
                                                                "Source": {
                                                                    "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                    "type": "string"
                                                                },
                                                                "SourceType": {
                                                                    "description": "The source type used for supplying the parameter",
                                                                    "enum": [
                                                                        "Constant",
                                                                        "Variable"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "readOnly": true,
                                                        "type": "array"
                                                    },
                                                    "RunOrder": {
                                                        "description": "The order of this activity step relative to other activity steps",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "StepID": {
                                                        "description": "The id of the step",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "StepName": {
                                                        "description": "The name of the step",
                                                        "type": "string"
                                                    },
                                                    "UseConfig": {
                                                        "description": "Indicates the configuration for the ActivityStep to use at runtime.  The build agent must provide this configuration",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        }
                                    },
                                    "required": [
                                        "Status"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "description": "A DTO for an IActivityRun",
                                    "properties": {
                                        "ActivityRunID": {
                                            "description": "The identifier for the ActivityRun",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "EndDate": {
                                            "description": "Read Only. The UTC date and time when the activity completed",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "JobActivityID": {
                                            "description": "Read Only. The ID of the Job Activity that defines this activity run",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "JobRunID": {
                                            "description": "Read Only. The ID of the JobRun under which this ActivityRun is executing",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Parameters": {
                                            "description": "The parameters used for this run of the activity.  Parameters cannot be added or removed, but output parameter values may be updated.",
                                            "items": {
                                                "description": "A DTO for an IParameterValue",
                                                "properties": {
                                                    "Direction": {
                                                        "description": "The parameter direction (Input or Output)",
                                                        "enum": [
                                                            "Input",
                                                            "Output"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the parameter this value is for",
                                                        "type": "string"
                                                    },
                                                    "Value": {
                                                        "description": "The parameter value in string representation",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "StartDate": {
                                            "description": "Read Only. The UTC date and time when the activity started",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "The status of this ActivityRun",
                                            "properties": {
                                                "CurrentStep": {
                                                    "description": "The activity step currently executing, indicated by numeric order",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "Status": {
                                                    "description": "The status of the ActivityRun",
                                                    "enum": [
                                                        "Ready",
                                                        "InProgress",
                                                        "Succeeded",
                                                        "Cancelled",
                                                        "Failed"
                                                    ],
                                                    "type": "string"
                                                },
                                                "StepProgress": {
                                                    "description": "The percent progress from the currently executing step.  This value shall be null if progress is not available",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "StepStatus": {
                                                    "description": "The status text from the currently executing step",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "Steps": {
                                            "description": "Read Only. The steps to be executed for the activity.  These steps come from the relationship through JobActivity down to ActivityStep",
                                            "items": {
                                                "description": "A DTO for an IActivityStep",
                                                "properties": {
                                                    "ActivityID": {
                                                        "description": "The id of the activity this activity step belongs to",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "ActivityStepID": {
                                                        "description": "The id of this activity step",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "ImplementationID": {
                                                        "description": "The implementation id which is used to look up the step implementation",
                                                        "type": "string"
                                                    },
                                                    "ParameterMappings": {
                                                        "description": "The mapping of values from a source to be used for the step parameters",
                                                        "items": {
                                                            "description": "A DTO for an IParameterMapping",
                                                            "properties": {
                                                                "Name": {
                                                                    "description": "The name of the parameter this mapping applies to",
                                                                    "type": "string"
                                                                },
                                                                "Source": {
                                                                    "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                    "type": "string"
                                                                },
                                                                "SourceType": {
                                                                    "description": "The source type used for supplying the parameter",
                                                                    "enum": [
                                                                        "Constant",
                                                                        "Variable"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "readOnly": true,
                                                        "type": "array"
                                                    },
                                                    "RunOrder": {
                                                        "description": "The order of this activity step relative to other activity steps",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "StepID": {
                                                        "description": "The id of the step",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "StepName": {
                                                        "description": "The name of the step",
                                                        "type": "string"
                                                    },
                                                    "UseConfig": {
                                                        "description": "Indicates the configuration for the ActivityStep to use at runtime.  The build agent must provide this configuration",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        }
                                    },
                                    "required": [
                                        "Status"
                                    ],
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "description": "A DTO for an IActivityRun",
                                    "properties": {
                                        "ActivityRunID": {
                                            "description": "The identifier for the ActivityRun",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "EndDate": {
                                            "description": "Read Only. The UTC date and time when the activity completed",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "JobActivityID": {
                                            "description": "Read Only. The ID of the Job Activity that defines this activity run",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "JobRunID": {
                                            "description": "Read Only. The ID of the JobRun under which this ActivityRun is executing",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Parameters": {
                                            "description": "The parameters used for this run of the activity.  Parameters cannot be added or removed, but output parameter values may be updated.",
                                            "items": {
                                                "description": "A DTO for an IParameterValue",
                                                "properties": {
                                                    "Direction": {
                                                        "description": "The parameter direction (Input or Output)",
                                                        "enum": [
                                                            "Input",
                                                            "Output"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the parameter this value is for",
                                                        "type": "string"
                                                    },
                                                    "Value": {
                                                        "description": "The parameter value in string representation",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "StartDate": {
                                            "description": "Read Only. The UTC date and time when the activity started",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "The status of this ActivityRun",
                                            "properties": {
                                                "CurrentStep": {
                                                    "description": "The activity step currently executing, indicated by numeric order",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "Status": {
                                                    "description": "The status of the ActivityRun",
                                                    "enum": [
                                                        "Ready",
                                                        "InProgress",
                                                        "Succeeded",
                                                        "Cancelled",
                                                        "Failed"
                                                    ],
                                                    "type": "string"
                                                },
                                                "StepProgress": {
                                                    "description": "The percent progress from the currently executing step.  This value shall be null if progress is not available",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "StepStatus": {
                                                    "description": "The status text from the currently executing step",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "Steps": {
                                            "description": "Read Only. The steps to be executed for the activity.  These steps come from the relationship through JobActivity down to ActivityStep",
                                            "items": {
                                                "description": "A DTO for an IActivityStep",
                                                "properties": {
                                                    "ActivityID": {
                                                        "description": "The id of the activity this activity step belongs to",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "ActivityStepID": {
                                                        "description": "The id of this activity step",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "ImplementationID": {
                                                        "description": "The implementation id which is used to look up the step implementation",
                                                        "type": "string"
                                                    },
                                                    "ParameterMappings": {
                                                        "description": "The mapping of values from a source to be used for the step parameters",
                                                        "items": {
                                                            "description": "A DTO for an IParameterMapping",
                                                            "properties": {
                                                                "Name": {
                                                                    "description": "The name of the parameter this mapping applies to",
                                                                    "type": "string"
                                                                },
                                                                "Source": {
                                                                    "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                    "type": "string"
                                                                },
                                                                "SourceType": {
                                                                    "description": "The source type used for supplying the parameter",
                                                                    "enum": [
                                                                        "Constant",
                                                                        "Variable"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "readOnly": true,
                                                        "type": "array"
                                                    },
                                                    "RunOrder": {
                                                        "description": "The order of this activity step relative to other activity steps",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "StepID": {
                                                        "description": "The id of the step",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "StepName": {
                                                        "description": "The name of the step",
                                                        "type": "string"
                                                    },
                                                    "UseConfig": {
                                                        "description": "Indicates the configuration for the ActivityStep to use at runtime.  The build agent must provide this configuration",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        }
                                    },
                                    "required": [
                                        "Status"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "description": "A DTO for an IActivityRun",
                                    "properties": {
                                        "ActivityRunID": {
                                            "description": "The identifier for the ActivityRun",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "EndDate": {
                                            "description": "Read Only. The UTC date and time when the activity completed",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "JobActivityID": {
                                            "description": "Read Only. The ID of the Job Activity that defines this activity run",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "JobRunID": {
                                            "description": "Read Only. The ID of the JobRun under which this ActivityRun is executing",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Parameters": {
                                            "description": "The parameters used for this run of the activity.  Parameters cannot be added or removed, but output parameter values may be updated.",
                                            "items": {
                                                "description": "A DTO for an IParameterValue",
                                                "properties": {
                                                    "Direction": {
                                                        "description": "The parameter direction (Input or Output)",
                                                        "enum": [
                                                            "Input",
                                                            "Output"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the parameter this value is for",
                                                        "type": "string"
                                                    },
                                                    "Value": {
                                                        "description": "The parameter value in string representation",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "StartDate": {
                                            "description": "Read Only. The UTC date and time when the activity started",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "The status of this ActivityRun",
                                            "properties": {
                                                "CurrentStep": {
                                                    "description": "The activity step currently executing, indicated by numeric order",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "Status": {
                                                    "description": "The status of the ActivityRun",
                                                    "enum": [
                                                        "Ready",
                                                        "InProgress",
                                                        "Succeeded",
                                                        "Cancelled",
                                                        "Failed"
                                                    ],
                                                    "type": "string"
                                                },
                                                "StepProgress": {
                                                    "description": "The percent progress from the currently executing step.  This value shall be null if progress is not available",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "StepStatus": {
                                                    "description": "The status text from the currently executing step",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "Steps": {
                                            "description": "Read Only. The steps to be executed for the activity.  These steps come from the relationship through JobActivity down to ActivityStep",
                                            "items": {
                                                "description": "A DTO for an IActivityStep",
                                                "properties": {
                                                    "ActivityID": {
                                                        "description": "The id of the activity this activity step belongs to",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "ActivityStepID": {
                                                        "description": "The id of this activity step",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "ImplementationID": {
                                                        "description": "The implementation id which is used to look up the step implementation",
                                                        "type": "string"
                                                    },
                                                    "ParameterMappings": {
                                                        "description": "The mapping of values from a source to be used for the step parameters",
                                                        "items": {
                                                            "description": "A DTO for an IParameterMapping",
                                                            "properties": {
                                                                "Name": {
                                                                    "description": "The name of the parameter this mapping applies to",
                                                                    "type": "string"
                                                                },
                                                                "Source": {
                                                                    "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                    "type": "string"
                                                                },
                                                                "SourceType": {
                                                                    "description": "The source type used for supplying the parameter",
                                                                    "enum": [
                                                                        "Constant",
                                                                        "Variable"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "readOnly": true,
                                                        "type": "array"
                                                    },
                                                    "RunOrder": {
                                                        "description": "The order of this activity step relative to other activity steps",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "StepID": {
                                                        "description": "The id of the step",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "StepName": {
                                                        "description": "The name of the step",
                                                        "type": "string"
                                                    },
                                                    "UseConfig": {
                                                        "description": "Indicates the configuration for the ActivityStep to use at runtime.  The build agent must provide this configuration",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        }
                                    },
                                    "required": [
                                        "Status"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get the ActivityRun of Agent associated with the current user",
                "tags": [
                    "Agents"
                ]
            }
        },
        "/api/v2/agents/{agentID}": {
            "delete": {
                "deprecated": false,
                "description": "Deletes an Agent. When successful, the response is empty.  If unsuccessful, an appropriate\r\n            ApiError is returned.",
                "operationId": "Agents_DeleteAgent",
                "parameters": [
                    {
                        "description": "The id of the Agent to delete.",
                        "in": "path",
                        "name": "agentID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Delete an Agent",
                "tags": [
                    "Agents"
                ]
            },
            "get": {
                "deprecated": false,
                "description": "Gets an Agent by ID. When successful, the response is the requested Agent.  If unsuccessful,\r\n            an appropriate ApiError is returned.",
                "operationId": "Agents_GetAgentAsync",
                "parameters": [
                    {
                        "description": "The id of the Agent to get.",
                        "in": "path",
                        "name": "agentID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "A DTO for an IAgent",
                                    "properties": {
                                        "AgentID": {
                                            "description": "The id of the Agent",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "KeepAliveInterval": {
                                            "description": "The 'Heartbeat Interval' used by the Build Agent.",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MachineName": {
                                            "description": "The machine name of the computer the agent is running on",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "The agent status.",
                                            "properties": {
                                                "LastStatusUpdate": {
                                                    "description": "ReadOnly. The UTC date and time of the last status update",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "Online": {
                                                    "description": "Indicates if the agent is online",
                                                    "type": "boolean"
                                                }
                                            },
                                            "required": [
                                                "Online"
                                            ],
                                            "type": "object"
                                        },
                                        "StepConfigurations": {
                                            "description": "The agent's step configurations",
                                            "items": {
                                                "description": "Step Configuration",
                                                "properties": {
                                                    "Configurations": {
                                                        "description": "The configuration names supported.  The configurations collection is empty for steps which do not require configuration.",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "StepImplementationID": {
                                                        "description": "The Implementation ID of the step this configuration is for",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "StepImplementationID"
                                                ],
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "UserID": {
                                            "description": "The UserID of the Agent",
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "UserID",
                                        "MachineName",
                                        "Status",
                                        "KeepAliveInterval"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "description": "A DTO for an IAgent",
                                    "properties": {
                                        "AgentID": {
                                            "description": "The id of the Agent",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "KeepAliveInterval": {
                                            "description": "The 'Heartbeat Interval' used by the Build Agent.",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MachineName": {
                                            "description": "The machine name of the computer the agent is running on",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "The agent status.",
                                            "properties": {
                                                "LastStatusUpdate": {
                                                    "description": "ReadOnly. The UTC date and time of the last status update",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "Online": {
                                                    "description": "Indicates if the agent is online",
                                                    "type": "boolean"
                                                }
                                            },
                                            "required": [
                                                "Online"
                                            ],
                                            "type": "object"
                                        },
                                        "StepConfigurations": {
                                            "description": "The agent's step configurations",
                                            "items": {
                                                "description": "Step Configuration",
                                                "properties": {
                                                    "Configurations": {
                                                        "description": "The configuration names supported.  The configurations collection is empty for steps which do not require configuration.",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "StepImplementationID": {
                                                        "description": "The Implementation ID of the step this configuration is for",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "StepImplementationID"
                                                ],
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "UserID": {
                                            "description": "The UserID of the Agent",
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "UserID",
                                        "MachineName",
                                        "Status",
                                        "KeepAliveInterval"
                                    ],
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "description": "A DTO for an IAgent",
                                    "properties": {
                                        "AgentID": {
                                            "description": "The id of the Agent",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "KeepAliveInterval": {
                                            "description": "The 'Heartbeat Interval' used by the Build Agent.",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MachineName": {
                                            "description": "The machine name of the computer the agent is running on",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "The agent status.",
                                            "properties": {
                                                "LastStatusUpdate": {
                                                    "description": "ReadOnly. The UTC date and time of the last status update",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "Online": {
                                                    "description": "Indicates if the agent is online",
                                                    "type": "boolean"
                                                }
                                            },
                                            "required": [
                                                "Online"
                                            ],
                                            "type": "object"
                                        },
                                        "StepConfigurations": {
                                            "description": "The agent's step configurations",
                                            "items": {
                                                "description": "Step Configuration",
                                                "properties": {
                                                    "Configurations": {
                                                        "description": "The configuration names supported.  The configurations collection is empty for steps which do not require configuration.",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "StepImplementationID": {
                                                        "description": "The Implementation ID of the step this configuration is for",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "StepImplementationID"
                                                ],
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "UserID": {
                                            "description": "The UserID of the Agent",
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "UserID",
                                        "MachineName",
                                        "Status",
                                        "KeepAliveInterval"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "description": "A DTO for an IAgent",
                                    "properties": {
                                        "AgentID": {
                                            "description": "The id of the Agent",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "KeepAliveInterval": {
                                            "description": "The 'Heartbeat Interval' used by the Build Agent.",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MachineName": {
                                            "description": "The machine name of the computer the agent is running on",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "The agent status.",
                                            "properties": {
                                                "LastStatusUpdate": {
                                                    "description": "ReadOnly. The UTC date and time of the last status update",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "Online": {
                                                    "description": "Indicates if the agent is online",
                                                    "type": "boolean"
                                                }
                                            },
                                            "required": [
                                                "Online"
                                            ],
                                            "type": "object"
                                        },
                                        "StepConfigurations": {
                                            "description": "The agent's step configurations",
                                            "items": {
                                                "description": "Step Configuration",
                                                "properties": {
                                                    "Configurations": {
                                                        "description": "The configuration names supported.  The configurations collection is empty for steps which do not require configuration.",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "StepImplementationID": {
                                                        "description": "The Implementation ID of the step this configuration is for",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "StepImplementationID"
                                                ],
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "UserID": {
                                            "description": "The UserID of the Agent",
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "UserID",
                                        "MachineName",
                                        "Status",
                                        "KeepAliveInterval"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get Agent",
                "tags": [
                    "Agents"
                ]
            },
            "put": {
                "deprecated": false,
                "description": "Updates an Agent.  The body of the PUT is the updated Agent.  When successful, the response is empty.\r\n            If unsuccessful, an appropriate ApiError is returned.",
                "operationId": "Agents_PutAgent",
                "parameters": [
                    {
                        "description": "The id of the Agent to update.",
                        "in": "path",
                        "name": "agentID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Update an Agent",
                "tags": [
                    "Agents"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "A DTO for an IAgent",
                                "properties": {
                                    "AgentID": {
                                        "description": "The id of the Agent",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "KeepAliveInterval": {
                                        "description": "The 'Heartbeat Interval' used by the Build Agent.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "MachineName": {
                                        "description": "The machine name of the computer the agent is running on",
                                        "type": "string"
                                    },
                                    "Status": {
                                        "description": "The agent status.",
                                        "properties": {
                                            "LastStatusUpdate": {
                                                "description": "ReadOnly. The UTC date and time of the last status update",
                                                "format": "date-time",
                                                "type": "string"
                                            },
                                            "Online": {
                                                "description": "Indicates if the agent is online",
                                                "type": "boolean"
                                            }
                                        },
                                        "required": [
                                            "Online"
                                        ],
                                        "type": "object"
                                    },
                                    "StepConfigurations": {
                                        "description": "The agent's step configurations",
                                        "items": {
                                            "description": "Step Configuration",
                                            "properties": {
                                                "Configurations": {
                                                    "description": "The configuration names supported.  The configurations collection is empty for steps which do not require configuration.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "StepImplementationID": {
                                                    "description": "The Implementation ID of the step this configuration is for",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "StepImplementationID"
                                            ],
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    },
                                    "UserID": {
                                        "description": "The UserID of the Agent",
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "UserID",
                                    "MachineName",
                                    "Status",
                                    "KeepAliveInterval"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "description": "A DTO for an IAgent",
                                "properties": {
                                    "AgentID": {
                                        "description": "The id of the Agent",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "KeepAliveInterval": {
                                        "description": "The 'Heartbeat Interval' used by the Build Agent.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "MachineName": {
                                        "description": "The machine name of the computer the agent is running on",
                                        "type": "string"
                                    },
                                    "Status": {
                                        "description": "The agent status.",
                                        "properties": {
                                            "LastStatusUpdate": {
                                                "description": "ReadOnly. The UTC date and time of the last status update",
                                                "format": "date-time",
                                                "type": "string"
                                            },
                                            "Online": {
                                                "description": "Indicates if the agent is online",
                                                "type": "boolean"
                                            }
                                        },
                                        "required": [
                                            "Online"
                                        ],
                                        "type": "object"
                                    },
                                    "StepConfigurations": {
                                        "description": "The agent's step configurations",
                                        "items": {
                                            "description": "Step Configuration",
                                            "properties": {
                                                "Configurations": {
                                                    "description": "The configuration names supported.  The configurations collection is empty for steps which do not require configuration.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "StepImplementationID": {
                                                    "description": "The Implementation ID of the step this configuration is for",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "StepImplementationID"
                                            ],
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    },
                                    "UserID": {
                                        "description": "The UserID of the Agent",
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "UserID",
                                    "MachineName",
                                    "Status",
                                    "KeepAliveInterval"
                                ],
                                "type": "object"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "description": "A DTO for an IAgent",
                                "properties": {
                                    "AgentID": {
                                        "description": "The id of the Agent",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "KeepAliveInterval": {
                                        "description": "The 'Heartbeat Interval' used by the Build Agent.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "MachineName": {
                                        "description": "The machine name of the computer the agent is running on",
                                        "type": "string"
                                    },
                                    "Status": {
                                        "description": "The agent status.",
                                        "properties": {
                                            "LastStatusUpdate": {
                                                "description": "ReadOnly. The UTC date and time of the last status update",
                                                "format": "date-time",
                                                "type": "string"
                                            },
                                            "Online": {
                                                "description": "Indicates if the agent is online",
                                                "type": "boolean"
                                            }
                                        },
                                        "required": [
                                            "Online"
                                        ],
                                        "type": "object"
                                    },
                                    "StepConfigurations": {
                                        "description": "The agent's step configurations",
                                        "items": {
                                            "description": "Step Configuration",
                                            "properties": {
                                                "Configurations": {
                                                    "description": "The configuration names supported.  The configurations collection is empty for steps which do not require configuration.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "StepImplementationID": {
                                                    "description": "The Implementation ID of the step this configuration is for",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "StepImplementationID"
                                            ],
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    },
                                    "UserID": {
                                        "description": "The UserID of the Agent",
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "UserID",
                                    "MachineName",
                                    "Status",
                                    "KeepAliveInterval"
                                ],
                                "type": "object"
                            }
                        },
                        "text/xml": {
                            "schema": {
                                "description": "A DTO for an IAgent",
                                "properties": {
                                    "AgentID": {
                                        "description": "The id of the Agent",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "KeepAliveInterval": {
                                        "description": "The 'Heartbeat Interval' used by the Build Agent.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "MachineName": {
                                        "description": "The machine name of the computer the agent is running on",
                                        "type": "string"
                                    },
                                    "Status": {
                                        "description": "The agent status.",
                                        "properties": {
                                            "LastStatusUpdate": {
                                                "description": "ReadOnly. The UTC date and time of the last status update",
                                                "format": "date-time",
                                                "type": "string"
                                            },
                                            "Online": {
                                                "description": "Indicates if the agent is online",
                                                "type": "boolean"
                                            }
                                        },
                                        "required": [
                                            "Online"
                                        ],
                                        "type": "object"
                                    },
                                    "StepConfigurations": {
                                        "description": "The agent's step configurations",
                                        "items": {
                                            "description": "Step Configuration",
                                            "properties": {
                                                "Configurations": {
                                                    "description": "The configuration names supported.  The configurations collection is empty for steps which do not require configuration.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "StepImplementationID": {
                                                    "description": "The Implementation ID of the step this configuration is for",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "StepImplementationID"
                                            ],
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    },
                                    "UserID": {
                                        "description": "The UserID of the Agent",
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "UserID",
                                    "MachineName",
                                    "Status",
                                    "KeepAliveInterval"
                                ],
                                "type": "object"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "description": "A DTO for an IAgent",
                                "properties": {
                                    "AgentID": {
                                        "description": "The id of the Agent",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "KeepAliveInterval": {
                                        "description": "The 'Heartbeat Interval' used by the Build Agent.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "MachineName": {
                                        "description": "The machine name of the computer the agent is running on",
                                        "type": "string"
                                    },
                                    "Status": {
                                        "description": "The agent status.",
                                        "properties": {
                                            "LastStatusUpdate": {
                                                "description": "ReadOnly. The UTC date and time of the last status update",
                                                "format": "date-time",
                                                "type": "string"
                                            },
                                            "Online": {
                                                "description": "Indicates if the agent is online",
                                                "type": "boolean"
                                            }
                                        },
                                        "required": [
                                            "Online"
                                        ],
                                        "type": "object"
                                    },
                                    "StepConfigurations": {
                                        "description": "The agent's step configurations",
                                        "items": {
                                            "description": "Step Configuration",
                                            "properties": {
                                                "Configurations": {
                                                    "description": "The configuration names supported.  The configurations collection is empty for steps which do not require configuration.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "StepImplementationID": {
                                                    "description": "The Implementation ID of the step this configuration is for",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "StepImplementationID"
                                            ],
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    },
                                    "UserID": {
                                        "description": "The UserID of the Agent",
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "UserID",
                                    "MachineName",
                                    "Status",
                                    "KeepAliveInterval"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The updated Agent",
                    "required": true
                }
            }
        },
        "/api/v2/agents/{agentID}/ActivityRun": {
            "get": {
                "deprecated": false,
                "description": "Gets the activity run assigned to an agent.  When successful, the response is the ActivityRun\r\n            assigned to the Agent.  If unsuccessful, an appropriate ApiError is returned.",
                "operationId": "Agents_GetAgentActivityRun",
                "parameters": [
                    {
                        "description": "The id of the Agent to get.",
                        "in": "path",
                        "name": "agentID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "A DTO for an IActivityRun",
                                    "properties": {
                                        "ActivityRunID": {
                                            "description": "The identifier for the ActivityRun",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "EndDate": {
                                            "description": "Read Only. The UTC date and time when the activity completed",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "JobActivityID": {
                                            "description": "Read Only. The ID of the Job Activity that defines this activity run",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "JobRunID": {
                                            "description": "Read Only. The ID of the JobRun under which this ActivityRun is executing",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Parameters": {
                                            "description": "The parameters used for this run of the activity.  Parameters cannot be added or removed, but output parameter values may be updated.",
                                            "items": {
                                                "description": "A DTO for an IParameterValue",
                                                "properties": {
                                                    "Direction": {
                                                        "description": "The parameter direction (Input or Output)",
                                                        "enum": [
                                                            "Input",
                                                            "Output"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the parameter this value is for",
                                                        "type": "string"
                                                    },
                                                    "Value": {
                                                        "description": "The parameter value in string representation",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "StartDate": {
                                            "description": "Read Only. The UTC date and time when the activity started",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "The status of this ActivityRun",
                                            "properties": {
                                                "CurrentStep": {
                                                    "description": "The activity step currently executing, indicated by numeric order",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "Status": {
                                                    "description": "The status of the ActivityRun",
                                                    "enum": [
                                                        "Ready",
                                                        "InProgress",
                                                        "Succeeded",
                                                        "Cancelled",
                                                        "Failed"
                                                    ],
                                                    "type": "string"
                                                },
                                                "StepProgress": {
                                                    "description": "The percent progress from the currently executing step.  This value shall be null if progress is not available",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "StepStatus": {
                                                    "description": "The status text from the currently executing step",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "Steps": {
                                            "description": "Read Only. The steps to be executed for the activity.  These steps come from the relationship through JobActivity down to ActivityStep",
                                            "items": {
                                                "description": "A DTO for an IActivityStep",
                                                "properties": {
                                                    "ActivityID": {
                                                        "description": "The id of the activity this activity step belongs to",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "ActivityStepID": {
                                                        "description": "The id of this activity step",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "ImplementationID": {
                                                        "description": "The implementation id which is used to look up the step implementation",
                                                        "type": "string"
                                                    },
                                                    "ParameterMappings": {
                                                        "description": "The mapping of values from a source to be used for the step parameters",
                                                        "items": {
                                                            "description": "A DTO for an IParameterMapping",
                                                            "properties": {
                                                                "Name": {
                                                                    "description": "The name of the parameter this mapping applies to",
                                                                    "type": "string"
                                                                },
                                                                "Source": {
                                                                    "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                    "type": "string"
                                                                },
                                                                "SourceType": {
                                                                    "description": "The source type used for supplying the parameter",
                                                                    "enum": [
                                                                        "Constant",
                                                                        "Variable"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "readOnly": true,
                                                        "type": "array"
                                                    },
                                                    "RunOrder": {
                                                        "description": "The order of this activity step relative to other activity steps",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "StepID": {
                                                        "description": "The id of the step",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "StepName": {
                                                        "description": "The name of the step",
                                                        "type": "string"
                                                    },
                                                    "UseConfig": {
                                                        "description": "Indicates the configuration for the ActivityStep to use at runtime.  The build agent must provide this configuration",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        }
                                    },
                                    "required": [
                                        "Status"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "description": "A DTO for an IActivityRun",
                                    "properties": {
                                        "ActivityRunID": {
                                            "description": "The identifier for the ActivityRun",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "EndDate": {
                                            "description": "Read Only. The UTC date and time when the activity completed",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "JobActivityID": {
                                            "description": "Read Only. The ID of the Job Activity that defines this activity run",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "JobRunID": {
                                            "description": "Read Only. The ID of the JobRun under which this ActivityRun is executing",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Parameters": {
                                            "description": "The parameters used for this run of the activity.  Parameters cannot be added or removed, but output parameter values may be updated.",
                                            "items": {
                                                "description": "A DTO for an IParameterValue",
                                                "properties": {
                                                    "Direction": {
                                                        "description": "The parameter direction (Input or Output)",
                                                        "enum": [
                                                            "Input",
                                                            "Output"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the parameter this value is for",
                                                        "type": "string"
                                                    },
                                                    "Value": {
                                                        "description": "The parameter value in string representation",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "StartDate": {
                                            "description": "Read Only. The UTC date and time when the activity started",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "The status of this ActivityRun",
                                            "properties": {
                                                "CurrentStep": {
                                                    "description": "The activity step currently executing, indicated by numeric order",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "Status": {
                                                    "description": "The status of the ActivityRun",
                                                    "enum": [
                                                        "Ready",
                                                        "InProgress",
                                                        "Succeeded",
                                                        "Cancelled",
                                                        "Failed"
                                                    ],
                                                    "type": "string"
                                                },
                                                "StepProgress": {
                                                    "description": "The percent progress from the currently executing step.  This value shall be null if progress is not available",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "StepStatus": {
                                                    "description": "The status text from the currently executing step",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "Steps": {
                                            "description": "Read Only. The steps to be executed for the activity.  These steps come from the relationship through JobActivity down to ActivityStep",
                                            "items": {
                                                "description": "A DTO for an IActivityStep",
                                                "properties": {
                                                    "ActivityID": {
                                                        "description": "The id of the activity this activity step belongs to",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "ActivityStepID": {
                                                        "description": "The id of this activity step",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "ImplementationID": {
                                                        "description": "The implementation id which is used to look up the step implementation",
                                                        "type": "string"
                                                    },
                                                    "ParameterMappings": {
                                                        "description": "The mapping of values from a source to be used for the step parameters",
                                                        "items": {
                                                            "description": "A DTO for an IParameterMapping",
                                                            "properties": {
                                                                "Name": {
                                                                    "description": "The name of the parameter this mapping applies to",
                                                                    "type": "string"
                                                                },
                                                                "Source": {
                                                                    "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                    "type": "string"
                                                                },
                                                                "SourceType": {
                                                                    "description": "The source type used for supplying the parameter",
                                                                    "enum": [
                                                                        "Constant",
                                                                        "Variable"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "readOnly": true,
                                                        "type": "array"
                                                    },
                                                    "RunOrder": {
                                                        "description": "The order of this activity step relative to other activity steps",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "StepID": {
                                                        "description": "The id of the step",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "StepName": {
                                                        "description": "The name of the step",
                                                        "type": "string"
                                                    },
                                                    "UseConfig": {
                                                        "description": "Indicates the configuration for the ActivityStep to use at runtime.  The build agent must provide this configuration",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        }
                                    },
                                    "required": [
                                        "Status"
                                    ],
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "description": "A DTO for an IActivityRun",
                                    "properties": {
                                        "ActivityRunID": {
                                            "description": "The identifier for the ActivityRun",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "EndDate": {
                                            "description": "Read Only. The UTC date and time when the activity completed",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "JobActivityID": {
                                            "description": "Read Only. The ID of the Job Activity that defines this activity run",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "JobRunID": {
                                            "description": "Read Only. The ID of the JobRun under which this ActivityRun is executing",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Parameters": {
                                            "description": "The parameters used for this run of the activity.  Parameters cannot be added or removed, but output parameter values may be updated.",
                                            "items": {
                                                "description": "A DTO for an IParameterValue",
                                                "properties": {
                                                    "Direction": {
                                                        "description": "The parameter direction (Input or Output)",
                                                        "enum": [
                                                            "Input",
                                                            "Output"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the parameter this value is for",
                                                        "type": "string"
                                                    },
                                                    "Value": {
                                                        "description": "The parameter value in string representation",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "StartDate": {
                                            "description": "Read Only. The UTC date and time when the activity started",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "The status of this ActivityRun",
                                            "properties": {
                                                "CurrentStep": {
                                                    "description": "The activity step currently executing, indicated by numeric order",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "Status": {
                                                    "description": "The status of the ActivityRun",
                                                    "enum": [
                                                        "Ready",
                                                        "InProgress",
                                                        "Succeeded",
                                                        "Cancelled",
                                                        "Failed"
                                                    ],
                                                    "type": "string"
                                                },
                                                "StepProgress": {
                                                    "description": "The percent progress from the currently executing step.  This value shall be null if progress is not available",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "StepStatus": {
                                                    "description": "The status text from the currently executing step",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "Steps": {
                                            "description": "Read Only. The steps to be executed for the activity.  These steps come from the relationship through JobActivity down to ActivityStep",
                                            "items": {
                                                "description": "A DTO for an IActivityStep",
                                                "properties": {
                                                    "ActivityID": {
                                                        "description": "The id of the activity this activity step belongs to",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "ActivityStepID": {
                                                        "description": "The id of this activity step",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "ImplementationID": {
                                                        "description": "The implementation id which is used to look up the step implementation",
                                                        "type": "string"
                                                    },
                                                    "ParameterMappings": {
                                                        "description": "The mapping of values from a source to be used for the step parameters",
                                                        "items": {
                                                            "description": "A DTO for an IParameterMapping",
                                                            "properties": {
                                                                "Name": {
                                                                    "description": "The name of the parameter this mapping applies to",
                                                                    "type": "string"
                                                                },
                                                                "Source": {
                                                                    "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                    "type": "string"
                                                                },
                                                                "SourceType": {
                                                                    "description": "The source type used for supplying the parameter",
                                                                    "enum": [
                                                                        "Constant",
                                                                        "Variable"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "readOnly": true,
                                                        "type": "array"
                                                    },
                                                    "RunOrder": {
                                                        "description": "The order of this activity step relative to other activity steps",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "StepID": {
                                                        "description": "The id of the step",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "StepName": {
                                                        "description": "The name of the step",
                                                        "type": "string"
                                                    },
                                                    "UseConfig": {
                                                        "description": "Indicates the configuration for the ActivityStep to use at runtime.  The build agent must provide this configuration",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        }
                                    },
                                    "required": [
                                        "Status"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "description": "A DTO for an IActivityRun",
                                    "properties": {
                                        "ActivityRunID": {
                                            "description": "The identifier for the ActivityRun",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "EndDate": {
                                            "description": "Read Only. The UTC date and time when the activity completed",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "JobActivityID": {
                                            "description": "Read Only. The ID of the Job Activity that defines this activity run",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "JobRunID": {
                                            "description": "Read Only. The ID of the JobRun under which this ActivityRun is executing",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Parameters": {
                                            "description": "The parameters used for this run of the activity.  Parameters cannot be added or removed, but output parameter values may be updated.",
                                            "items": {
                                                "description": "A DTO for an IParameterValue",
                                                "properties": {
                                                    "Direction": {
                                                        "description": "The parameter direction (Input or Output)",
                                                        "enum": [
                                                            "Input",
                                                            "Output"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the parameter this value is for",
                                                        "type": "string"
                                                    },
                                                    "Value": {
                                                        "description": "The parameter value in string representation",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "StartDate": {
                                            "description": "Read Only. The UTC date and time when the activity started",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "The status of this ActivityRun",
                                            "properties": {
                                                "CurrentStep": {
                                                    "description": "The activity step currently executing, indicated by numeric order",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "Status": {
                                                    "description": "The status of the ActivityRun",
                                                    "enum": [
                                                        "Ready",
                                                        "InProgress",
                                                        "Succeeded",
                                                        "Cancelled",
                                                        "Failed"
                                                    ],
                                                    "type": "string"
                                                },
                                                "StepProgress": {
                                                    "description": "The percent progress from the currently executing step.  This value shall be null if progress is not available",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "StepStatus": {
                                                    "description": "The status text from the currently executing step",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "Steps": {
                                            "description": "Read Only. The steps to be executed for the activity.  These steps come from the relationship through JobActivity down to ActivityStep",
                                            "items": {
                                                "description": "A DTO for an IActivityStep",
                                                "properties": {
                                                    "ActivityID": {
                                                        "description": "The id of the activity this activity step belongs to",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "ActivityStepID": {
                                                        "description": "The id of this activity step",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "ImplementationID": {
                                                        "description": "The implementation id which is used to look up the step implementation",
                                                        "type": "string"
                                                    },
                                                    "ParameterMappings": {
                                                        "description": "The mapping of values from a source to be used for the step parameters",
                                                        "items": {
                                                            "description": "A DTO for an IParameterMapping",
                                                            "properties": {
                                                                "Name": {
                                                                    "description": "The name of the parameter this mapping applies to",
                                                                    "type": "string"
                                                                },
                                                                "Source": {
                                                                    "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                    "type": "string"
                                                                },
                                                                "SourceType": {
                                                                    "description": "The source type used for supplying the parameter",
                                                                    "enum": [
                                                                        "Constant",
                                                                        "Variable"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "readOnly": true,
                                                        "type": "array"
                                                    },
                                                    "RunOrder": {
                                                        "description": "The order of this activity step relative to other activity steps",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "StepID": {
                                                        "description": "The id of the step",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "StepName": {
                                                        "description": "The name of the step",
                                                        "type": "string"
                                                    },
                                                    "UseConfig": {
                                                        "description": "Indicates the configuration for the ActivityStep to use at runtime.  The build agent must provide this configuration",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        }
                                    },
                                    "required": [
                                        "Status"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get an Agent's ActivityRun",
                "tags": [
                    "Agents"
                ]
            },
            "put": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "Agents_PutAgentActivityRun",
                "parameters": [
                    {
                        "description": "The id of the Agent to update.",
                        "in": "path",
                        "name": "agentID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Update the ActivityRun assigned to the Agent.",
                "tags": [
                    "Agents"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "A DTO for an IActivityRun",
                                "properties": {
                                    "ActivityRunID": {
                                        "description": "The identifier for the ActivityRun",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "EndDate": {
                                        "description": "Read Only. The UTC date and time when the activity completed",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "JobActivityID": {
                                        "description": "Read Only. The ID of the Job Activity that defines this activity run",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "JobRunID": {
                                        "description": "Read Only. The ID of the JobRun under which this ActivityRun is executing",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Parameters": {
                                        "description": "The parameters used for this run of the activity.  Parameters cannot be added or removed, but output parameter values may be updated.",
                                        "items": {
                                            "description": "A DTO for an IParameterValue",
                                            "properties": {
                                                "Direction": {
                                                    "description": "The parameter direction (Input or Output)",
                                                    "enum": [
                                                        "Input",
                                                        "Output"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name of the parameter this value is for",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "The parameter value in string representation",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    },
                                    "StartDate": {
                                        "description": "Read Only. The UTC date and time when the activity started",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Status": {
                                        "description": "The status of this ActivityRun",
                                        "properties": {
                                            "CurrentStep": {
                                                "description": "The activity step currently executing, indicated by numeric order",
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "Status": {
                                                "description": "The status of the ActivityRun",
                                                "enum": [
                                                    "Ready",
                                                    "InProgress",
                                                    "Succeeded",
                                                    "Cancelled",
                                                    "Failed"
                                                ],
                                                "type": "string"
                                            },
                                            "StepProgress": {
                                                "description": "The percent progress from the currently executing step.  This value shall be null if progress is not available",
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "StepStatus": {
                                                "description": "The status text from the currently executing step",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "Steps": {
                                        "description": "Read Only. The steps to be executed for the activity.  These steps come from the relationship through JobActivity down to ActivityStep",
                                        "items": {
                                            "description": "A DTO for an IActivityStep",
                                            "properties": {
                                                "ActivityID": {
                                                    "description": "The id of the activity this activity step belongs to",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "ActivityStepID": {
                                                    "description": "The id of this activity step",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "ImplementationID": {
                                                    "description": "The implementation id which is used to look up the step implementation",
                                                    "type": "string"
                                                },
                                                "ParameterMappings": {
                                                    "description": "The mapping of values from a source to be used for the step parameters",
                                                    "items": {
                                                        "description": "A DTO for an IParameterMapping",
                                                        "properties": {
                                                            "Name": {
                                                                "description": "The name of the parameter this mapping applies to",
                                                                "type": "string"
                                                            },
                                                            "Source": {
                                                                "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                "type": "string"
                                                            },
                                                            "SourceType": {
                                                                "description": "The source type used for supplying the parameter",
                                                                "enum": [
                                                                    "Constant",
                                                                    "Variable"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "readOnly": true,
                                                    "type": "array"
                                                },
                                                "RunOrder": {
                                                    "description": "The order of this activity step relative to other activity steps",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "StepID": {
                                                    "description": "The id of the step",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "StepName": {
                                                    "description": "The name of the step",
                                                    "type": "string"
                                                },
                                                "UseConfig": {
                                                    "description": "Indicates the configuration for the ActivityStep to use at runtime.  The build agent must provide this configuration",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "Status"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "description": "A DTO for an IActivityRun",
                                "properties": {
                                    "ActivityRunID": {
                                        "description": "The identifier for the ActivityRun",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "EndDate": {
                                        "description": "Read Only. The UTC date and time when the activity completed",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "JobActivityID": {
                                        "description": "Read Only. The ID of the Job Activity that defines this activity run",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "JobRunID": {
                                        "description": "Read Only. The ID of the JobRun under which this ActivityRun is executing",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Parameters": {
                                        "description": "The parameters used for this run of the activity.  Parameters cannot be added or removed, but output parameter values may be updated.",
                                        "items": {
                                            "description": "A DTO for an IParameterValue",
                                            "properties": {
                                                "Direction": {
                                                    "description": "The parameter direction (Input or Output)",
                                                    "enum": [
                                                        "Input",
                                                        "Output"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name of the parameter this value is for",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "The parameter value in string representation",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    },
                                    "StartDate": {
                                        "description": "Read Only. The UTC date and time when the activity started",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Status": {
                                        "description": "The status of this ActivityRun",
                                        "properties": {
                                            "CurrentStep": {
                                                "description": "The activity step currently executing, indicated by numeric order",
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "Status": {
                                                "description": "The status of the ActivityRun",
                                                "enum": [
                                                    "Ready",
                                                    "InProgress",
                                                    "Succeeded",
                                                    "Cancelled",
                                                    "Failed"
                                                ],
                                                "type": "string"
                                            },
                                            "StepProgress": {
                                                "description": "The percent progress from the currently executing step.  This value shall be null if progress is not available",
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "StepStatus": {
                                                "description": "The status text from the currently executing step",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "Steps": {
                                        "description": "Read Only. The steps to be executed for the activity.  These steps come from the relationship through JobActivity down to ActivityStep",
                                        "items": {
                                            "description": "A DTO for an IActivityStep",
                                            "properties": {
                                                "ActivityID": {
                                                    "description": "The id of the activity this activity step belongs to",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "ActivityStepID": {
                                                    "description": "The id of this activity step",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "ImplementationID": {
                                                    "description": "The implementation id which is used to look up the step implementation",
                                                    "type": "string"
                                                },
                                                "ParameterMappings": {
                                                    "description": "The mapping of values from a source to be used for the step parameters",
                                                    "items": {
                                                        "description": "A DTO for an IParameterMapping",
                                                        "properties": {
                                                            "Name": {
                                                                "description": "The name of the parameter this mapping applies to",
                                                                "type": "string"
                                                            },
                                                            "Source": {
                                                                "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                "type": "string"
                                                            },
                                                            "SourceType": {
                                                                "description": "The source type used for supplying the parameter",
                                                                "enum": [
                                                                    "Constant",
                                                                    "Variable"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "readOnly": true,
                                                    "type": "array"
                                                },
                                                "RunOrder": {
                                                    "description": "The order of this activity step relative to other activity steps",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "StepID": {
                                                    "description": "The id of the step",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "StepName": {
                                                    "description": "The name of the step",
                                                    "type": "string"
                                                },
                                                "UseConfig": {
                                                    "description": "Indicates the configuration for the ActivityStep to use at runtime.  The build agent must provide this configuration",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "Status"
                                ],
                                "type": "object"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "description": "A DTO for an IActivityRun",
                                "properties": {
                                    "ActivityRunID": {
                                        "description": "The identifier for the ActivityRun",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "EndDate": {
                                        "description": "Read Only. The UTC date and time when the activity completed",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "JobActivityID": {
                                        "description": "Read Only. The ID of the Job Activity that defines this activity run",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "JobRunID": {
                                        "description": "Read Only. The ID of the JobRun under which this ActivityRun is executing",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Parameters": {
                                        "description": "The parameters used for this run of the activity.  Parameters cannot be added or removed, but output parameter values may be updated.",
                                        "items": {
                                            "description": "A DTO for an IParameterValue",
                                            "properties": {
                                                "Direction": {
                                                    "description": "The parameter direction (Input or Output)",
                                                    "enum": [
                                                        "Input",
                                                        "Output"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name of the parameter this value is for",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "The parameter value in string representation",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    },
                                    "StartDate": {
                                        "description": "Read Only. The UTC date and time when the activity started",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Status": {
                                        "description": "The status of this ActivityRun",
                                        "properties": {
                                            "CurrentStep": {
                                                "description": "The activity step currently executing, indicated by numeric order",
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "Status": {
                                                "description": "The status of the ActivityRun",
                                                "enum": [
                                                    "Ready",
                                                    "InProgress",
                                                    "Succeeded",
                                                    "Cancelled",
                                                    "Failed"
                                                ],
                                                "type": "string"
                                            },
                                            "StepProgress": {
                                                "description": "The percent progress from the currently executing step.  This value shall be null if progress is not available",
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "StepStatus": {
                                                "description": "The status text from the currently executing step",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "Steps": {
                                        "description": "Read Only. The steps to be executed for the activity.  These steps come from the relationship through JobActivity down to ActivityStep",
                                        "items": {
                                            "description": "A DTO for an IActivityStep",
                                            "properties": {
                                                "ActivityID": {
                                                    "description": "The id of the activity this activity step belongs to",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "ActivityStepID": {
                                                    "description": "The id of this activity step",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "ImplementationID": {
                                                    "description": "The implementation id which is used to look up the step implementation",
                                                    "type": "string"
                                                },
                                                "ParameterMappings": {
                                                    "description": "The mapping of values from a source to be used for the step parameters",
                                                    "items": {
                                                        "description": "A DTO for an IParameterMapping",
                                                        "properties": {
                                                            "Name": {
                                                                "description": "The name of the parameter this mapping applies to",
                                                                "type": "string"
                                                            },
                                                            "Source": {
                                                                "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                "type": "string"
                                                            },
                                                            "SourceType": {
                                                                "description": "The source type used for supplying the parameter",
                                                                "enum": [
                                                                    "Constant",
                                                                    "Variable"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "readOnly": true,
                                                    "type": "array"
                                                },
                                                "RunOrder": {
                                                    "description": "The order of this activity step relative to other activity steps",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "StepID": {
                                                    "description": "The id of the step",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "StepName": {
                                                    "description": "The name of the step",
                                                    "type": "string"
                                                },
                                                "UseConfig": {
                                                    "description": "Indicates the configuration for the ActivityStep to use at runtime.  The build agent must provide this configuration",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "Status"
                                ],
                                "type": "object"
                            }
                        },
                        "text/xml": {
                            "schema": {
                                "description": "A DTO for an IActivityRun",
                                "properties": {
                                    "ActivityRunID": {
                                        "description": "The identifier for the ActivityRun",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "EndDate": {
                                        "description": "Read Only. The UTC date and time when the activity completed",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "JobActivityID": {
                                        "description": "Read Only. The ID of the Job Activity that defines this activity run",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "JobRunID": {
                                        "description": "Read Only. The ID of the JobRun under which this ActivityRun is executing",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Parameters": {
                                        "description": "The parameters used for this run of the activity.  Parameters cannot be added or removed, but output parameter values may be updated.",
                                        "items": {
                                            "description": "A DTO for an IParameterValue",
                                            "properties": {
                                                "Direction": {
                                                    "description": "The parameter direction (Input or Output)",
                                                    "enum": [
                                                        "Input",
                                                        "Output"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name of the parameter this value is for",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "The parameter value in string representation",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    },
                                    "StartDate": {
                                        "description": "Read Only. The UTC date and time when the activity started",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Status": {
                                        "description": "The status of this ActivityRun",
                                        "properties": {
                                            "CurrentStep": {
                                                "description": "The activity step currently executing, indicated by numeric order",
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "Status": {
                                                "description": "The status of the ActivityRun",
                                                "enum": [
                                                    "Ready",
                                                    "InProgress",
                                                    "Succeeded",
                                                    "Cancelled",
                                                    "Failed"
                                                ],
                                                "type": "string"
                                            },
                                            "StepProgress": {
                                                "description": "The percent progress from the currently executing step.  This value shall be null if progress is not available",
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "StepStatus": {
                                                "description": "The status text from the currently executing step",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "Steps": {
                                        "description": "Read Only. The steps to be executed for the activity.  These steps come from the relationship through JobActivity down to ActivityStep",
                                        "items": {
                                            "description": "A DTO for an IActivityStep",
                                            "properties": {
                                                "ActivityID": {
                                                    "description": "The id of the activity this activity step belongs to",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "ActivityStepID": {
                                                    "description": "The id of this activity step",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "ImplementationID": {
                                                    "description": "The implementation id which is used to look up the step implementation",
                                                    "type": "string"
                                                },
                                                "ParameterMappings": {
                                                    "description": "The mapping of values from a source to be used for the step parameters",
                                                    "items": {
                                                        "description": "A DTO for an IParameterMapping",
                                                        "properties": {
                                                            "Name": {
                                                                "description": "The name of the parameter this mapping applies to",
                                                                "type": "string"
                                                            },
                                                            "Source": {
                                                                "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                "type": "string"
                                                            },
                                                            "SourceType": {
                                                                "description": "The source type used for supplying the parameter",
                                                                "enum": [
                                                                    "Constant",
                                                                    "Variable"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "readOnly": true,
                                                    "type": "array"
                                                },
                                                "RunOrder": {
                                                    "description": "The order of this activity step relative to other activity steps",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "StepID": {
                                                    "description": "The id of the step",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "StepName": {
                                                    "description": "The name of the step",
                                                    "type": "string"
                                                },
                                                "UseConfig": {
                                                    "description": "Indicates the configuration for the ActivityStep to use at runtime.  The build agent must provide this configuration",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "Status"
                                ],
                                "type": "object"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "description": "A DTO for an IActivityRun",
                                "properties": {
                                    "ActivityRunID": {
                                        "description": "The identifier for the ActivityRun",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "EndDate": {
                                        "description": "Read Only. The UTC date and time when the activity completed",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "JobActivityID": {
                                        "description": "Read Only. The ID of the Job Activity that defines this activity run",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "JobRunID": {
                                        "description": "Read Only. The ID of the JobRun under which this ActivityRun is executing",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Parameters": {
                                        "description": "The parameters used for this run of the activity.  Parameters cannot be added or removed, but output parameter values may be updated.",
                                        "items": {
                                            "description": "A DTO for an IParameterValue",
                                            "properties": {
                                                "Direction": {
                                                    "description": "The parameter direction (Input or Output)",
                                                    "enum": [
                                                        "Input",
                                                        "Output"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name of the parameter this value is for",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "The parameter value in string representation",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    },
                                    "StartDate": {
                                        "description": "Read Only. The UTC date and time when the activity started",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Status": {
                                        "description": "The status of this ActivityRun",
                                        "properties": {
                                            "CurrentStep": {
                                                "description": "The activity step currently executing, indicated by numeric order",
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "Status": {
                                                "description": "The status of the ActivityRun",
                                                "enum": [
                                                    "Ready",
                                                    "InProgress",
                                                    "Succeeded",
                                                    "Cancelled",
                                                    "Failed"
                                                ],
                                                "type": "string"
                                            },
                                            "StepProgress": {
                                                "description": "The percent progress from the currently executing step.  This value shall be null if progress is not available",
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "StepStatus": {
                                                "description": "The status text from the currently executing step",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "Steps": {
                                        "description": "Read Only. The steps to be executed for the activity.  These steps come from the relationship through JobActivity down to ActivityStep",
                                        "items": {
                                            "description": "A DTO for an IActivityStep",
                                            "properties": {
                                                "ActivityID": {
                                                    "description": "The id of the activity this activity step belongs to",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "ActivityStepID": {
                                                    "description": "The id of this activity step",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "ImplementationID": {
                                                    "description": "The implementation id which is used to look up the step implementation",
                                                    "type": "string"
                                                },
                                                "ParameterMappings": {
                                                    "description": "The mapping of values from a source to be used for the step parameters",
                                                    "items": {
                                                        "description": "A DTO for an IParameterMapping",
                                                        "properties": {
                                                            "Name": {
                                                                "description": "The name of the parameter this mapping applies to",
                                                                "type": "string"
                                                            },
                                                            "Source": {
                                                                "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                "type": "string"
                                                            },
                                                            "SourceType": {
                                                                "description": "The source type used for supplying the parameter",
                                                                "enum": [
                                                                    "Constant",
                                                                    "Variable"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "readOnly": true,
                                                    "type": "array"
                                                },
                                                "RunOrder": {
                                                    "description": "The order of this activity step relative to other activity steps",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "StepID": {
                                                    "description": "The id of the step",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "StepName": {
                                                    "description": "The name of the step",
                                                    "type": "string"
                                                },
                                                "UseConfig": {
                                                    "description": "Indicates the configuration for the ActivityStep to use at runtime.  The build agent must provide this configuration",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "Status"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The ActivityRun assigned to the agent.  Only the ActivityRunID is used.",
                    "required": true
                }
            }
        },
        "/api/v2/agents/{agentID}/Status": {
            "put": {
                "deprecated": false,
                "description": "Updates the status of an Agent.The body of the PUT is the updated Agent status.  When successful,\r\n            the response is empty.If unsuccessful, an appropriate ApiError is returned.",
                "operationId": "Agents_PutAgentStatus",
                "parameters": [
                    {
                        "description": "The id of the Agent to update.",
                        "in": "path",
                        "name": "agentID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Update an Agent",
                "tags": [
                    "Agents"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "A DTO for an IAgentStatus",
                                "properties": {
                                    "LastStatusUpdate": {
                                        "description": "ReadOnly. The UTC date and time of the last status update",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Online": {
                                        "description": "Indicates if the agent is online",
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "Online"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "description": "A DTO for an IAgentStatus",
                                "properties": {
                                    "LastStatusUpdate": {
                                        "description": "ReadOnly. The UTC date and time of the last status update",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Online": {
                                        "description": "Indicates if the agent is online",
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "Online"
                                ],
                                "type": "object"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "description": "A DTO for an IAgentStatus",
                                "properties": {
                                    "LastStatusUpdate": {
                                        "description": "ReadOnly. The UTC date and time of the last status update",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Online": {
                                        "description": "Indicates if the agent is online",
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "Online"
                                ],
                                "type": "object"
                            }
                        },
                        "text/xml": {
                            "schema": {
                                "description": "A DTO for an IAgentStatus",
                                "properties": {
                                    "LastStatusUpdate": {
                                        "description": "ReadOnly. The UTC date and time of the last status update",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Online": {
                                        "description": "Indicates if the agent is online",
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "Online"
                                ],
                                "type": "object"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "description": "A DTO for an IAgentStatus",
                                "properties": {
                                    "LastStatusUpdate": {
                                        "description": "ReadOnly. The UTC date and time of the last status update",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Online": {
                                        "description": "Indicates if the agent is online",
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "Online"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The updated AgentStatus.",
                    "required": true
                }
            }
        },
        "/api/v2/jobRuns": {
            "get": {
                "deprecated": false,
                "description": "Gets a collection of JobRuns. When successful, the response is a PagedResponse of JobRuns.\r\n            If unsuccessful, an appropriate ApiError is returned.",
                "operationId": "JobRuns_GetJobRuns",
                "parameters": [
                    {
                        "description": "Optional. The page limit.  If not specified, the default page limit is 10.",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "Optional. The page offset.  If not specified, the default page offset is 0.",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "Optional. Indicates whether to include ActivityRun details.  Defaults to false.",
                        "in": "query",
                        "name": "includeActivityRunDetails",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "description": "A DTO for an IJobRun",
                                                "properties": {
                                                    "ActivityRuns": {
                                                        "description": "The activity runs belonging to this JobRun",
                                                        "items": {
                                                            "description": "A DTO for an IActivityRun",
                                                            "properties": {
                                                                "ActivityRunID": {
                                                                    "description": "The identifier for the ActivityRun",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "EndDate": {
                                                                    "description": "Read Only. The UTC date and time when the activity completed",
                                                                    "format": "date-time",
                                                                    "type": "string"
                                                                },
                                                                "JobActivityID": {
                                                                    "description": "Read Only. The ID of the Job Activity that defines this activity run",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "JobRunID": {
                                                                    "description": "Read Only. The ID of the JobRun under which this ActivityRun is executing",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "Parameters": {
                                                                    "description": "The parameters used for this run of the activity.  Parameters cannot be added or removed, but output parameter values may be updated.",
                                                                    "items": {
                                                                        "description": "A DTO for an IParameterValue",
                                                                        "properties": {
                                                                            "Direction": {
                                                                                "description": "The parameter direction (Input or Output)",
                                                                                "enum": [
                                                                                    "Input",
                                                                                    "Output"
                                                                                ],
                                                                                "type": "string"
                                                                            },
                                                                            "Name": {
                                                                                "description": "The name of the parameter this value is for",
                                                                                "type": "string"
                                                                            },
                                                                            "Value": {
                                                                                "description": "The parameter value in string representation",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "readOnly": true,
                                                                    "type": "array"
                                                                },
                                                                "StartDate": {
                                                                    "description": "Read Only. The UTC date and time when the activity started",
                                                                    "format": "date-time",
                                                                    "type": "string"
                                                                },
                                                                "Status": {
                                                                    "description": "The status of this ActivityRun",
                                                                    "properties": {
                                                                        "CurrentStep": {
                                                                            "description": "The activity step currently executing, indicated by numeric order",
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        },
                                                                        "Status": {
                                                                            "description": "The status of the ActivityRun",
                                                                            "enum": [
                                                                                "Ready",
                                                                                "InProgress",
                                                                                "Succeeded",
                                                                                "Cancelled",
                                                                                "Failed"
                                                                            ],
                                                                            "type": "string"
                                                                        },
                                                                        "StepProgress": {
                                                                            "description": "The percent progress from the currently executing step.  This value shall be null if progress is not available",
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        },
                                                                        "StepStatus": {
                                                                            "description": "The status text from the currently executing step",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "Steps": {
                                                                    "description": "Read Only. The steps to be executed for the activity.  These steps come from the relationship through JobActivity down to ActivityStep",
                                                                    "items": {
                                                                        "description": "A DTO for an IActivityStep",
                                                                        "properties": {
                                                                            "ActivityID": {
                                                                                "description": "The id of the activity this activity step belongs to",
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            },
                                                                            "ActivityStepID": {
                                                                                "description": "The id of this activity step",
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            },
                                                                            "ImplementationID": {
                                                                                "description": "The implementation id which is used to look up the step implementation",
                                                                                "type": "string"
                                                                            },
                                                                            "ParameterMappings": {
                                                                                "description": "The mapping of values from a source to be used for the step parameters",
                                                                                "items": {
                                                                                    "description": "A DTO for an IParameterMapping",
                                                                                    "properties": {
                                                                                        "Name": {
                                                                                            "description": "The name of the parameter this mapping applies to",
                                                                                            "type": "string"
                                                                                        },
                                                                                        "Source": {
                                                                                            "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                                            "type": "string"
                                                                                        },
                                                                                        "SourceType": {
                                                                                            "description": "The source type used for supplying the parameter",
                                                                                            "enum": [
                                                                                                "Constant",
                                                                                                "Variable"
                                                                                            ],
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "readOnly": true,
                                                                                "type": "array"
                                                                            },
                                                                            "RunOrder": {
                                                                                "description": "The order of this activity step relative to other activity steps",
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            },
                                                                            "StepID": {
                                                                                "description": "The id of the step",
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            },
                                                                            "StepName": {
                                                                                "description": "The name of the step",
                                                                                "type": "string"
                                                                            },
                                                                            "UseConfig": {
                                                                                "description": "Indicates the configuration for the ActivityStep to use at runtime.  The build agent must provide this configuration",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "readOnly": true,
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "required": [
                                                                "Status"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "readOnly": true,
                                                        "type": "array"
                                                    },
                                                    "EndDate": {
                                                        "description": "The UTC date and time when the job completed",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "JobID": {
                                                        "description": "The ID of the job that defines the run",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "JobRunID": {
                                                        "description": "The ID of this JobRun",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "Parameters": {
                                                        "description": "The parameters used for this run of the job",
                                                        "items": {
                                                            "description": "A DTO for an IParameterValue",
                                                            "properties": {
                                                                "Direction": {
                                                                    "description": "The parameter direction (Input or Output)",
                                                                    "enum": [
                                                                        "Input",
                                                                        "Output"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "Name": {
                                                                    "description": "The name of the parameter this value is for",
                                                                    "type": "string"
                                                                },
                                                                "Value": {
                                                                    "description": "The parameter value in string representation",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "readOnly": true,
                                                        "type": "array"
                                                    },
                                                    "StartDate": {
                                                        "description": "The UTC date and time when the job started",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "Status": {
                                                        "description": "The status of this JobRun",
                                                        "enum": [
                                                            "Ready",
                                                            "InProgress",
                                                            "Succeeded",
                                                            "Cancelled",
                                                            "Failed"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "description": "A DTO for an IJobRun",
                                                "properties": {
                                                    "ActivityRuns": {
                                                        "description": "The activity runs belonging to this JobRun",
                                                        "items": {
                                                            "description": "A DTO for an IActivityRun",
                                                            "properties": {
                                                                "ActivityRunID": {
                                                                    "description": "The identifier for the ActivityRun",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "EndDate": {
                                                                    "description": "Read Only. The UTC date and time when the activity completed",
                                                                    "format": "date-time",
                                                                    "type": "string"
                                                                },
                                                                "JobActivityID": {
                                                                    "description": "Read Only. The ID of the Job Activity that defines this activity run",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "JobRunID": {
                                                                    "description": "Read Only. The ID of the JobRun under which this ActivityRun is executing",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "Parameters": {
                                                                    "description": "The parameters used for this run of the activity.  Parameters cannot be added or removed, but output parameter values may be updated.",
                                                                    "items": {
                                                                        "description": "A DTO for an IParameterValue",
                                                                        "properties": {
                                                                            "Direction": {
                                                                                "description": "The parameter direction (Input or Output)",
                                                                                "enum": [
                                                                                    "Input",
                                                                                    "Output"
                                                                                ],
                                                                                "type": "string"
                                                                            },
                                                                            "Name": {
                                                                                "description": "The name of the parameter this value is for",
                                                                                "type": "string"
                                                                            },
                                                                            "Value": {
                                                                                "description": "The parameter value in string representation",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "readOnly": true,
                                                                    "type": "array"
                                                                },
                                                                "StartDate": {
                                                                    "description": "Read Only. The UTC date and time when the activity started",
                                                                    "format": "date-time",
                                                                    "type": "string"
                                                                },
                                                                "Status": {
                                                                    "description": "The status of this ActivityRun",
                                                                    "properties": {
                                                                        "CurrentStep": {
                                                                            "description": "The activity step currently executing, indicated by numeric order",
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        },
                                                                        "Status": {
                                                                            "description": "The status of the ActivityRun",
                                                                            "enum": [
                                                                                "Ready",
                                                                                "InProgress",
                                                                                "Succeeded",
                                                                                "Cancelled",
                                                                                "Failed"
                                                                            ],
                                                                            "type": "string"
                                                                        },
                                                                        "StepProgress": {
                                                                            "description": "The percent progress from the currently executing step.  This value shall be null if progress is not available",
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        },
                                                                        "StepStatus": {
                                                                            "description": "The status text from the currently executing step",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "Steps": {
                                                                    "description": "Read Only. The steps to be executed for the activity.  These steps come from the relationship through JobActivity down to ActivityStep",
                                                                    "items": {
                                                                        "description": "A DTO for an IActivityStep",
                                                                        "properties": {
                                                                            "ActivityID": {
                                                                                "description": "The id of the activity this activity step belongs to",
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            },
                                                                            "ActivityStepID": {
                                                                                "description": "The id of this activity step",
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            },
                                                                            "ImplementationID": {
                                                                                "description": "The implementation id which is used to look up the step implementation",
                                                                                "type": "string"
                                                                            },
                                                                            "ParameterMappings": {
                                                                                "description": "The mapping of values from a source to be used for the step parameters",
                                                                                "items": {
                                                                                    "description": "A DTO for an IParameterMapping",
                                                                                    "properties": {
                                                                                        "Name": {
                                                                                            "description": "The name of the parameter this mapping applies to",
                                                                                            "type": "string"
                                                                                        },
                                                                                        "Source": {
                                                                                            "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                                            "type": "string"
                                                                                        },
                                                                                        "SourceType": {
                                                                                            "description": "The source type used for supplying the parameter",
                                                                                            "enum": [
                                                                                                "Constant",
                                                                                                "Variable"
                                                                                            ],
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "readOnly": true,
                                                                                "type": "array"
                                                                            },
                                                                            "RunOrder": {
                                                                                "description": "The order of this activity step relative to other activity steps",
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            },
                                                                            "StepID": {
                                                                                "description": "The id of the step",
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            },
                                                                            "StepName": {
                                                                                "description": "The name of the step",
                                                                                "type": "string"
                                                                            },
                                                                            "UseConfig": {
                                                                                "description": "Indicates the configuration for the ActivityStep to use at runtime.  The build agent must provide this configuration",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "readOnly": true,
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "required": [
                                                                "Status"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "readOnly": true,
                                                        "type": "array"
                                                    },
                                                    "EndDate": {
                                                        "description": "The UTC date and time when the job completed",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "JobID": {
                                                        "description": "The ID of the job that defines the run",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "JobRunID": {
                                                        "description": "The ID of this JobRun",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "Parameters": {
                                                        "description": "The parameters used for this run of the job",
                                                        "items": {
                                                            "description": "A DTO for an IParameterValue",
                                                            "properties": {
                                                                "Direction": {
                                                                    "description": "The parameter direction (Input or Output)",
                                                                    "enum": [
                                                                        "Input",
                                                                        "Output"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "Name": {
                                                                    "description": "The name of the parameter this value is for",
                                                                    "type": "string"
                                                                },
                                                                "Value": {
                                                                    "description": "The parameter value in string representation",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "readOnly": true,
                                                        "type": "array"
                                                    },
                                                    "StartDate": {
                                                        "description": "The UTC date and time when the job started",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "Status": {
                                                        "description": "The status of this JobRun",
                                                        "enum": [
                                                            "Ready",
                                                            "InProgress",
                                                            "Succeeded",
                                                            "Cancelled",
                                                            "Failed"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get JobRuns",
                "tags": [
                    "JobRuns"
                ]
            },
            "post": {
                "deprecated": false,
                "description": "Creates a JobRun.  The body of the POST is the JobRun to create.  The JobRunID will be assigned on\r\n            creation of the JobRun.  When successful, the response is the JobRunID.  If unsuccessful, an \r\n            appropriate ApiError is returned.",
                "operationId": "JobRuns_PostJobRun",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Create a JobRun",
                "tags": [
                    "JobRuns"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "A DTO for an IJobRun",
                                "properties": {
                                    "ActivityRuns": {
                                        "description": "The activity runs belonging to this JobRun",
                                        "items": {
                                            "description": "A DTO for an IActivityRun",
                                            "properties": {
                                                "ActivityRunID": {
                                                    "description": "The identifier for the ActivityRun",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "EndDate": {
                                                    "description": "Read Only. The UTC date and time when the activity completed",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "JobActivityID": {
                                                    "description": "Read Only. The ID of the Job Activity that defines this activity run",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "JobRunID": {
                                                    "description": "Read Only. The ID of the JobRun under which this ActivityRun is executing",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "Parameters": {
                                                    "description": "The parameters used for this run of the activity.  Parameters cannot be added or removed, but output parameter values may be updated.",
                                                    "items": {
                                                        "description": "A DTO for an IParameterValue",
                                                        "properties": {
                                                            "Direction": {
                                                                "description": "The parameter direction (Input or Output)",
                                                                "enum": [
                                                                    "Input",
                                                                    "Output"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "Name": {
                                                                "description": "The name of the parameter this value is for",
                                                                "type": "string"
                                                            },
                                                            "Value": {
                                                                "description": "The parameter value in string representation",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "readOnly": true,
                                                    "type": "array"
                                                },
                                                "StartDate": {
                                                    "description": "Read Only. The UTC date and time when the activity started",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "Status": {
                                                    "description": "The status of this ActivityRun",
                                                    "properties": {
                                                        "CurrentStep": {
                                                            "description": "The activity step currently executing, indicated by numeric order",
                                                            "format": "int32",
                                                            "type": "integer"
                                                        },
                                                        "Status": {
                                                            "description": "The status of the ActivityRun",
                                                            "enum": [
                                                                "Ready",
                                                                "InProgress",
                                                                "Succeeded",
                                                                "Cancelled",
                                                                "Failed"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "StepProgress": {
                                                            "description": "The percent progress from the currently executing step.  This value shall be null if progress is not available",
                                                            "format": "int32",
                                                            "type": "integer"
                                                        },
                                                        "StepStatus": {
                                                            "description": "The status text from the currently executing step",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "Steps": {
                                                    "description": "Read Only. The steps to be executed for the activity.  These steps come from the relationship through JobActivity down to ActivityStep",
                                                    "items": {
                                                        "description": "A DTO for an IActivityStep",
                                                        "properties": {
                                                            "ActivityID": {
                                                                "description": "The id of the activity this activity step belongs to",
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "ActivityStepID": {
                                                                "description": "The id of this activity step",
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "ImplementationID": {
                                                                "description": "The implementation id which is used to look up the step implementation",
                                                                "type": "string"
                                                            },
                                                            "ParameterMappings": {
                                                                "description": "The mapping of values from a source to be used for the step parameters",
                                                                "items": {
                                                                    "description": "A DTO for an IParameterMapping",
                                                                    "properties": {
                                                                        "Name": {
                                                                            "description": "The name of the parameter this mapping applies to",
                                                                            "type": "string"
                                                                        },
                                                                        "Source": {
                                                                            "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                            "type": "string"
                                                                        },
                                                                        "SourceType": {
                                                                            "description": "The source type used for supplying the parameter",
                                                                            "enum": [
                                                                                "Constant",
                                                                                "Variable"
                                                                            ],
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "readOnly": true,
                                                                "type": "array"
                                                            },
                                                            "RunOrder": {
                                                                "description": "The order of this activity step relative to other activity steps",
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "StepID": {
                                                                "description": "The id of the step",
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "StepName": {
                                                                "description": "The name of the step",
                                                                "type": "string"
                                                            },
                                                            "UseConfig": {
                                                                "description": "Indicates the configuration for the ActivityStep to use at runtime.  The build agent must provide this configuration",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "readOnly": true,
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "Status"
                                            ],
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    },
                                    "EndDate": {
                                        "description": "The UTC date and time when the job completed",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "JobID": {
                                        "description": "The ID of the job that defines the run",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "JobRunID": {
                                        "description": "The ID of this JobRun",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Parameters": {
                                        "description": "The parameters used for this run of the job",
                                        "items": {
                                            "description": "A DTO for an IParameterValue",
                                            "properties": {
                                                "Direction": {
                                                    "description": "The parameter direction (Input or Output)",
                                                    "enum": [
                                                        "Input",
                                                        "Output"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name of the parameter this value is for",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "The parameter value in string representation",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    },
                                    "StartDate": {
                                        "description": "The UTC date and time when the job started",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Status": {
                                        "description": "The status of this JobRun",
                                        "enum": [
                                            "Ready",
                                            "InProgress",
                                            "Succeeded",
                                            "Cancelled",
                                            "Failed"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "description": "A DTO for an IJobRun",
                                "properties": {
                                    "ActivityRuns": {
                                        "description": "The activity runs belonging to this JobRun",
                                        "items": {
                                            "description": "A DTO for an IActivityRun",
                                            "properties": {
                                                "ActivityRunID": {
                                                    "description": "The identifier for the ActivityRun",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "EndDate": {
                                                    "description": "Read Only. The UTC date and time when the activity completed",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "JobActivityID": {
                                                    "description": "Read Only. The ID of the Job Activity that defines this activity run",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "JobRunID": {
                                                    "description": "Read Only. The ID of the JobRun under which this ActivityRun is executing",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "Parameters": {
                                                    "description": "The parameters used for this run of the activity.  Parameters cannot be added or removed, but output parameter values may be updated.",
                                                    "items": {
                                                        "description": "A DTO for an IParameterValue",
                                                        "properties": {
                                                            "Direction": {
                                                                "description": "The parameter direction (Input or Output)",
                                                                "enum": [
                                                                    "Input",
                                                                    "Output"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "Name": {
                                                                "description": "The name of the parameter this value is for",
                                                                "type": "string"
                                                            },
                                                            "Value": {
                                                                "description": "The parameter value in string representation",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "readOnly": true,
                                                    "type": "array"
                                                },
                                                "StartDate": {
                                                    "description": "Read Only. The UTC date and time when the activity started",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "Status": {
                                                    "description": "The status of this ActivityRun",
                                                    "properties": {
                                                        "CurrentStep": {
                                                            "description": "The activity step currently executing, indicated by numeric order",
                                                            "format": "int32",
                                                            "type": "integer"
                                                        },
                                                        "Status": {
                                                            "description": "The status of the ActivityRun",
                                                            "enum": [
                                                                "Ready",
                                                                "InProgress",
                                                                "Succeeded",
                                                                "Cancelled",
                                                                "Failed"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "StepProgress": {
                                                            "description": "The percent progress from the currently executing step.  This value shall be null if progress is not available",
                                                            "format": "int32",
                                                            "type": "integer"
                                                        },
                                                        "StepStatus": {
                                                            "description": "The status text from the currently executing step",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "Steps": {
                                                    "description": "Read Only. The steps to be executed for the activity.  These steps come from the relationship through JobActivity down to ActivityStep",
                                                    "items": {
                                                        "description": "A DTO for an IActivityStep",
                                                        "properties": {
                                                            "ActivityID": {
                                                                "description": "The id of the activity this activity step belongs to",
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "ActivityStepID": {
                                                                "description": "The id of this activity step",
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "ImplementationID": {
                                                                "description": "The implementation id which is used to look up the step implementation",
                                                                "type": "string"
                                                            },
                                                            "ParameterMappings": {
                                                                "description": "The mapping of values from a source to be used for the step parameters",
                                                                "items": {
                                                                    "description": "A DTO for an IParameterMapping",
                                                                    "properties": {
                                                                        "Name": {
                                                                            "description": "The name of the parameter this mapping applies to",
                                                                            "type": "string"
                                                                        },
                                                                        "Source": {
                                                                            "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                            "type": "string"
                                                                        },
                                                                        "SourceType": {
                                                                            "description": "The source type used for supplying the parameter",
                                                                            "enum": [
                                                                                "Constant",
                                                                                "Variable"
                                                                            ],
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "readOnly": true,
                                                                "type": "array"
                                                            },
                                                            "RunOrder": {
                                                                "description": "The order of this activity step relative to other activity steps",
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "StepID": {
                                                                "description": "The id of the step",
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "StepName": {
                                                                "description": "The name of the step",
                                                                "type": "string"
                                                            },
                                                            "UseConfig": {
                                                                "description": "Indicates the configuration for the ActivityStep to use at runtime.  The build agent must provide this configuration",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "readOnly": true,
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "Status"
                                            ],
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    },
                                    "EndDate": {
                                        "description": "The UTC date and time when the job completed",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "JobID": {
                                        "description": "The ID of the job that defines the run",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "JobRunID": {
                                        "description": "The ID of this JobRun",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Parameters": {
                                        "description": "The parameters used for this run of the job",
                                        "items": {
                                            "description": "A DTO for an IParameterValue",
                                            "properties": {
                                                "Direction": {
                                                    "description": "The parameter direction (Input or Output)",
                                                    "enum": [
                                                        "Input",
                                                        "Output"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name of the parameter this value is for",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "The parameter value in string representation",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    },
                                    "StartDate": {
                                        "description": "The UTC date and time when the job started",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Status": {
                                        "description": "The status of this JobRun",
                                        "enum": [
                                            "Ready",
                                            "InProgress",
                                            "Succeeded",
                                            "Cancelled",
                                            "Failed"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "description": "A DTO for an IJobRun",
                                "properties": {
                                    "ActivityRuns": {
                                        "description": "The activity runs belonging to this JobRun",
                                        "items": {
                                            "description": "A DTO for an IActivityRun",
                                            "properties": {
                                                "ActivityRunID": {
                                                    "description": "The identifier for the ActivityRun",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "EndDate": {
                                                    "description": "Read Only. The UTC date and time when the activity completed",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "JobActivityID": {
                                                    "description": "Read Only. The ID of the Job Activity that defines this activity run",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "JobRunID": {
                                                    "description": "Read Only. The ID of the JobRun under which this ActivityRun is executing",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "Parameters": {
                                                    "description": "The parameters used for this run of the activity.  Parameters cannot be added or removed, but output parameter values may be updated.",
                                                    "items": {
                                                        "description": "A DTO for an IParameterValue",
                                                        "properties": {
                                                            "Direction": {
                                                                "description": "The parameter direction (Input or Output)",
                                                                "enum": [
                                                                    "Input",
                                                                    "Output"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "Name": {
                                                                "description": "The name of the parameter this value is for",
                                                                "type": "string"
                                                            },
                                                            "Value": {
                                                                "description": "The parameter value in string representation",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "readOnly": true,
                                                    "type": "array"
                                                },
                                                "StartDate": {
                                                    "description": "Read Only. The UTC date and time when the activity started",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "Status": {
                                                    "description": "The status of this ActivityRun",
                                                    "properties": {
                                                        "CurrentStep": {
                                                            "description": "The activity step currently executing, indicated by numeric order",
                                                            "format": "int32",
                                                            "type": "integer"
                                                        },
                                                        "Status": {
                                                            "description": "The status of the ActivityRun",
                                                            "enum": [
                                                                "Ready",
                                                                "InProgress",
                                                                "Succeeded",
                                                                "Cancelled",
                                                                "Failed"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "StepProgress": {
                                                            "description": "The percent progress from the currently executing step.  This value shall be null if progress is not available",
                                                            "format": "int32",
                                                            "type": "integer"
                                                        },
                                                        "StepStatus": {
                                                            "description": "The status text from the currently executing step",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "Steps": {
                                                    "description": "Read Only. The steps to be executed for the activity.  These steps come from the relationship through JobActivity down to ActivityStep",
                                                    "items": {
                                                        "description": "A DTO for an IActivityStep",
                                                        "properties": {
                                                            "ActivityID": {
                                                                "description": "The id of the activity this activity step belongs to",
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "ActivityStepID": {
                                                                "description": "The id of this activity step",
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "ImplementationID": {
                                                                "description": "The implementation id which is used to look up the step implementation",
                                                                "type": "string"
                                                            },
                                                            "ParameterMappings": {
                                                                "description": "The mapping of values from a source to be used for the step parameters",
                                                                "items": {
                                                                    "description": "A DTO for an IParameterMapping",
                                                                    "properties": {
                                                                        "Name": {
                                                                            "description": "The name of the parameter this mapping applies to",
                                                                            "type": "string"
                                                                        },
                                                                        "Source": {
                                                                            "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                            "type": "string"
                                                                        },
                                                                        "SourceType": {
                                                                            "description": "The source type used for supplying the parameter",
                                                                            "enum": [
                                                                                "Constant",
                                                                                "Variable"
                                                                            ],
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "readOnly": true,
                                                                "type": "array"
                                                            },
                                                            "RunOrder": {
                                                                "description": "The order of this activity step relative to other activity steps",
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "StepID": {
                                                                "description": "The id of the step",
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "StepName": {
                                                                "description": "The name of the step",
                                                                "type": "string"
                                                            },
                                                            "UseConfig": {
                                                                "description": "Indicates the configuration for the ActivityStep to use at runtime.  The build agent must provide this configuration",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "readOnly": true,
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "Status"
                                            ],
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    },
                                    "EndDate": {
                                        "description": "The UTC date and time when the job completed",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "JobID": {
                                        "description": "The ID of the job that defines the run",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "JobRunID": {
                                        "description": "The ID of this JobRun",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Parameters": {
                                        "description": "The parameters used for this run of the job",
                                        "items": {
                                            "description": "A DTO for an IParameterValue",
                                            "properties": {
                                                "Direction": {
                                                    "description": "The parameter direction (Input or Output)",
                                                    "enum": [
                                                        "Input",
                                                        "Output"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name of the parameter this value is for",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "The parameter value in string representation",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    },
                                    "StartDate": {
                                        "description": "The UTC date and time when the job started",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Status": {
                                        "description": "The status of this JobRun",
                                        "enum": [
                                            "Ready",
                                            "InProgress",
                                            "Succeeded",
                                            "Cancelled",
                                            "Failed"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "text/xml": {
                            "schema": {
                                "description": "A DTO for an IJobRun",
                                "properties": {
                                    "ActivityRuns": {
                                        "description": "The activity runs belonging to this JobRun",
                                        "items": {
                                            "description": "A DTO for an IActivityRun",
                                            "properties": {
                                                "ActivityRunID": {
                                                    "description": "The identifier for the ActivityRun",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "EndDate": {
                                                    "description": "Read Only. The UTC date and time when the activity completed",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "JobActivityID": {
                                                    "description": "Read Only. The ID of the Job Activity that defines this activity run",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "JobRunID": {
                                                    "description": "Read Only. The ID of the JobRun under which this ActivityRun is executing",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "Parameters": {
                                                    "description": "The parameters used for this run of the activity.  Parameters cannot be added or removed, but output parameter values may be updated.",
                                                    "items": {
                                                        "description": "A DTO for an IParameterValue",
                                                        "properties": {
                                                            "Direction": {
                                                                "description": "The parameter direction (Input or Output)",
                                                                "enum": [
                                                                    "Input",
                                                                    "Output"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "Name": {
                                                                "description": "The name of the parameter this value is for",
                                                                "type": "string"
                                                            },
                                                            "Value": {
                                                                "description": "The parameter value in string representation",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "readOnly": true,
                                                    "type": "array"
                                                },
                                                "StartDate": {
                                                    "description": "Read Only. The UTC date and time when the activity started",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "Status": {
                                                    "description": "The status of this ActivityRun",
                                                    "properties": {
                                                        "CurrentStep": {
                                                            "description": "The activity step currently executing, indicated by numeric order",
                                                            "format": "int32",
                                                            "type": "integer"
                                                        },
                                                        "Status": {
                                                            "description": "The status of the ActivityRun",
                                                            "enum": [
                                                                "Ready",
                                                                "InProgress",
                                                                "Succeeded",
                                                                "Cancelled",
                                                                "Failed"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "StepProgress": {
                                                            "description": "The percent progress from the currently executing step.  This value shall be null if progress is not available",
                                                            "format": "int32",
                                                            "type": "integer"
                                                        },
                                                        "StepStatus": {
                                                            "description": "The status text from the currently executing step",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "Steps": {
                                                    "description": "Read Only. The steps to be executed for the activity.  These steps come from the relationship through JobActivity down to ActivityStep",
                                                    "items": {
                                                        "description": "A DTO for an IActivityStep",
                                                        "properties": {
                                                            "ActivityID": {
                                                                "description": "The id of the activity this activity step belongs to",
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "ActivityStepID": {
                                                                "description": "The id of this activity step",
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "ImplementationID": {
                                                                "description": "The implementation id which is used to look up the step implementation",
                                                                "type": "string"
                                                            },
                                                            "ParameterMappings": {
                                                                "description": "The mapping of values from a source to be used for the step parameters",
                                                                "items": {
                                                                    "description": "A DTO for an IParameterMapping",
                                                                    "properties": {
                                                                        "Name": {
                                                                            "description": "The name of the parameter this mapping applies to",
                                                                            "type": "string"
                                                                        },
                                                                        "Source": {
                                                                            "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                            "type": "string"
                                                                        },
                                                                        "SourceType": {
                                                                            "description": "The source type used for supplying the parameter",
                                                                            "enum": [
                                                                                "Constant",
                                                                                "Variable"
                                                                            ],
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "readOnly": true,
                                                                "type": "array"
                                                            },
                                                            "RunOrder": {
                                                                "description": "The order of this activity step relative to other activity steps",
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "StepID": {
                                                                "description": "The id of the step",
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "StepName": {
                                                                "description": "The name of the step",
                                                                "type": "string"
                                                            },
                                                            "UseConfig": {
                                                                "description": "Indicates the configuration for the ActivityStep to use at runtime.  The build agent must provide this configuration",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "readOnly": true,
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "Status"
                                            ],
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    },
                                    "EndDate": {
                                        "description": "The UTC date and time when the job completed",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "JobID": {
                                        "description": "The ID of the job that defines the run",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "JobRunID": {
                                        "description": "The ID of this JobRun",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Parameters": {
                                        "description": "The parameters used for this run of the job",
                                        "items": {
                                            "description": "A DTO for an IParameterValue",
                                            "properties": {
                                                "Direction": {
                                                    "description": "The parameter direction (Input or Output)",
                                                    "enum": [
                                                        "Input",
                                                        "Output"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name of the parameter this value is for",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "The parameter value in string representation",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    },
                                    "StartDate": {
                                        "description": "The UTC date and time when the job started",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Status": {
                                        "description": "The status of this JobRun",
                                        "enum": [
                                            "Ready",
                                            "InProgress",
                                            "Succeeded",
                                            "Cancelled",
                                            "Failed"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "description": "A DTO for an IJobRun",
                                "properties": {
                                    "ActivityRuns": {
                                        "description": "The activity runs belonging to this JobRun",
                                        "items": {
                                            "description": "A DTO for an IActivityRun",
                                            "properties": {
                                                "ActivityRunID": {
                                                    "description": "The identifier for the ActivityRun",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "EndDate": {
                                                    "description": "Read Only. The UTC date and time when the activity completed",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "JobActivityID": {
                                                    "description": "Read Only. The ID of the Job Activity that defines this activity run",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "JobRunID": {
                                                    "description": "Read Only. The ID of the JobRun under which this ActivityRun is executing",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "Parameters": {
                                                    "description": "The parameters used for this run of the activity.  Parameters cannot be added or removed, but output parameter values may be updated.",
                                                    "items": {
                                                        "description": "A DTO for an IParameterValue",
                                                        "properties": {
                                                            "Direction": {
                                                                "description": "The parameter direction (Input or Output)",
                                                                "enum": [
                                                                    "Input",
                                                                    "Output"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "Name": {
                                                                "description": "The name of the parameter this value is for",
                                                                "type": "string"
                                                            },
                                                            "Value": {
                                                                "description": "The parameter value in string representation",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "readOnly": true,
                                                    "type": "array"
                                                },
                                                "StartDate": {
                                                    "description": "Read Only. The UTC date and time when the activity started",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "Status": {
                                                    "description": "The status of this ActivityRun",
                                                    "properties": {
                                                        "CurrentStep": {
                                                            "description": "The activity step currently executing, indicated by numeric order",
                                                            "format": "int32",
                                                            "type": "integer"
                                                        },
                                                        "Status": {
                                                            "description": "The status of the ActivityRun",
                                                            "enum": [
                                                                "Ready",
                                                                "InProgress",
                                                                "Succeeded",
                                                                "Cancelled",
                                                                "Failed"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "StepProgress": {
                                                            "description": "The percent progress from the currently executing step.  This value shall be null if progress is not available",
                                                            "format": "int32",
                                                            "type": "integer"
                                                        },
                                                        "StepStatus": {
                                                            "description": "The status text from the currently executing step",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "Steps": {
                                                    "description": "Read Only. The steps to be executed for the activity.  These steps come from the relationship through JobActivity down to ActivityStep",
                                                    "items": {
                                                        "description": "A DTO for an IActivityStep",
                                                        "properties": {
                                                            "ActivityID": {
                                                                "description": "The id of the activity this activity step belongs to",
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "ActivityStepID": {
                                                                "description": "The id of this activity step",
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "ImplementationID": {
                                                                "description": "The implementation id which is used to look up the step implementation",
                                                                "type": "string"
                                                            },
                                                            "ParameterMappings": {
                                                                "description": "The mapping of values from a source to be used for the step parameters",
                                                                "items": {
                                                                    "description": "A DTO for an IParameterMapping",
                                                                    "properties": {
                                                                        "Name": {
                                                                            "description": "The name of the parameter this mapping applies to",
                                                                            "type": "string"
                                                                        },
                                                                        "Source": {
                                                                            "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                            "type": "string"
                                                                        },
                                                                        "SourceType": {
                                                                            "description": "The source type used for supplying the parameter",
                                                                            "enum": [
                                                                                "Constant",
                                                                                "Variable"
                                                                            ],
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "readOnly": true,
                                                                "type": "array"
                                                            },
                                                            "RunOrder": {
                                                                "description": "The order of this activity step relative to other activity steps",
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "StepID": {
                                                                "description": "The id of the step",
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "StepName": {
                                                                "description": "The name of the step",
                                                                "type": "string"
                                                            },
                                                            "UseConfig": {
                                                                "description": "Indicates the configuration for the ActivityStep to use at runtime.  The build agent must provide this configuration",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "readOnly": true,
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "Status"
                                            ],
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    },
                                    "EndDate": {
                                        "description": "The UTC date and time when the job completed",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "JobID": {
                                        "description": "The ID of the job that defines the run",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "JobRunID": {
                                        "description": "The ID of this JobRun",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Parameters": {
                                        "description": "The parameters used for this run of the job",
                                        "items": {
                                            "description": "A DTO for an IParameterValue",
                                            "properties": {
                                                "Direction": {
                                                    "description": "The parameter direction (Input or Output)",
                                                    "enum": [
                                                        "Input",
                                                        "Output"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name of the parameter this value is for",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "The parameter value in string representation",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    },
                                    "StartDate": {
                                        "description": "The UTC date and time when the job started",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Status": {
                                        "description": "The status of this JobRun",
                                        "enum": [
                                            "Ready",
                                            "InProgress",
                                            "Succeeded",
                                            "Cancelled",
                                            "Failed"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "description": "The JobRun to create.  The JobRunID will be assigned on creation of the JobRun.",
                    "required": true
                }
            }
        },
        "/api/v2/jobRuns/{jobRunID}": {
            "delete": {
                "deprecated": false,
                "description": "Deletes a JobRun. When successful, the response is empty.  If unsuccessful, an appropriate\r\n            ApiError is returned.",
                "operationId": "JobRuns_DeleteJobRun",
                "parameters": [
                    {
                        "description": "The id of the JobRun to delete",
                        "in": "path",
                        "name": "jobRunID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Delete a JobRun",
                "tags": [
                    "JobRuns"
                ]
            },
            "get": {
                "deprecated": false,
                "description": "Gets a JobRun by ID. When successful, the response is the requested JobRun.\r\n            If unsuccessful, an appropriate ApiError is returned.",
                "operationId": "JobRuns_GetJobRun",
                "parameters": [
                    {
                        "description": "The ID of the JobRun to get.",
                        "in": "path",
                        "name": "jobRunID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "Optional. Indicates whether to include ActivityRun details.  Defaults to false.",
                        "in": "query",
                        "name": "includeActivityRunDetails",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "A DTO for an IJobRun",
                                    "properties": {
                                        "ActivityRuns": {
                                            "description": "The activity runs belonging to this JobRun",
                                            "items": {
                                                "description": "A DTO for an IActivityRun",
                                                "properties": {
                                                    "ActivityRunID": {
                                                        "description": "The identifier for the ActivityRun",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "EndDate": {
                                                        "description": "Read Only. The UTC date and time when the activity completed",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "JobActivityID": {
                                                        "description": "Read Only. The ID of the Job Activity that defines this activity run",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "JobRunID": {
                                                        "description": "Read Only. The ID of the JobRun under which this ActivityRun is executing",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "Parameters": {
                                                        "description": "The parameters used for this run of the activity.  Parameters cannot be added or removed, but output parameter values may be updated.",
                                                        "items": {
                                                            "description": "A DTO for an IParameterValue",
                                                            "properties": {
                                                                "Direction": {
                                                                    "description": "The parameter direction (Input or Output)",
                                                                    "enum": [
                                                                        "Input",
                                                                        "Output"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "Name": {
                                                                    "description": "The name of the parameter this value is for",
                                                                    "type": "string"
                                                                },
                                                                "Value": {
                                                                    "description": "The parameter value in string representation",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "readOnly": true,
                                                        "type": "array"
                                                    },
                                                    "StartDate": {
                                                        "description": "Read Only. The UTC date and time when the activity started",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "Status": {
                                                        "description": "The status of this ActivityRun",
                                                        "properties": {
                                                            "CurrentStep": {
                                                                "description": "The activity step currently executing, indicated by numeric order",
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "Status": {
                                                                "description": "The status of the ActivityRun",
                                                                "enum": [
                                                                    "Ready",
                                                                    "InProgress",
                                                                    "Succeeded",
                                                                    "Cancelled",
                                                                    "Failed"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "StepProgress": {
                                                                "description": "The percent progress from the currently executing step.  This value shall be null if progress is not available",
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "StepStatus": {
                                                                "description": "The status text from the currently executing step",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "Steps": {
                                                        "description": "Read Only. The steps to be executed for the activity.  These steps come from the relationship through JobActivity down to ActivityStep",
                                                        "items": {
                                                            "description": "A DTO for an IActivityStep",
                                                            "properties": {
                                                                "ActivityID": {
                                                                    "description": "The id of the activity this activity step belongs to",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "ActivityStepID": {
                                                                    "description": "The id of this activity step",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "ImplementationID": {
                                                                    "description": "The implementation id which is used to look up the step implementation",
                                                                    "type": "string"
                                                                },
                                                                "ParameterMappings": {
                                                                    "description": "The mapping of values from a source to be used for the step parameters",
                                                                    "items": {
                                                                        "description": "A DTO for an IParameterMapping",
                                                                        "properties": {
                                                                            "Name": {
                                                                                "description": "The name of the parameter this mapping applies to",
                                                                                "type": "string"
                                                                            },
                                                                            "Source": {
                                                                                "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                                "type": "string"
                                                                            },
                                                                            "SourceType": {
                                                                                "description": "The source type used for supplying the parameter",
                                                                                "enum": [
                                                                                    "Constant",
                                                                                    "Variable"
                                                                                ],
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "readOnly": true,
                                                                    "type": "array"
                                                                },
                                                                "RunOrder": {
                                                                    "description": "The order of this activity step relative to other activity steps",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "StepID": {
                                                                    "description": "The id of the step",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "StepName": {
                                                                    "description": "The name of the step",
                                                                    "type": "string"
                                                                },
                                                                "UseConfig": {
                                                                    "description": "Indicates the configuration for the ActivityStep to use at runtime.  The build agent must provide this configuration",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "readOnly": true,
                                                        "type": "array"
                                                    }
                                                },
                                                "required": [
                                                    "Status"
                                                ],
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "EndDate": {
                                            "description": "The UTC date and time when the job completed",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "JobID": {
                                            "description": "The ID of the job that defines the run",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "JobRunID": {
                                            "description": "The ID of this JobRun",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Parameters": {
                                            "description": "The parameters used for this run of the job",
                                            "items": {
                                                "description": "A DTO for an IParameterValue",
                                                "properties": {
                                                    "Direction": {
                                                        "description": "The parameter direction (Input or Output)",
                                                        "enum": [
                                                            "Input",
                                                            "Output"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the parameter this value is for",
                                                        "type": "string"
                                                    },
                                                    "Value": {
                                                        "description": "The parameter value in string representation",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "StartDate": {
                                            "description": "The UTC date and time when the job started",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "The status of this JobRun",
                                            "enum": [
                                                "Ready",
                                                "InProgress",
                                                "Succeeded",
                                                "Cancelled",
                                                "Failed"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "description": "A DTO for an IJobRun",
                                    "properties": {
                                        "ActivityRuns": {
                                            "description": "The activity runs belonging to this JobRun",
                                            "items": {
                                                "description": "A DTO for an IActivityRun",
                                                "properties": {
                                                    "ActivityRunID": {
                                                        "description": "The identifier for the ActivityRun",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "EndDate": {
                                                        "description": "Read Only. The UTC date and time when the activity completed",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "JobActivityID": {
                                                        "description": "Read Only. The ID of the Job Activity that defines this activity run",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "JobRunID": {
                                                        "description": "Read Only. The ID of the JobRun under which this ActivityRun is executing",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "Parameters": {
                                                        "description": "The parameters used for this run of the activity.  Parameters cannot be added or removed, but output parameter values may be updated.",
                                                        "items": {
                                                            "description": "A DTO for an IParameterValue",
                                                            "properties": {
                                                                "Direction": {
                                                                    "description": "The parameter direction (Input or Output)",
                                                                    "enum": [
                                                                        "Input",
                                                                        "Output"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "Name": {
                                                                    "description": "The name of the parameter this value is for",
                                                                    "type": "string"
                                                                },
                                                                "Value": {
                                                                    "description": "The parameter value in string representation",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "readOnly": true,
                                                        "type": "array"
                                                    },
                                                    "StartDate": {
                                                        "description": "Read Only. The UTC date and time when the activity started",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "Status": {
                                                        "description": "The status of this ActivityRun",
                                                        "properties": {
                                                            "CurrentStep": {
                                                                "description": "The activity step currently executing, indicated by numeric order",
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "Status": {
                                                                "description": "The status of the ActivityRun",
                                                                "enum": [
                                                                    "Ready",
                                                                    "InProgress",
                                                                    "Succeeded",
                                                                    "Cancelled",
                                                                    "Failed"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "StepProgress": {
                                                                "description": "The percent progress from the currently executing step.  This value shall be null if progress is not available",
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "StepStatus": {
                                                                "description": "The status text from the currently executing step",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "Steps": {
                                                        "description": "Read Only. The steps to be executed for the activity.  These steps come from the relationship through JobActivity down to ActivityStep",
                                                        "items": {
                                                            "description": "A DTO for an IActivityStep",
                                                            "properties": {
                                                                "ActivityID": {
                                                                    "description": "The id of the activity this activity step belongs to",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "ActivityStepID": {
                                                                    "description": "The id of this activity step",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "ImplementationID": {
                                                                    "description": "The implementation id which is used to look up the step implementation",
                                                                    "type": "string"
                                                                },
                                                                "ParameterMappings": {
                                                                    "description": "The mapping of values from a source to be used for the step parameters",
                                                                    "items": {
                                                                        "description": "A DTO for an IParameterMapping",
                                                                        "properties": {
                                                                            "Name": {
                                                                                "description": "The name of the parameter this mapping applies to",
                                                                                "type": "string"
                                                                            },
                                                                            "Source": {
                                                                                "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                                "type": "string"
                                                                            },
                                                                            "SourceType": {
                                                                                "description": "The source type used for supplying the parameter",
                                                                                "enum": [
                                                                                    "Constant",
                                                                                    "Variable"
                                                                                ],
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "readOnly": true,
                                                                    "type": "array"
                                                                },
                                                                "RunOrder": {
                                                                    "description": "The order of this activity step relative to other activity steps",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "StepID": {
                                                                    "description": "The id of the step",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "StepName": {
                                                                    "description": "The name of the step",
                                                                    "type": "string"
                                                                },
                                                                "UseConfig": {
                                                                    "description": "Indicates the configuration for the ActivityStep to use at runtime.  The build agent must provide this configuration",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "readOnly": true,
                                                        "type": "array"
                                                    }
                                                },
                                                "required": [
                                                    "Status"
                                                ],
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "EndDate": {
                                            "description": "The UTC date and time when the job completed",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "JobID": {
                                            "description": "The ID of the job that defines the run",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "JobRunID": {
                                            "description": "The ID of this JobRun",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Parameters": {
                                            "description": "The parameters used for this run of the job",
                                            "items": {
                                                "description": "A DTO for an IParameterValue",
                                                "properties": {
                                                    "Direction": {
                                                        "description": "The parameter direction (Input or Output)",
                                                        "enum": [
                                                            "Input",
                                                            "Output"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the parameter this value is for",
                                                        "type": "string"
                                                    },
                                                    "Value": {
                                                        "description": "The parameter value in string representation",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "StartDate": {
                                            "description": "The UTC date and time when the job started",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "The status of this JobRun",
                                            "enum": [
                                                "Ready",
                                                "InProgress",
                                                "Succeeded",
                                                "Cancelled",
                                                "Failed"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "description": "A DTO for an IJobRun",
                                    "properties": {
                                        "ActivityRuns": {
                                            "description": "The activity runs belonging to this JobRun",
                                            "items": {
                                                "description": "A DTO for an IActivityRun",
                                                "properties": {
                                                    "ActivityRunID": {
                                                        "description": "The identifier for the ActivityRun",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "EndDate": {
                                                        "description": "Read Only. The UTC date and time when the activity completed",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "JobActivityID": {
                                                        "description": "Read Only. The ID of the Job Activity that defines this activity run",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "JobRunID": {
                                                        "description": "Read Only. The ID of the JobRun under which this ActivityRun is executing",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "Parameters": {
                                                        "description": "The parameters used for this run of the activity.  Parameters cannot be added or removed, but output parameter values may be updated.",
                                                        "items": {
                                                            "description": "A DTO for an IParameterValue",
                                                            "properties": {
                                                                "Direction": {
                                                                    "description": "The parameter direction (Input or Output)",
                                                                    "enum": [
                                                                        "Input",
                                                                        "Output"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "Name": {
                                                                    "description": "The name of the parameter this value is for",
                                                                    "type": "string"
                                                                },
                                                                "Value": {
                                                                    "description": "The parameter value in string representation",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "readOnly": true,
                                                        "type": "array"
                                                    },
                                                    "StartDate": {
                                                        "description": "Read Only. The UTC date and time when the activity started",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "Status": {
                                                        "description": "The status of this ActivityRun",
                                                        "properties": {
                                                            "CurrentStep": {
                                                                "description": "The activity step currently executing, indicated by numeric order",
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "Status": {
                                                                "description": "The status of the ActivityRun",
                                                                "enum": [
                                                                    "Ready",
                                                                    "InProgress",
                                                                    "Succeeded",
                                                                    "Cancelled",
                                                                    "Failed"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "StepProgress": {
                                                                "description": "The percent progress from the currently executing step.  This value shall be null if progress is not available",
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "StepStatus": {
                                                                "description": "The status text from the currently executing step",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "Steps": {
                                                        "description": "Read Only. The steps to be executed for the activity.  These steps come from the relationship through JobActivity down to ActivityStep",
                                                        "items": {
                                                            "description": "A DTO for an IActivityStep",
                                                            "properties": {
                                                                "ActivityID": {
                                                                    "description": "The id of the activity this activity step belongs to",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "ActivityStepID": {
                                                                    "description": "The id of this activity step",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "ImplementationID": {
                                                                    "description": "The implementation id which is used to look up the step implementation",
                                                                    "type": "string"
                                                                },
                                                                "ParameterMappings": {
                                                                    "description": "The mapping of values from a source to be used for the step parameters",
                                                                    "items": {
                                                                        "description": "A DTO for an IParameterMapping",
                                                                        "properties": {
                                                                            "Name": {
                                                                                "description": "The name of the parameter this mapping applies to",
                                                                                "type": "string"
                                                                            },
                                                                            "Source": {
                                                                                "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                                "type": "string"
                                                                            },
                                                                            "SourceType": {
                                                                                "description": "The source type used for supplying the parameter",
                                                                                "enum": [
                                                                                    "Constant",
                                                                                    "Variable"
                                                                                ],
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "readOnly": true,
                                                                    "type": "array"
                                                                },
                                                                "RunOrder": {
                                                                    "description": "The order of this activity step relative to other activity steps",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "StepID": {
                                                                    "description": "The id of the step",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "StepName": {
                                                                    "description": "The name of the step",
                                                                    "type": "string"
                                                                },
                                                                "UseConfig": {
                                                                    "description": "Indicates the configuration for the ActivityStep to use at runtime.  The build agent must provide this configuration",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "readOnly": true,
                                                        "type": "array"
                                                    }
                                                },
                                                "required": [
                                                    "Status"
                                                ],
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "EndDate": {
                                            "description": "The UTC date and time when the job completed",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "JobID": {
                                            "description": "The ID of the job that defines the run",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "JobRunID": {
                                            "description": "The ID of this JobRun",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Parameters": {
                                            "description": "The parameters used for this run of the job",
                                            "items": {
                                                "description": "A DTO for an IParameterValue",
                                                "properties": {
                                                    "Direction": {
                                                        "description": "The parameter direction (Input or Output)",
                                                        "enum": [
                                                            "Input",
                                                            "Output"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the parameter this value is for",
                                                        "type": "string"
                                                    },
                                                    "Value": {
                                                        "description": "The parameter value in string representation",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "StartDate": {
                                            "description": "The UTC date and time when the job started",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "The status of this JobRun",
                                            "enum": [
                                                "Ready",
                                                "InProgress",
                                                "Succeeded",
                                                "Cancelled",
                                                "Failed"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "description": "A DTO for an IJobRun",
                                    "properties": {
                                        "ActivityRuns": {
                                            "description": "The activity runs belonging to this JobRun",
                                            "items": {
                                                "description": "A DTO for an IActivityRun",
                                                "properties": {
                                                    "ActivityRunID": {
                                                        "description": "The identifier for the ActivityRun",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "EndDate": {
                                                        "description": "Read Only. The UTC date and time when the activity completed",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "JobActivityID": {
                                                        "description": "Read Only. The ID of the Job Activity that defines this activity run",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "JobRunID": {
                                                        "description": "Read Only. The ID of the JobRun under which this ActivityRun is executing",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "Parameters": {
                                                        "description": "The parameters used for this run of the activity.  Parameters cannot be added or removed, but output parameter values may be updated.",
                                                        "items": {
                                                            "description": "A DTO for an IParameterValue",
                                                            "properties": {
                                                                "Direction": {
                                                                    "description": "The parameter direction (Input or Output)",
                                                                    "enum": [
                                                                        "Input",
                                                                        "Output"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "Name": {
                                                                    "description": "The name of the parameter this value is for",
                                                                    "type": "string"
                                                                },
                                                                "Value": {
                                                                    "description": "The parameter value in string representation",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "readOnly": true,
                                                        "type": "array"
                                                    },
                                                    "StartDate": {
                                                        "description": "Read Only. The UTC date and time when the activity started",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "Status": {
                                                        "description": "The status of this ActivityRun",
                                                        "properties": {
                                                            "CurrentStep": {
                                                                "description": "The activity step currently executing, indicated by numeric order",
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "Status": {
                                                                "description": "The status of the ActivityRun",
                                                                "enum": [
                                                                    "Ready",
                                                                    "InProgress",
                                                                    "Succeeded",
                                                                    "Cancelled",
                                                                    "Failed"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "StepProgress": {
                                                                "description": "The percent progress from the currently executing step.  This value shall be null if progress is not available",
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "StepStatus": {
                                                                "description": "The status text from the currently executing step",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "Steps": {
                                                        "description": "Read Only. The steps to be executed for the activity.  These steps come from the relationship through JobActivity down to ActivityStep",
                                                        "items": {
                                                            "description": "A DTO for an IActivityStep",
                                                            "properties": {
                                                                "ActivityID": {
                                                                    "description": "The id of the activity this activity step belongs to",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "ActivityStepID": {
                                                                    "description": "The id of this activity step",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "ImplementationID": {
                                                                    "description": "The implementation id which is used to look up the step implementation",
                                                                    "type": "string"
                                                                },
                                                                "ParameterMappings": {
                                                                    "description": "The mapping of values from a source to be used for the step parameters",
                                                                    "items": {
                                                                        "description": "A DTO for an IParameterMapping",
                                                                        "properties": {
                                                                            "Name": {
                                                                                "description": "The name of the parameter this mapping applies to",
                                                                                "type": "string"
                                                                            },
                                                                            "Source": {
                                                                                "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                                "type": "string"
                                                                            },
                                                                            "SourceType": {
                                                                                "description": "The source type used for supplying the parameter",
                                                                                "enum": [
                                                                                    "Constant",
                                                                                    "Variable"
                                                                                ],
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "readOnly": true,
                                                                    "type": "array"
                                                                },
                                                                "RunOrder": {
                                                                    "description": "The order of this activity step relative to other activity steps",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "StepID": {
                                                                    "description": "The id of the step",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "StepName": {
                                                                    "description": "The name of the step",
                                                                    "type": "string"
                                                                },
                                                                "UseConfig": {
                                                                    "description": "Indicates the configuration for the ActivityStep to use at runtime.  The build agent must provide this configuration",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "readOnly": true,
                                                        "type": "array"
                                                    }
                                                },
                                                "required": [
                                                    "Status"
                                                ],
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "EndDate": {
                                            "description": "The UTC date and time when the job completed",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "JobID": {
                                            "description": "The ID of the job that defines the run",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "JobRunID": {
                                            "description": "The ID of this JobRun",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Parameters": {
                                            "description": "The parameters used for this run of the job",
                                            "items": {
                                                "description": "A DTO for an IParameterValue",
                                                "properties": {
                                                    "Direction": {
                                                        "description": "The parameter direction (Input or Output)",
                                                        "enum": [
                                                            "Input",
                                                            "Output"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the parameter this value is for",
                                                        "type": "string"
                                                    },
                                                    "Value": {
                                                        "description": "The parameter value in string representation",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "StartDate": {
                                            "description": "The UTC date and time when the job started",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "The status of this JobRun",
                                            "enum": [
                                                "Ready",
                                                "InProgress",
                                                "Succeeded",
                                                "Cancelled",
                                                "Failed"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get a JobRun by ID",
                "tags": [
                    "JobRuns"
                ]
            },
            "put": {
                "deprecated": false,
                "description": "/// \r\n            Updates a JobRun.  The body of the PUT is the updated JobRun.\r\n            When successful, the response is empty.  If unsuccessful, an appropriate ApiError is returned.",
                "operationId": "JobRuns_PutJobRun",
                "parameters": [
                    {
                        "description": "The id of the JobRun to update",
                        "in": "path",
                        "name": "jobRunID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Update a JobRun",
                "tags": [
                    "JobRuns"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "A DTO for an IJobRun",
                                "properties": {
                                    "ActivityRuns": {
                                        "description": "The activity runs belonging to this JobRun",
                                        "items": {
                                            "description": "A DTO for an IActivityRun",
                                            "properties": {
                                                "ActivityRunID": {
                                                    "description": "The identifier for the ActivityRun",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "EndDate": {
                                                    "description": "Read Only. The UTC date and time when the activity completed",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "JobActivityID": {
                                                    "description": "Read Only. The ID of the Job Activity that defines this activity run",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "JobRunID": {
                                                    "description": "Read Only. The ID of the JobRun under which this ActivityRun is executing",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "Parameters": {
                                                    "description": "The parameters used for this run of the activity.  Parameters cannot be added or removed, but output parameter values may be updated.",
                                                    "items": {
                                                        "description": "A DTO for an IParameterValue",
                                                        "properties": {
                                                            "Direction": {
                                                                "description": "The parameter direction (Input or Output)",
                                                                "enum": [
                                                                    "Input",
                                                                    "Output"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "Name": {
                                                                "description": "The name of the parameter this value is for",
                                                                "type": "string"
                                                            },
                                                            "Value": {
                                                                "description": "The parameter value in string representation",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "readOnly": true,
                                                    "type": "array"
                                                },
                                                "StartDate": {
                                                    "description": "Read Only. The UTC date and time when the activity started",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "Status": {
                                                    "description": "The status of this ActivityRun",
                                                    "properties": {
                                                        "CurrentStep": {
                                                            "description": "The activity step currently executing, indicated by numeric order",
                                                            "format": "int32",
                                                            "type": "integer"
                                                        },
                                                        "Status": {
                                                            "description": "The status of the ActivityRun",
                                                            "enum": [
                                                                "Ready",
                                                                "InProgress",
                                                                "Succeeded",
                                                                "Cancelled",
                                                                "Failed"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "StepProgress": {
                                                            "description": "The percent progress from the currently executing step.  This value shall be null if progress is not available",
                                                            "format": "int32",
                                                            "type": "integer"
                                                        },
                                                        "StepStatus": {
                                                            "description": "The status text from the currently executing step",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "Steps": {
                                                    "description": "Read Only. The steps to be executed for the activity.  These steps come from the relationship through JobActivity down to ActivityStep",
                                                    "items": {
                                                        "description": "A DTO for an IActivityStep",
                                                        "properties": {
                                                            "ActivityID": {
                                                                "description": "The id of the activity this activity step belongs to",
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "ActivityStepID": {
                                                                "description": "The id of this activity step",
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "ImplementationID": {
                                                                "description": "The implementation id which is used to look up the step implementation",
                                                                "type": "string"
                                                            },
                                                            "ParameterMappings": {
                                                                "description": "The mapping of values from a source to be used for the step parameters",
                                                                "items": {
                                                                    "description": "A DTO for an IParameterMapping",
                                                                    "properties": {
                                                                        "Name": {
                                                                            "description": "The name of the parameter this mapping applies to",
                                                                            "type": "string"
                                                                        },
                                                                        "Source": {
                                                                            "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                            "type": "string"
                                                                        },
                                                                        "SourceType": {
                                                                            "description": "The source type used for supplying the parameter",
                                                                            "enum": [
                                                                                "Constant",
                                                                                "Variable"
                                                                            ],
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "readOnly": true,
                                                                "type": "array"
                                                            },
                                                            "RunOrder": {
                                                                "description": "The order of this activity step relative to other activity steps",
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "StepID": {
                                                                "description": "The id of the step",
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "StepName": {
                                                                "description": "The name of the step",
                                                                "type": "string"
                                                            },
                                                            "UseConfig": {
                                                                "description": "Indicates the configuration for the ActivityStep to use at runtime.  The build agent must provide this configuration",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "readOnly": true,
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "Status"
                                            ],
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    },
                                    "EndDate": {
                                        "description": "The UTC date and time when the job completed",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "JobID": {
                                        "description": "The ID of the job that defines the run",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "JobRunID": {
                                        "description": "The ID of this JobRun",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Parameters": {
                                        "description": "The parameters used for this run of the job",
                                        "items": {
                                            "description": "A DTO for an IParameterValue",
                                            "properties": {
                                                "Direction": {
                                                    "description": "The parameter direction (Input or Output)",
                                                    "enum": [
                                                        "Input",
                                                        "Output"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name of the parameter this value is for",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "The parameter value in string representation",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    },
                                    "StartDate": {
                                        "description": "The UTC date and time when the job started",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Status": {
                                        "description": "The status of this JobRun",
                                        "enum": [
                                            "Ready",
                                            "InProgress",
                                            "Succeeded",
                                            "Cancelled",
                                            "Failed"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "description": "A DTO for an IJobRun",
                                "properties": {
                                    "ActivityRuns": {
                                        "description": "The activity runs belonging to this JobRun",
                                        "items": {
                                            "description": "A DTO for an IActivityRun",
                                            "properties": {
                                                "ActivityRunID": {
                                                    "description": "The identifier for the ActivityRun",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "EndDate": {
                                                    "description": "Read Only. The UTC date and time when the activity completed",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "JobActivityID": {
                                                    "description": "Read Only. The ID of the Job Activity that defines this activity run",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "JobRunID": {
                                                    "description": "Read Only. The ID of the JobRun under which this ActivityRun is executing",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "Parameters": {
                                                    "description": "The parameters used for this run of the activity.  Parameters cannot be added or removed, but output parameter values may be updated.",
                                                    "items": {
                                                        "description": "A DTO for an IParameterValue",
                                                        "properties": {
                                                            "Direction": {
                                                                "description": "The parameter direction (Input or Output)",
                                                                "enum": [
                                                                    "Input",
                                                                    "Output"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "Name": {
                                                                "description": "The name of the parameter this value is for",
                                                                "type": "string"
                                                            },
                                                            "Value": {
                                                                "description": "The parameter value in string representation",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "readOnly": true,
                                                    "type": "array"
                                                },
                                                "StartDate": {
                                                    "description": "Read Only. The UTC date and time when the activity started",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "Status": {
                                                    "description": "The status of this ActivityRun",
                                                    "properties": {
                                                        "CurrentStep": {
                                                            "description": "The activity step currently executing, indicated by numeric order",
                                                            "format": "int32",
                                                            "type": "integer"
                                                        },
                                                        "Status": {
                                                            "description": "The status of the ActivityRun",
                                                            "enum": [
                                                                "Ready",
                                                                "InProgress",
                                                                "Succeeded",
                                                                "Cancelled",
                                                                "Failed"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "StepProgress": {
                                                            "description": "The percent progress from the currently executing step.  This value shall be null if progress is not available",
                                                            "format": "int32",
                                                            "type": "integer"
                                                        },
                                                        "StepStatus": {
                                                            "description": "The status text from the currently executing step",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "Steps": {
                                                    "description": "Read Only. The steps to be executed for the activity.  These steps come from the relationship through JobActivity down to ActivityStep",
                                                    "items": {
                                                        "description": "A DTO for an IActivityStep",
                                                        "properties": {
                                                            "ActivityID": {
                                                                "description": "The id of the activity this activity step belongs to",
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "ActivityStepID": {
                                                                "description": "The id of this activity step",
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "ImplementationID": {
                                                                "description": "The implementation id which is used to look up the step implementation",
                                                                "type": "string"
                                                            },
                                                            "ParameterMappings": {
                                                                "description": "The mapping of values from a source to be used for the step parameters",
                                                                "items": {
                                                                    "description": "A DTO for an IParameterMapping",
                                                                    "properties": {
                                                                        "Name": {
                                                                            "description": "The name of the parameter this mapping applies to",
                                                                            "type": "string"
                                                                        },
                                                                        "Source": {
                                                                            "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                            "type": "string"
                                                                        },
                                                                        "SourceType": {
                                                                            "description": "The source type used for supplying the parameter",
                                                                            "enum": [
                                                                                "Constant",
                                                                                "Variable"
                                                                            ],
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "readOnly": true,
                                                                "type": "array"
                                                            },
                                                            "RunOrder": {
                                                                "description": "The order of this activity step relative to other activity steps",
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "StepID": {
                                                                "description": "The id of the step",
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "StepName": {
                                                                "description": "The name of the step",
                                                                "type": "string"
                                                            },
                                                            "UseConfig": {
                                                                "description": "Indicates the configuration for the ActivityStep to use at runtime.  The build agent must provide this configuration",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "readOnly": true,
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "Status"
                                            ],
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    },
                                    "EndDate": {
                                        "description": "The UTC date and time when the job completed",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "JobID": {
                                        "description": "The ID of the job that defines the run",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "JobRunID": {
                                        "description": "The ID of this JobRun",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Parameters": {
                                        "description": "The parameters used for this run of the job",
                                        "items": {
                                            "description": "A DTO for an IParameterValue",
                                            "properties": {
                                                "Direction": {
                                                    "description": "The parameter direction (Input or Output)",
                                                    "enum": [
                                                        "Input",
                                                        "Output"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name of the parameter this value is for",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "The parameter value in string representation",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    },
                                    "StartDate": {
                                        "description": "The UTC date and time when the job started",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Status": {
                                        "description": "The status of this JobRun",
                                        "enum": [
                                            "Ready",
                                            "InProgress",
                                            "Succeeded",
                                            "Cancelled",
                                            "Failed"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "description": "A DTO for an IJobRun",
                                "properties": {
                                    "ActivityRuns": {
                                        "description": "The activity runs belonging to this JobRun",
                                        "items": {
                                            "description": "A DTO for an IActivityRun",
                                            "properties": {
                                                "ActivityRunID": {
                                                    "description": "The identifier for the ActivityRun",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "EndDate": {
                                                    "description": "Read Only. The UTC date and time when the activity completed",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "JobActivityID": {
                                                    "description": "Read Only. The ID of the Job Activity that defines this activity run",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "JobRunID": {
                                                    "description": "Read Only. The ID of the JobRun under which this ActivityRun is executing",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "Parameters": {
                                                    "description": "The parameters used for this run of the activity.  Parameters cannot be added or removed, but output parameter values may be updated.",
                                                    "items": {
                                                        "description": "A DTO for an IParameterValue",
                                                        "properties": {
                                                            "Direction": {
                                                                "description": "The parameter direction (Input or Output)",
                                                                "enum": [
                                                                    "Input",
                                                                    "Output"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "Name": {
                                                                "description": "The name of the parameter this value is for",
                                                                "type": "string"
                                                            },
                                                            "Value": {
                                                                "description": "The parameter value in string representation",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "readOnly": true,
                                                    "type": "array"
                                                },
                                                "StartDate": {
                                                    "description": "Read Only. The UTC date and time when the activity started",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "Status": {
                                                    "description": "The status of this ActivityRun",
                                                    "properties": {
                                                        "CurrentStep": {
                                                            "description": "The activity step currently executing, indicated by numeric order",
                                                            "format": "int32",
                                                            "type": "integer"
                                                        },
                                                        "Status": {
                                                            "description": "The status of the ActivityRun",
                                                            "enum": [
                                                                "Ready",
                                                                "InProgress",
                                                                "Succeeded",
                                                                "Cancelled",
                                                                "Failed"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "StepProgress": {
                                                            "description": "The percent progress from the currently executing step.  This value shall be null if progress is not available",
                                                            "format": "int32",
                                                            "type": "integer"
                                                        },
                                                        "StepStatus": {
                                                            "description": "The status text from the currently executing step",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "Steps": {
                                                    "description": "Read Only. The steps to be executed for the activity.  These steps come from the relationship through JobActivity down to ActivityStep",
                                                    "items": {
                                                        "description": "A DTO for an IActivityStep",
                                                        "properties": {
                                                            "ActivityID": {
                                                                "description": "The id of the activity this activity step belongs to",
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "ActivityStepID": {
                                                                "description": "The id of this activity step",
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "ImplementationID": {
                                                                "description": "The implementation id which is used to look up the step implementation",
                                                                "type": "string"
                                                            },
                                                            "ParameterMappings": {
                                                                "description": "The mapping of values from a source to be used for the step parameters",
                                                                "items": {
                                                                    "description": "A DTO for an IParameterMapping",
                                                                    "properties": {
                                                                        "Name": {
                                                                            "description": "The name of the parameter this mapping applies to",
                                                                            "type": "string"
                                                                        },
                                                                        "Source": {
                                                                            "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                            "type": "string"
                                                                        },
                                                                        "SourceType": {
                                                                            "description": "The source type used for supplying the parameter",
                                                                            "enum": [
                                                                                "Constant",
                                                                                "Variable"
                                                                            ],
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "readOnly": true,
                                                                "type": "array"
                                                            },
                                                            "RunOrder": {
                                                                "description": "The order of this activity step relative to other activity steps",
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "StepID": {
                                                                "description": "The id of the step",
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "StepName": {
                                                                "description": "The name of the step",
                                                                "type": "string"
                                                            },
                                                            "UseConfig": {
                                                                "description": "Indicates the configuration for the ActivityStep to use at runtime.  The build agent must provide this configuration",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "readOnly": true,
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "Status"
                                            ],
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    },
                                    "EndDate": {
                                        "description": "The UTC date and time when the job completed",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "JobID": {
                                        "description": "The ID of the job that defines the run",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "JobRunID": {
                                        "description": "The ID of this JobRun",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Parameters": {
                                        "description": "The parameters used for this run of the job",
                                        "items": {
                                            "description": "A DTO for an IParameterValue",
                                            "properties": {
                                                "Direction": {
                                                    "description": "The parameter direction (Input or Output)",
                                                    "enum": [
                                                        "Input",
                                                        "Output"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name of the parameter this value is for",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "The parameter value in string representation",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    },
                                    "StartDate": {
                                        "description": "The UTC date and time when the job started",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Status": {
                                        "description": "The status of this JobRun",
                                        "enum": [
                                            "Ready",
                                            "InProgress",
                                            "Succeeded",
                                            "Cancelled",
                                            "Failed"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "text/xml": {
                            "schema": {
                                "description": "A DTO for an IJobRun",
                                "properties": {
                                    "ActivityRuns": {
                                        "description": "The activity runs belonging to this JobRun",
                                        "items": {
                                            "description": "A DTO for an IActivityRun",
                                            "properties": {
                                                "ActivityRunID": {
                                                    "description": "The identifier for the ActivityRun",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "EndDate": {
                                                    "description": "Read Only. The UTC date and time when the activity completed",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "JobActivityID": {
                                                    "description": "Read Only. The ID of the Job Activity that defines this activity run",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "JobRunID": {
                                                    "description": "Read Only. The ID of the JobRun under which this ActivityRun is executing",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "Parameters": {
                                                    "description": "The parameters used for this run of the activity.  Parameters cannot be added or removed, but output parameter values may be updated.",
                                                    "items": {
                                                        "description": "A DTO for an IParameterValue",
                                                        "properties": {
                                                            "Direction": {
                                                                "description": "The parameter direction (Input or Output)",
                                                                "enum": [
                                                                    "Input",
                                                                    "Output"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "Name": {
                                                                "description": "The name of the parameter this value is for",
                                                                "type": "string"
                                                            },
                                                            "Value": {
                                                                "description": "The parameter value in string representation",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "readOnly": true,
                                                    "type": "array"
                                                },
                                                "StartDate": {
                                                    "description": "Read Only. The UTC date and time when the activity started",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "Status": {
                                                    "description": "The status of this ActivityRun",
                                                    "properties": {
                                                        "CurrentStep": {
                                                            "description": "The activity step currently executing, indicated by numeric order",
                                                            "format": "int32",
                                                            "type": "integer"
                                                        },
                                                        "Status": {
                                                            "description": "The status of the ActivityRun",
                                                            "enum": [
                                                                "Ready",
                                                                "InProgress",
                                                                "Succeeded",
                                                                "Cancelled",
                                                                "Failed"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "StepProgress": {
                                                            "description": "The percent progress from the currently executing step.  This value shall be null if progress is not available",
                                                            "format": "int32",
                                                            "type": "integer"
                                                        },
                                                        "StepStatus": {
                                                            "description": "The status text from the currently executing step",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "Steps": {
                                                    "description": "Read Only. The steps to be executed for the activity.  These steps come from the relationship through JobActivity down to ActivityStep",
                                                    "items": {
                                                        "description": "A DTO for an IActivityStep",
                                                        "properties": {
                                                            "ActivityID": {
                                                                "description": "The id of the activity this activity step belongs to",
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "ActivityStepID": {
                                                                "description": "The id of this activity step",
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "ImplementationID": {
                                                                "description": "The implementation id which is used to look up the step implementation",
                                                                "type": "string"
                                                            },
                                                            "ParameterMappings": {
                                                                "description": "The mapping of values from a source to be used for the step parameters",
                                                                "items": {
                                                                    "description": "A DTO for an IParameterMapping",
                                                                    "properties": {
                                                                        "Name": {
                                                                            "description": "The name of the parameter this mapping applies to",
                                                                            "type": "string"
                                                                        },
                                                                        "Source": {
                                                                            "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                            "type": "string"
                                                                        },
                                                                        "SourceType": {
                                                                            "description": "The source type used for supplying the parameter",
                                                                            "enum": [
                                                                                "Constant",
                                                                                "Variable"
                                                                            ],
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "readOnly": true,
                                                                "type": "array"
                                                            },
                                                            "RunOrder": {
                                                                "description": "The order of this activity step relative to other activity steps",
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "StepID": {
                                                                "description": "The id of the step",
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "StepName": {
                                                                "description": "The name of the step",
                                                                "type": "string"
                                                            },
                                                            "UseConfig": {
                                                                "description": "Indicates the configuration for the ActivityStep to use at runtime.  The build agent must provide this configuration",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "readOnly": true,
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "Status"
                                            ],
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    },
                                    "EndDate": {
                                        "description": "The UTC date and time when the job completed",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "JobID": {
                                        "description": "The ID of the job that defines the run",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "JobRunID": {
                                        "description": "The ID of this JobRun",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Parameters": {
                                        "description": "The parameters used for this run of the job",
                                        "items": {
                                            "description": "A DTO for an IParameterValue",
                                            "properties": {
                                                "Direction": {
                                                    "description": "The parameter direction (Input or Output)",
                                                    "enum": [
                                                        "Input",
                                                        "Output"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name of the parameter this value is for",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "The parameter value in string representation",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    },
                                    "StartDate": {
                                        "description": "The UTC date and time when the job started",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Status": {
                                        "description": "The status of this JobRun",
                                        "enum": [
                                            "Ready",
                                            "InProgress",
                                            "Succeeded",
                                            "Cancelled",
                                            "Failed"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "description": "A DTO for an IJobRun",
                                "properties": {
                                    "ActivityRuns": {
                                        "description": "The activity runs belonging to this JobRun",
                                        "items": {
                                            "description": "A DTO for an IActivityRun",
                                            "properties": {
                                                "ActivityRunID": {
                                                    "description": "The identifier for the ActivityRun",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "EndDate": {
                                                    "description": "Read Only. The UTC date and time when the activity completed",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "JobActivityID": {
                                                    "description": "Read Only. The ID of the Job Activity that defines this activity run",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "JobRunID": {
                                                    "description": "Read Only. The ID of the JobRun under which this ActivityRun is executing",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "Parameters": {
                                                    "description": "The parameters used for this run of the activity.  Parameters cannot be added or removed, but output parameter values may be updated.",
                                                    "items": {
                                                        "description": "A DTO for an IParameterValue",
                                                        "properties": {
                                                            "Direction": {
                                                                "description": "The parameter direction (Input or Output)",
                                                                "enum": [
                                                                    "Input",
                                                                    "Output"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "Name": {
                                                                "description": "The name of the parameter this value is for",
                                                                "type": "string"
                                                            },
                                                            "Value": {
                                                                "description": "The parameter value in string representation",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "readOnly": true,
                                                    "type": "array"
                                                },
                                                "StartDate": {
                                                    "description": "Read Only. The UTC date and time when the activity started",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "Status": {
                                                    "description": "The status of this ActivityRun",
                                                    "properties": {
                                                        "CurrentStep": {
                                                            "description": "The activity step currently executing, indicated by numeric order",
                                                            "format": "int32",
                                                            "type": "integer"
                                                        },
                                                        "Status": {
                                                            "description": "The status of the ActivityRun",
                                                            "enum": [
                                                                "Ready",
                                                                "InProgress",
                                                                "Succeeded",
                                                                "Cancelled",
                                                                "Failed"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "StepProgress": {
                                                            "description": "The percent progress from the currently executing step.  This value shall be null if progress is not available",
                                                            "format": "int32",
                                                            "type": "integer"
                                                        },
                                                        "StepStatus": {
                                                            "description": "The status text from the currently executing step",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "Steps": {
                                                    "description": "Read Only. The steps to be executed for the activity.  These steps come from the relationship through JobActivity down to ActivityStep",
                                                    "items": {
                                                        "description": "A DTO for an IActivityStep",
                                                        "properties": {
                                                            "ActivityID": {
                                                                "description": "The id of the activity this activity step belongs to",
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "ActivityStepID": {
                                                                "description": "The id of this activity step",
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "ImplementationID": {
                                                                "description": "The implementation id which is used to look up the step implementation",
                                                                "type": "string"
                                                            },
                                                            "ParameterMappings": {
                                                                "description": "The mapping of values from a source to be used for the step parameters",
                                                                "items": {
                                                                    "description": "A DTO for an IParameterMapping",
                                                                    "properties": {
                                                                        "Name": {
                                                                            "description": "The name of the parameter this mapping applies to",
                                                                            "type": "string"
                                                                        },
                                                                        "Source": {
                                                                            "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                            "type": "string"
                                                                        },
                                                                        "SourceType": {
                                                                            "description": "The source type used for supplying the parameter",
                                                                            "enum": [
                                                                                "Constant",
                                                                                "Variable"
                                                                            ],
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "readOnly": true,
                                                                "type": "array"
                                                            },
                                                            "RunOrder": {
                                                                "description": "The order of this activity step relative to other activity steps",
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "StepID": {
                                                                "description": "The id of the step",
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "StepName": {
                                                                "description": "The name of the step",
                                                                "type": "string"
                                                            },
                                                            "UseConfig": {
                                                                "description": "Indicates the configuration for the ActivityStep to use at runtime.  The build agent must provide this configuration",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "readOnly": true,
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "Status"
                                            ],
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    },
                                    "EndDate": {
                                        "description": "The UTC date and time when the job completed",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "JobID": {
                                        "description": "The ID of the job that defines the run",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "JobRunID": {
                                        "description": "The ID of this JobRun",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Parameters": {
                                        "description": "The parameters used for this run of the job",
                                        "items": {
                                            "description": "A DTO for an IParameterValue",
                                            "properties": {
                                                "Direction": {
                                                    "description": "The parameter direction (Input or Output)",
                                                    "enum": [
                                                        "Input",
                                                        "Output"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name of the parameter this value is for",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "The parameter value in string representation",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    },
                                    "StartDate": {
                                        "description": "The UTC date and time when the job started",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Status": {
                                        "description": "The status of this JobRun",
                                        "enum": [
                                            "Ready",
                                            "InProgress",
                                            "Succeeded",
                                            "Cancelled",
                                            "Failed"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "description": "The updated JobRun",
                    "required": true
                }
            }
        },
        "/api/v2/jobs": {
            "get": {
                "deprecated": false,
                "description": "Gets a collection of Jobs. When successful, the response is a PagedResponse of Jobs.\r\n            If unsuccessful, an appropriate ApiError is returned. \r\n            ///",
                "operationId": "Jobs_GetJobs",
                "parameters": [
                    {
                        "description": "Optional. The page limit.  If not specified, the default page limit is 10.",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "Optional. The page offset.  If not specified, the default page offset is 0.",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "Does it include deleted job, or not",
                        "in": "query",
                        "name": "isIncludeDeleted",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "description": "A DTO for an IJob",
                                                "properties": {
                                                    "Activities": {
                                                        "description": "The activities which are performed for the job",
                                                        "items": {
                                                            "description": "A DTO for an IJobActivity",
                                                            "properties": {
                                                                "ActivityID": {
                                                                    "description": "The ID of the activity to be run as part of the job",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "JobActivityID": {
                                                                    "description": "The ID of this job activity",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "JobID": {
                                                                    "description": "The ID of the job this job activity belongs to",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "ParameterMappings": {
                                                                    "description": "The mapping of values from a source to be used for the activity parameters",
                                                                    "items": {
                                                                        "description": "A DTO for an IParameterMapping",
                                                                        "properties": {
                                                                            "Name": {
                                                                                "description": "The name of the parameter this mapping applies to",
                                                                                "type": "string"
                                                                            },
                                                                            "Source": {
                                                                                "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                                "type": "string"
                                                                            },
                                                                            "SourceType": {
                                                                                "description": "The source type used for supplying the parameter",
                                                                                "enum": [
                                                                                    "Constant",
                                                                                    "Variable"
                                                                                ],
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "readOnly": true,
                                                                    "type": "array"
                                                                },
                                                                "RunOrder": {
                                                                    "description": "The order of this job activity relative to others in the job",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "readOnly": true,
                                                        "type": "array"
                                                    },
                                                    "Deleted": {
                                                        "description": "Indicates if the job has been deleted.",
                                                        "type": "boolean"
                                                    },
                                                    "JobID": {
                                                        "description": "The ID of the job",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the job",
                                                        "type": "string"
                                                    },
                                                    "Parameters": {
                                                        "description": "The parameters for the job",
                                                        "items": {
                                                            "description": "A DTO for an IParameter",
                                                            "properties": {
                                                                "Direction": {
                                                                    "description": "The parameter direction (Input or Output)",
                                                                    "enum": [
                                                                        "Input",
                                                                        "Output"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "Name": {
                                                                    "description": "The name of the parameter",
                                                                    "type": "string"
                                                                },
                                                                "Type": {
                                                                    "description": "The data type of the parameter",
                                                                    "enum": [
                                                                        "String",
                                                                        "Boolean",
                                                                        "Integer",
                                                                        "Float",
                                                                        "StringDictionary"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "readOnly": true,
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "description": "A DTO for an IJob",
                                                "properties": {
                                                    "Activities": {
                                                        "description": "The activities which are performed for the job",
                                                        "items": {
                                                            "description": "A DTO for an IJobActivity",
                                                            "properties": {
                                                                "ActivityID": {
                                                                    "description": "The ID of the activity to be run as part of the job",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "JobActivityID": {
                                                                    "description": "The ID of this job activity",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "JobID": {
                                                                    "description": "The ID of the job this job activity belongs to",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "ParameterMappings": {
                                                                    "description": "The mapping of values from a source to be used for the activity parameters",
                                                                    "items": {
                                                                        "description": "A DTO for an IParameterMapping",
                                                                        "properties": {
                                                                            "Name": {
                                                                                "description": "The name of the parameter this mapping applies to",
                                                                                "type": "string"
                                                                            },
                                                                            "Source": {
                                                                                "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                                "type": "string"
                                                                            },
                                                                            "SourceType": {
                                                                                "description": "The source type used for supplying the parameter",
                                                                                "enum": [
                                                                                    "Constant",
                                                                                    "Variable"
                                                                                ],
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "readOnly": true,
                                                                    "type": "array"
                                                                },
                                                                "RunOrder": {
                                                                    "description": "The order of this job activity relative to others in the job",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "readOnly": true,
                                                        "type": "array"
                                                    },
                                                    "Deleted": {
                                                        "description": "Indicates if the job has been deleted.",
                                                        "type": "boolean"
                                                    },
                                                    "JobID": {
                                                        "description": "The ID of the job",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the job",
                                                        "type": "string"
                                                    },
                                                    "Parameters": {
                                                        "description": "The parameters for the job",
                                                        "items": {
                                                            "description": "A DTO for an IParameter",
                                                            "properties": {
                                                                "Direction": {
                                                                    "description": "The parameter direction (Input or Output)",
                                                                    "enum": [
                                                                        "Input",
                                                                        "Output"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "Name": {
                                                                    "description": "The name of the parameter",
                                                                    "type": "string"
                                                                },
                                                                "Type": {
                                                                    "description": "The data type of the parameter",
                                                                    "enum": [
                                                                        "String",
                                                                        "Boolean",
                                                                        "Integer",
                                                                        "Float",
                                                                        "StringDictionary"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "readOnly": true,
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get Jobs",
                "tags": [
                    "Jobs"
                ]
            },
            "post": {
                "deprecated": false,
                "description": "Creates a Job.  The body of the POST is the Job to create.  The JobID will be assigned on\r\n            creation of the Job.  When successful, the response is the JobID.  If unsuccessful, an \r\n            appropriate ApiError is returned.",
                "operationId": "Jobs_PostJob",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Create a Job",
                "tags": [
                    "Jobs"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "A DTO for an IJob",
                                "properties": {
                                    "Activities": {
                                        "description": "The activities which are performed for the job",
                                        "items": {
                                            "description": "A DTO for an IJobActivity",
                                            "properties": {
                                                "ActivityID": {
                                                    "description": "The ID of the activity to be run as part of the job",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "JobActivityID": {
                                                    "description": "The ID of this job activity",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "JobID": {
                                                    "description": "The ID of the job this job activity belongs to",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "ParameterMappings": {
                                                    "description": "The mapping of values from a source to be used for the activity parameters",
                                                    "items": {
                                                        "description": "A DTO for an IParameterMapping",
                                                        "properties": {
                                                            "Name": {
                                                                "description": "The name of the parameter this mapping applies to",
                                                                "type": "string"
                                                            },
                                                            "Source": {
                                                                "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                "type": "string"
                                                            },
                                                            "SourceType": {
                                                                "description": "The source type used for supplying the parameter",
                                                                "enum": [
                                                                    "Constant",
                                                                    "Variable"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "readOnly": true,
                                                    "type": "array"
                                                },
                                                "RunOrder": {
                                                    "description": "The order of this job activity relative to others in the job",
                                                    "format": "int32",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    },
                                    "Deleted": {
                                        "description": "Indicates if the job has been deleted.",
                                        "type": "boolean"
                                    },
                                    "JobID": {
                                        "description": "The ID of the job",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Name": {
                                        "description": "The name of the job",
                                        "type": "string"
                                    },
                                    "Parameters": {
                                        "description": "The parameters for the job",
                                        "items": {
                                            "description": "A DTO for an IParameter",
                                            "properties": {
                                                "Direction": {
                                                    "description": "The parameter direction (Input or Output)",
                                                    "enum": [
                                                        "Input",
                                                        "Output"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name of the parameter",
                                                    "type": "string"
                                                },
                                                "Type": {
                                                    "description": "The data type of the parameter",
                                                    "enum": [
                                                        "String",
                                                        "Boolean",
                                                        "Integer",
                                                        "Float",
                                                        "StringDictionary"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "description": "A DTO for an IJob",
                                "properties": {
                                    "Activities": {
                                        "description": "The activities which are performed for the job",
                                        "items": {
                                            "description": "A DTO for an IJobActivity",
                                            "properties": {
                                                "ActivityID": {
                                                    "description": "The ID of the activity to be run as part of the job",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "JobActivityID": {
                                                    "description": "The ID of this job activity",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "JobID": {
                                                    "description": "The ID of the job this job activity belongs to",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "ParameterMappings": {
                                                    "description": "The mapping of values from a source to be used for the activity parameters",
                                                    "items": {
                                                        "description": "A DTO for an IParameterMapping",
                                                        "properties": {
                                                            "Name": {
                                                                "description": "The name of the parameter this mapping applies to",
                                                                "type": "string"
                                                            },
                                                            "Source": {
                                                                "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                "type": "string"
                                                            },
                                                            "SourceType": {
                                                                "description": "The source type used for supplying the parameter",
                                                                "enum": [
                                                                    "Constant",
                                                                    "Variable"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "readOnly": true,
                                                    "type": "array"
                                                },
                                                "RunOrder": {
                                                    "description": "The order of this job activity relative to others in the job",
                                                    "format": "int32",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    },
                                    "Deleted": {
                                        "description": "Indicates if the job has been deleted.",
                                        "type": "boolean"
                                    },
                                    "JobID": {
                                        "description": "The ID of the job",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Name": {
                                        "description": "The name of the job",
                                        "type": "string"
                                    },
                                    "Parameters": {
                                        "description": "The parameters for the job",
                                        "items": {
                                            "description": "A DTO for an IParameter",
                                            "properties": {
                                                "Direction": {
                                                    "description": "The parameter direction (Input or Output)",
                                                    "enum": [
                                                        "Input",
                                                        "Output"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name of the parameter",
                                                    "type": "string"
                                                },
                                                "Type": {
                                                    "description": "The data type of the parameter",
                                                    "enum": [
                                                        "String",
                                                        "Boolean",
                                                        "Integer",
                                                        "Float",
                                                        "StringDictionary"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "description": "A DTO for an IJob",
                                "properties": {
                                    "Activities": {
                                        "description": "The activities which are performed for the job",
                                        "items": {
                                            "description": "A DTO for an IJobActivity",
                                            "properties": {
                                                "ActivityID": {
                                                    "description": "The ID of the activity to be run as part of the job",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "JobActivityID": {
                                                    "description": "The ID of this job activity",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "JobID": {
                                                    "description": "The ID of the job this job activity belongs to",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "ParameterMappings": {
                                                    "description": "The mapping of values from a source to be used for the activity parameters",
                                                    "items": {
                                                        "description": "A DTO for an IParameterMapping",
                                                        "properties": {
                                                            "Name": {
                                                                "description": "The name of the parameter this mapping applies to",
                                                                "type": "string"
                                                            },
                                                            "Source": {
                                                                "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                "type": "string"
                                                            },
                                                            "SourceType": {
                                                                "description": "The source type used for supplying the parameter",
                                                                "enum": [
                                                                    "Constant",
                                                                    "Variable"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "readOnly": true,
                                                    "type": "array"
                                                },
                                                "RunOrder": {
                                                    "description": "The order of this job activity relative to others in the job",
                                                    "format": "int32",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    },
                                    "Deleted": {
                                        "description": "Indicates if the job has been deleted.",
                                        "type": "boolean"
                                    },
                                    "JobID": {
                                        "description": "The ID of the job",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Name": {
                                        "description": "The name of the job",
                                        "type": "string"
                                    },
                                    "Parameters": {
                                        "description": "The parameters for the job",
                                        "items": {
                                            "description": "A DTO for an IParameter",
                                            "properties": {
                                                "Direction": {
                                                    "description": "The parameter direction (Input or Output)",
                                                    "enum": [
                                                        "Input",
                                                        "Output"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name of the parameter",
                                                    "type": "string"
                                                },
                                                "Type": {
                                                    "description": "The data type of the parameter",
                                                    "enum": [
                                                        "String",
                                                        "Boolean",
                                                        "Integer",
                                                        "Float",
                                                        "StringDictionary"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "text/xml": {
                            "schema": {
                                "description": "A DTO for an IJob",
                                "properties": {
                                    "Activities": {
                                        "description": "The activities which are performed for the job",
                                        "items": {
                                            "description": "A DTO for an IJobActivity",
                                            "properties": {
                                                "ActivityID": {
                                                    "description": "The ID of the activity to be run as part of the job",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "JobActivityID": {
                                                    "description": "The ID of this job activity",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "JobID": {
                                                    "description": "The ID of the job this job activity belongs to",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "ParameterMappings": {
                                                    "description": "The mapping of values from a source to be used for the activity parameters",
                                                    "items": {
                                                        "description": "A DTO for an IParameterMapping",
                                                        "properties": {
                                                            "Name": {
                                                                "description": "The name of the parameter this mapping applies to",
                                                                "type": "string"
                                                            },
                                                            "Source": {
                                                                "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                "type": "string"
                                                            },
                                                            "SourceType": {
                                                                "description": "The source type used for supplying the parameter",
                                                                "enum": [
                                                                    "Constant",
                                                                    "Variable"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "readOnly": true,
                                                    "type": "array"
                                                },
                                                "RunOrder": {
                                                    "description": "The order of this job activity relative to others in the job",
                                                    "format": "int32",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    },
                                    "Deleted": {
                                        "description": "Indicates if the job has been deleted.",
                                        "type": "boolean"
                                    },
                                    "JobID": {
                                        "description": "The ID of the job",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Name": {
                                        "description": "The name of the job",
                                        "type": "string"
                                    },
                                    "Parameters": {
                                        "description": "The parameters for the job",
                                        "items": {
                                            "description": "A DTO for an IParameter",
                                            "properties": {
                                                "Direction": {
                                                    "description": "The parameter direction (Input or Output)",
                                                    "enum": [
                                                        "Input",
                                                        "Output"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name of the parameter",
                                                    "type": "string"
                                                },
                                                "Type": {
                                                    "description": "The data type of the parameter",
                                                    "enum": [
                                                        "String",
                                                        "Boolean",
                                                        "Integer",
                                                        "Float",
                                                        "StringDictionary"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "description": "A DTO for an IJob",
                                "properties": {
                                    "Activities": {
                                        "description": "The activities which are performed for the job",
                                        "items": {
                                            "description": "A DTO for an IJobActivity",
                                            "properties": {
                                                "ActivityID": {
                                                    "description": "The ID of the activity to be run as part of the job",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "JobActivityID": {
                                                    "description": "The ID of this job activity",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "JobID": {
                                                    "description": "The ID of the job this job activity belongs to",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "ParameterMappings": {
                                                    "description": "The mapping of values from a source to be used for the activity parameters",
                                                    "items": {
                                                        "description": "A DTO for an IParameterMapping",
                                                        "properties": {
                                                            "Name": {
                                                                "description": "The name of the parameter this mapping applies to",
                                                                "type": "string"
                                                            },
                                                            "Source": {
                                                                "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                "type": "string"
                                                            },
                                                            "SourceType": {
                                                                "description": "The source type used for supplying the parameter",
                                                                "enum": [
                                                                    "Constant",
                                                                    "Variable"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "readOnly": true,
                                                    "type": "array"
                                                },
                                                "RunOrder": {
                                                    "description": "The order of this job activity relative to others in the job",
                                                    "format": "int32",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    },
                                    "Deleted": {
                                        "description": "Indicates if the job has been deleted.",
                                        "type": "boolean"
                                    },
                                    "JobID": {
                                        "description": "The ID of the job",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Name": {
                                        "description": "The name of the job",
                                        "type": "string"
                                    },
                                    "Parameters": {
                                        "description": "The parameters for the job",
                                        "items": {
                                            "description": "A DTO for an IParameter",
                                            "properties": {
                                                "Direction": {
                                                    "description": "The parameter direction (Input or Output)",
                                                    "enum": [
                                                        "Input",
                                                        "Output"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name of the parameter",
                                                    "type": "string"
                                                },
                                                "Type": {
                                                    "description": "The data type of the parameter",
                                                    "enum": [
                                                        "String",
                                                        "Boolean",
                                                        "Integer",
                                                        "Float",
                                                        "StringDictionary"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "description": "The job to create.  The JobID will be assigned on creation of the Job.",
                    "required": true
                }
            }
        },
        "/api/v2/jobs/{jobID}": {
            "delete": {
                "deprecated": false,
                "description": "Deletes a Job. When successful, the response is empty.  If unsuccessful, an appropriate\r\n            ApiError is returned.",
                "operationId": "Jobs_DeleteJob",
                "parameters": [
                    {
                        "description": "The id of the job to delete",
                        "in": "path",
                        "name": "jobID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Mark the delete flag for the Job",
                "tags": [
                    "Jobs"
                ]
            },
            "get": {
                "deprecated": false,
                "description": "Gets a Job by ID. When successful, the response is the requested Job.\r\n            If unsuccessful, an appropriate ApiError is returned.",
                "operationId": "Jobs_GetJob",
                "parameters": [
                    {
                        "description": "The ID of the Job to get.",
                        "in": "path",
                        "name": "jobID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "Does it include deleted job, or not",
                        "in": "query",
                        "name": "isIncludeDeleted",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "A DTO for an IJob",
                                    "properties": {
                                        "Activities": {
                                            "description": "The activities which are performed for the job",
                                            "items": {
                                                "description": "A DTO for an IJobActivity",
                                                "properties": {
                                                    "ActivityID": {
                                                        "description": "The ID of the activity to be run as part of the job",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "JobActivityID": {
                                                        "description": "The ID of this job activity",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "JobID": {
                                                        "description": "The ID of the job this job activity belongs to",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "ParameterMappings": {
                                                        "description": "The mapping of values from a source to be used for the activity parameters",
                                                        "items": {
                                                            "description": "A DTO for an IParameterMapping",
                                                            "properties": {
                                                                "Name": {
                                                                    "description": "The name of the parameter this mapping applies to",
                                                                    "type": "string"
                                                                },
                                                                "Source": {
                                                                    "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                    "type": "string"
                                                                },
                                                                "SourceType": {
                                                                    "description": "The source type used for supplying the parameter",
                                                                    "enum": [
                                                                        "Constant",
                                                                        "Variable"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "readOnly": true,
                                                        "type": "array"
                                                    },
                                                    "RunOrder": {
                                                        "description": "The order of this job activity relative to others in the job",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Deleted": {
                                            "description": "Indicates if the job has been deleted.",
                                            "type": "boolean"
                                        },
                                        "JobID": {
                                            "description": "The ID of the job",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Name": {
                                            "description": "The name of the job",
                                            "type": "string"
                                        },
                                        "Parameters": {
                                            "description": "The parameters for the job",
                                            "items": {
                                                "description": "A DTO for an IParameter",
                                                "properties": {
                                                    "Direction": {
                                                        "description": "The parameter direction (Input or Output)",
                                                        "enum": [
                                                            "Input",
                                                            "Output"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the parameter",
                                                        "type": "string"
                                                    },
                                                    "Type": {
                                                        "description": "The data type of the parameter",
                                                        "enum": [
                                                            "String",
                                                            "Boolean",
                                                            "Integer",
                                                            "Float",
                                                            "StringDictionary"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "description": "A DTO for an IJob",
                                    "properties": {
                                        "Activities": {
                                            "description": "The activities which are performed for the job",
                                            "items": {
                                                "description": "A DTO for an IJobActivity",
                                                "properties": {
                                                    "ActivityID": {
                                                        "description": "The ID of the activity to be run as part of the job",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "JobActivityID": {
                                                        "description": "The ID of this job activity",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "JobID": {
                                                        "description": "The ID of the job this job activity belongs to",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "ParameterMappings": {
                                                        "description": "The mapping of values from a source to be used for the activity parameters",
                                                        "items": {
                                                            "description": "A DTO for an IParameterMapping",
                                                            "properties": {
                                                                "Name": {
                                                                    "description": "The name of the parameter this mapping applies to",
                                                                    "type": "string"
                                                                },
                                                                "Source": {
                                                                    "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                    "type": "string"
                                                                },
                                                                "SourceType": {
                                                                    "description": "The source type used for supplying the parameter",
                                                                    "enum": [
                                                                        "Constant",
                                                                        "Variable"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "readOnly": true,
                                                        "type": "array"
                                                    },
                                                    "RunOrder": {
                                                        "description": "The order of this job activity relative to others in the job",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Deleted": {
                                            "description": "Indicates if the job has been deleted.",
                                            "type": "boolean"
                                        },
                                        "JobID": {
                                            "description": "The ID of the job",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Name": {
                                            "description": "The name of the job",
                                            "type": "string"
                                        },
                                        "Parameters": {
                                            "description": "The parameters for the job",
                                            "items": {
                                                "description": "A DTO for an IParameter",
                                                "properties": {
                                                    "Direction": {
                                                        "description": "The parameter direction (Input or Output)",
                                                        "enum": [
                                                            "Input",
                                                            "Output"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the parameter",
                                                        "type": "string"
                                                    },
                                                    "Type": {
                                                        "description": "The data type of the parameter",
                                                        "enum": [
                                                            "String",
                                                            "Boolean",
                                                            "Integer",
                                                            "Float",
                                                            "StringDictionary"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "description": "A DTO for an IJob",
                                    "properties": {
                                        "Activities": {
                                            "description": "The activities which are performed for the job",
                                            "items": {
                                                "description": "A DTO for an IJobActivity",
                                                "properties": {
                                                    "ActivityID": {
                                                        "description": "The ID of the activity to be run as part of the job",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "JobActivityID": {
                                                        "description": "The ID of this job activity",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "JobID": {
                                                        "description": "The ID of the job this job activity belongs to",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "ParameterMappings": {
                                                        "description": "The mapping of values from a source to be used for the activity parameters",
                                                        "items": {
                                                            "description": "A DTO for an IParameterMapping",
                                                            "properties": {
                                                                "Name": {
                                                                    "description": "The name of the parameter this mapping applies to",
                                                                    "type": "string"
                                                                },
                                                                "Source": {
                                                                    "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                    "type": "string"
                                                                },
                                                                "SourceType": {
                                                                    "description": "The source type used for supplying the parameter",
                                                                    "enum": [
                                                                        "Constant",
                                                                        "Variable"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "readOnly": true,
                                                        "type": "array"
                                                    },
                                                    "RunOrder": {
                                                        "description": "The order of this job activity relative to others in the job",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Deleted": {
                                            "description": "Indicates if the job has been deleted.",
                                            "type": "boolean"
                                        },
                                        "JobID": {
                                            "description": "The ID of the job",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Name": {
                                            "description": "The name of the job",
                                            "type": "string"
                                        },
                                        "Parameters": {
                                            "description": "The parameters for the job",
                                            "items": {
                                                "description": "A DTO for an IParameter",
                                                "properties": {
                                                    "Direction": {
                                                        "description": "The parameter direction (Input or Output)",
                                                        "enum": [
                                                            "Input",
                                                            "Output"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the parameter",
                                                        "type": "string"
                                                    },
                                                    "Type": {
                                                        "description": "The data type of the parameter",
                                                        "enum": [
                                                            "String",
                                                            "Boolean",
                                                            "Integer",
                                                            "Float",
                                                            "StringDictionary"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "description": "A DTO for an IJob",
                                    "properties": {
                                        "Activities": {
                                            "description": "The activities which are performed for the job",
                                            "items": {
                                                "description": "A DTO for an IJobActivity",
                                                "properties": {
                                                    "ActivityID": {
                                                        "description": "The ID of the activity to be run as part of the job",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "JobActivityID": {
                                                        "description": "The ID of this job activity",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "JobID": {
                                                        "description": "The ID of the job this job activity belongs to",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "ParameterMappings": {
                                                        "description": "The mapping of values from a source to be used for the activity parameters",
                                                        "items": {
                                                            "description": "A DTO for an IParameterMapping",
                                                            "properties": {
                                                                "Name": {
                                                                    "description": "The name of the parameter this mapping applies to",
                                                                    "type": "string"
                                                                },
                                                                "Source": {
                                                                    "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                    "type": "string"
                                                                },
                                                                "SourceType": {
                                                                    "description": "The source type used for supplying the parameter",
                                                                    "enum": [
                                                                        "Constant",
                                                                        "Variable"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "readOnly": true,
                                                        "type": "array"
                                                    },
                                                    "RunOrder": {
                                                        "description": "The order of this job activity relative to others in the job",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Deleted": {
                                            "description": "Indicates if the job has been deleted.",
                                            "type": "boolean"
                                        },
                                        "JobID": {
                                            "description": "The ID of the job",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Name": {
                                            "description": "The name of the job",
                                            "type": "string"
                                        },
                                        "Parameters": {
                                            "description": "The parameters for the job",
                                            "items": {
                                                "description": "A DTO for an IParameter",
                                                "properties": {
                                                    "Direction": {
                                                        "description": "The parameter direction (Input or Output)",
                                                        "enum": [
                                                            "Input",
                                                            "Output"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the parameter",
                                                        "type": "string"
                                                    },
                                                    "Type": {
                                                        "description": "The data type of the parameter",
                                                        "enum": [
                                                            "String",
                                                            "Boolean",
                                                            "Integer",
                                                            "Float",
                                                            "StringDictionary"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get a Job by ID",
                "tags": [
                    "Jobs"
                ]
            },
            "put": {
                "deprecated": false,
                "description": "Updates a Job.  The body of the PUT is the updated Job.  When successful, the response is empty.\r\n            If unsuccessful, an appropriate ApiError is returned.",
                "operationId": "Jobs_PutJob",
                "parameters": [
                    {
                        "description": "The id of the job to update",
                        "in": "path",
                        "name": "jobID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Update a Job",
                "tags": [
                    "Jobs"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "A DTO for an IJob",
                                "properties": {
                                    "Activities": {
                                        "description": "The activities which are performed for the job",
                                        "items": {
                                            "description": "A DTO for an IJobActivity",
                                            "properties": {
                                                "ActivityID": {
                                                    "description": "The ID of the activity to be run as part of the job",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "JobActivityID": {
                                                    "description": "The ID of this job activity",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "JobID": {
                                                    "description": "The ID of the job this job activity belongs to",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "ParameterMappings": {
                                                    "description": "The mapping of values from a source to be used for the activity parameters",
                                                    "items": {
                                                        "description": "A DTO for an IParameterMapping",
                                                        "properties": {
                                                            "Name": {
                                                                "description": "The name of the parameter this mapping applies to",
                                                                "type": "string"
                                                            },
                                                            "Source": {
                                                                "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                "type": "string"
                                                            },
                                                            "SourceType": {
                                                                "description": "The source type used for supplying the parameter",
                                                                "enum": [
                                                                    "Constant",
                                                                    "Variable"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "readOnly": true,
                                                    "type": "array"
                                                },
                                                "RunOrder": {
                                                    "description": "The order of this job activity relative to others in the job",
                                                    "format": "int32",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    },
                                    "Deleted": {
                                        "description": "Indicates if the job has been deleted.",
                                        "type": "boolean"
                                    },
                                    "JobID": {
                                        "description": "The ID of the job",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Name": {
                                        "description": "The name of the job",
                                        "type": "string"
                                    },
                                    "Parameters": {
                                        "description": "The parameters for the job",
                                        "items": {
                                            "description": "A DTO for an IParameter",
                                            "properties": {
                                                "Direction": {
                                                    "description": "The parameter direction (Input or Output)",
                                                    "enum": [
                                                        "Input",
                                                        "Output"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name of the parameter",
                                                    "type": "string"
                                                },
                                                "Type": {
                                                    "description": "The data type of the parameter",
                                                    "enum": [
                                                        "String",
                                                        "Boolean",
                                                        "Integer",
                                                        "Float",
                                                        "StringDictionary"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "description": "A DTO for an IJob",
                                "properties": {
                                    "Activities": {
                                        "description": "The activities which are performed for the job",
                                        "items": {
                                            "description": "A DTO for an IJobActivity",
                                            "properties": {
                                                "ActivityID": {
                                                    "description": "The ID of the activity to be run as part of the job",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "JobActivityID": {
                                                    "description": "The ID of this job activity",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "JobID": {
                                                    "description": "The ID of the job this job activity belongs to",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "ParameterMappings": {
                                                    "description": "The mapping of values from a source to be used for the activity parameters",
                                                    "items": {
                                                        "description": "A DTO for an IParameterMapping",
                                                        "properties": {
                                                            "Name": {
                                                                "description": "The name of the parameter this mapping applies to",
                                                                "type": "string"
                                                            },
                                                            "Source": {
                                                                "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                "type": "string"
                                                            },
                                                            "SourceType": {
                                                                "description": "The source type used for supplying the parameter",
                                                                "enum": [
                                                                    "Constant",
                                                                    "Variable"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "readOnly": true,
                                                    "type": "array"
                                                },
                                                "RunOrder": {
                                                    "description": "The order of this job activity relative to others in the job",
                                                    "format": "int32",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    },
                                    "Deleted": {
                                        "description": "Indicates if the job has been deleted.",
                                        "type": "boolean"
                                    },
                                    "JobID": {
                                        "description": "The ID of the job",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Name": {
                                        "description": "The name of the job",
                                        "type": "string"
                                    },
                                    "Parameters": {
                                        "description": "The parameters for the job",
                                        "items": {
                                            "description": "A DTO for an IParameter",
                                            "properties": {
                                                "Direction": {
                                                    "description": "The parameter direction (Input or Output)",
                                                    "enum": [
                                                        "Input",
                                                        "Output"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name of the parameter",
                                                    "type": "string"
                                                },
                                                "Type": {
                                                    "description": "The data type of the parameter",
                                                    "enum": [
                                                        "String",
                                                        "Boolean",
                                                        "Integer",
                                                        "Float",
                                                        "StringDictionary"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "description": "A DTO for an IJob",
                                "properties": {
                                    "Activities": {
                                        "description": "The activities which are performed for the job",
                                        "items": {
                                            "description": "A DTO for an IJobActivity",
                                            "properties": {
                                                "ActivityID": {
                                                    "description": "The ID of the activity to be run as part of the job",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "JobActivityID": {
                                                    "description": "The ID of this job activity",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "JobID": {
                                                    "description": "The ID of the job this job activity belongs to",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "ParameterMappings": {
                                                    "description": "The mapping of values from a source to be used for the activity parameters",
                                                    "items": {
                                                        "description": "A DTO for an IParameterMapping",
                                                        "properties": {
                                                            "Name": {
                                                                "description": "The name of the parameter this mapping applies to",
                                                                "type": "string"
                                                            },
                                                            "Source": {
                                                                "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                "type": "string"
                                                            },
                                                            "SourceType": {
                                                                "description": "The source type used for supplying the parameter",
                                                                "enum": [
                                                                    "Constant",
                                                                    "Variable"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "readOnly": true,
                                                    "type": "array"
                                                },
                                                "RunOrder": {
                                                    "description": "The order of this job activity relative to others in the job",
                                                    "format": "int32",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    },
                                    "Deleted": {
                                        "description": "Indicates if the job has been deleted.",
                                        "type": "boolean"
                                    },
                                    "JobID": {
                                        "description": "The ID of the job",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Name": {
                                        "description": "The name of the job",
                                        "type": "string"
                                    },
                                    "Parameters": {
                                        "description": "The parameters for the job",
                                        "items": {
                                            "description": "A DTO for an IParameter",
                                            "properties": {
                                                "Direction": {
                                                    "description": "The parameter direction (Input or Output)",
                                                    "enum": [
                                                        "Input",
                                                        "Output"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name of the parameter",
                                                    "type": "string"
                                                },
                                                "Type": {
                                                    "description": "The data type of the parameter",
                                                    "enum": [
                                                        "String",
                                                        "Boolean",
                                                        "Integer",
                                                        "Float",
                                                        "StringDictionary"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "text/xml": {
                            "schema": {
                                "description": "A DTO for an IJob",
                                "properties": {
                                    "Activities": {
                                        "description": "The activities which are performed for the job",
                                        "items": {
                                            "description": "A DTO for an IJobActivity",
                                            "properties": {
                                                "ActivityID": {
                                                    "description": "The ID of the activity to be run as part of the job",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "JobActivityID": {
                                                    "description": "The ID of this job activity",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "JobID": {
                                                    "description": "The ID of the job this job activity belongs to",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "ParameterMappings": {
                                                    "description": "The mapping of values from a source to be used for the activity parameters",
                                                    "items": {
                                                        "description": "A DTO for an IParameterMapping",
                                                        "properties": {
                                                            "Name": {
                                                                "description": "The name of the parameter this mapping applies to",
                                                                "type": "string"
                                                            },
                                                            "Source": {
                                                                "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                "type": "string"
                                                            },
                                                            "SourceType": {
                                                                "description": "The source type used for supplying the parameter",
                                                                "enum": [
                                                                    "Constant",
                                                                    "Variable"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "readOnly": true,
                                                    "type": "array"
                                                },
                                                "RunOrder": {
                                                    "description": "The order of this job activity relative to others in the job",
                                                    "format": "int32",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    },
                                    "Deleted": {
                                        "description": "Indicates if the job has been deleted.",
                                        "type": "boolean"
                                    },
                                    "JobID": {
                                        "description": "The ID of the job",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Name": {
                                        "description": "The name of the job",
                                        "type": "string"
                                    },
                                    "Parameters": {
                                        "description": "The parameters for the job",
                                        "items": {
                                            "description": "A DTO for an IParameter",
                                            "properties": {
                                                "Direction": {
                                                    "description": "The parameter direction (Input or Output)",
                                                    "enum": [
                                                        "Input",
                                                        "Output"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name of the parameter",
                                                    "type": "string"
                                                },
                                                "Type": {
                                                    "description": "The data type of the parameter",
                                                    "enum": [
                                                        "String",
                                                        "Boolean",
                                                        "Integer",
                                                        "Float",
                                                        "StringDictionary"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "description": "A DTO for an IJob",
                                "properties": {
                                    "Activities": {
                                        "description": "The activities which are performed for the job",
                                        "items": {
                                            "description": "A DTO for an IJobActivity",
                                            "properties": {
                                                "ActivityID": {
                                                    "description": "The ID of the activity to be run as part of the job",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "JobActivityID": {
                                                    "description": "The ID of this job activity",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "JobID": {
                                                    "description": "The ID of the job this job activity belongs to",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "ParameterMappings": {
                                                    "description": "The mapping of values from a source to be used for the activity parameters",
                                                    "items": {
                                                        "description": "A DTO for an IParameterMapping",
                                                        "properties": {
                                                            "Name": {
                                                                "description": "The name of the parameter this mapping applies to",
                                                                "type": "string"
                                                            },
                                                            "Source": {
                                                                "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                "type": "string"
                                                            },
                                                            "SourceType": {
                                                                "description": "The source type used for supplying the parameter",
                                                                "enum": [
                                                                    "Constant",
                                                                    "Variable"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "readOnly": true,
                                                    "type": "array"
                                                },
                                                "RunOrder": {
                                                    "description": "The order of this job activity relative to others in the job",
                                                    "format": "int32",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    },
                                    "Deleted": {
                                        "description": "Indicates if the job has been deleted.",
                                        "type": "boolean"
                                    },
                                    "JobID": {
                                        "description": "The ID of the job",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "Name": {
                                        "description": "The name of the job",
                                        "type": "string"
                                    },
                                    "Parameters": {
                                        "description": "The parameters for the job",
                                        "items": {
                                            "description": "A DTO for an IParameter",
                                            "properties": {
                                                "Direction": {
                                                    "description": "The parameter direction (Input or Output)",
                                                    "enum": [
                                                        "Input",
                                                        "Output"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name of the parameter",
                                                    "type": "string"
                                                },
                                                "Type": {
                                                    "description": "The data type of the parameter",
                                                    "enum": [
                                                        "String",
                                                        "Boolean",
                                                        "Integer",
                                                        "Float",
                                                        "StringDictionary"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "description": "The updated job",
                    "required": true
                }
            }
        },
        "/api/v2/steps": {
            "get": {
                "deprecated": false,
                "description": "Gets a collection of Steps. When successful, the response is a PagedResponse of Steps.\r\n            If unsuccessful, an appropriate ApiError is returned.  Steps.Read permission is required.",
                "operationId": "Steps_GetSteps",
                "parameters": [
                    {
                        "description": "Optional. The page limit.  If not specified, the default page limit is 10.",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "Optional. The page offset.  If not specified, the default page offset is 0.",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "Does it include deleted step, or not",
                        "in": "query",
                        "name": "includeDeleted",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "description": "Step",
                                                "properties": {
                                                    "ConfigRequired": {
                                                        "description": "Indicates if the step requires configuration values to be provided by the build agent",
                                                        "type": "boolean"
                                                    },
                                                    "Deleted": {
                                                        "description": "Read Only.  Indicates if the record is deleted.",
                                                        "type": "boolean"
                                                    },
                                                    "Description": {
                                                        "description": "A description of the step to be presented to a user",
                                                        "type": "string"
                                                    },
                                                    "ImplementationID": {
                                                        "description": "The implementation ID used to lookup the step implementation when it is executed",
                                                        "type": "string"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the step",
                                                        "type": "string"
                                                    },
                                                    "Parameters": {
                                                        "description": "The parameters for this step",
                                                        "items": {
                                                            "description": "A DTO for an IParameter",
                                                            "properties": {
                                                                "Direction": {
                                                                    "description": "The parameter direction (Input or Output)",
                                                                    "enum": [
                                                                        "Input",
                                                                        "Output"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "Name": {
                                                                    "description": "The name of the parameter",
                                                                    "type": "string"
                                                                },
                                                                "Type": {
                                                                    "description": "The data type of the parameter",
                                                                    "enum": [
                                                                        "String",
                                                                        "Boolean",
                                                                        "Integer",
                                                                        "Float",
                                                                        "StringDictionary"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "readOnly": true,
                                                        "type": "array"
                                                    },
                                                    "StepID": {
                                                        "description": "The ID of the step",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    }
                                                },
                                                "required": [
                                                    "Name",
                                                    "ConfigRequired",
                                                    "ImplementationID"
                                                ],
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "description": "A response containing a page of results and metadata concerning the results",
                                    "properties": {
                                        "Entities": {
                                            "items": {
                                                "description": "Step",
                                                "properties": {
                                                    "ConfigRequired": {
                                                        "description": "Indicates if the step requires configuration values to be provided by the build agent",
                                                        "type": "boolean"
                                                    },
                                                    "Deleted": {
                                                        "description": "Read Only.  Indicates if the record is deleted.",
                                                        "type": "boolean"
                                                    },
                                                    "Description": {
                                                        "description": "A description of the step to be presented to a user",
                                                        "type": "string"
                                                    },
                                                    "ImplementationID": {
                                                        "description": "The implementation ID used to lookup the step implementation when it is executed",
                                                        "type": "string"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the step",
                                                        "type": "string"
                                                    },
                                                    "Parameters": {
                                                        "description": "The parameters for this step",
                                                        "items": {
                                                            "description": "A DTO for an IParameter",
                                                            "properties": {
                                                                "Direction": {
                                                                    "description": "The parameter direction (Input or Output)",
                                                                    "enum": [
                                                                        "Input",
                                                                        "Output"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "Name": {
                                                                    "description": "The name of the parameter",
                                                                    "type": "string"
                                                                },
                                                                "Type": {
                                                                    "description": "The data type of the parameter",
                                                                    "enum": [
                                                                        "String",
                                                                        "Boolean",
                                                                        "Integer",
                                                                        "Float",
                                                                        "StringDictionary"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "readOnly": true,
                                                        "type": "array"
                                                    },
                                                    "StepID": {
                                                        "description": "The ID of the step",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    }
                                                },
                                                "required": [
                                                    "Name",
                                                    "ConfigRequired",
                                                    "ImplementationID"
                                                ],
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "readOnly": true,
                                            "description": "Metadata for the paged response",
                                            "properties": {
                                                "Limit": {
                                                    "description": "The number of entities this paged response is limited to.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "Offset": {
                                                    "description": "The number of entities prior to this page of items.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of entities matching the request.",
                                                    "format": "int32",
                                                    "readOnly": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "TotalCount",
                                                "Limit",
                                                "Offset"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "Metadata",
                                        "Entities"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get Steps",
                "tags": [
                    "Steps"
                ]
            },
            "post": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "Steps_PostStep",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Create a Step",
                "tags": [
                    "Steps"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Step",
                                "properties": {
                                    "ConfigRequired": {
                                        "description": "Indicates if the step requires configuration values to be provided by the build agent",
                                        "type": "boolean"
                                    },
                                    "Deleted": {
                                        "description": "Read Only.  Indicates if the record is deleted.",
                                        "type": "boolean"
                                    },
                                    "Description": {
                                        "description": "A description of the step to be presented to a user",
                                        "type": "string"
                                    },
                                    "ImplementationID": {
                                        "description": "The implementation ID used to lookup the step implementation when it is executed",
                                        "type": "string"
                                    },
                                    "Name": {
                                        "description": "The name of the step",
                                        "type": "string"
                                    },
                                    "Parameters": {
                                        "description": "The parameters for this step",
                                        "items": {
                                            "description": "A DTO for an IParameter",
                                            "properties": {
                                                "Direction": {
                                                    "description": "The parameter direction (Input or Output)",
                                                    "enum": [
                                                        "Input",
                                                        "Output"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name of the parameter",
                                                    "type": "string"
                                                },
                                                "Type": {
                                                    "description": "The data type of the parameter",
                                                    "enum": [
                                                        "String",
                                                        "Boolean",
                                                        "Integer",
                                                        "Float",
                                                        "StringDictionary"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    },
                                    "StepID": {
                                        "description": "The ID of the step",
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "Name",
                                    "ConfigRequired",
                                    "ImplementationID"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "description": "Step",
                                "properties": {
                                    "ConfigRequired": {
                                        "description": "Indicates if the step requires configuration values to be provided by the build agent",
                                        "type": "boolean"
                                    },
                                    "Deleted": {
                                        "description": "Read Only.  Indicates if the record is deleted.",
                                        "type": "boolean"
                                    },
                                    "Description": {
                                        "description": "A description of the step to be presented to a user",
                                        "type": "string"
                                    },
                                    "ImplementationID": {
                                        "description": "The implementation ID used to lookup the step implementation when it is executed",
                                        "type": "string"
                                    },
                                    "Name": {
                                        "description": "The name of the step",
                                        "type": "string"
                                    },
                                    "Parameters": {
                                        "description": "The parameters for this step",
                                        "items": {
                                            "description": "A DTO for an IParameter",
                                            "properties": {
                                                "Direction": {
                                                    "description": "The parameter direction (Input or Output)",
                                                    "enum": [
                                                        "Input",
                                                        "Output"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name of the parameter",
                                                    "type": "string"
                                                },
                                                "Type": {
                                                    "description": "The data type of the parameter",
                                                    "enum": [
                                                        "String",
                                                        "Boolean",
                                                        "Integer",
                                                        "Float",
                                                        "StringDictionary"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    },
                                    "StepID": {
                                        "description": "The ID of the step",
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "Name",
                                    "ConfigRequired",
                                    "ImplementationID"
                                ],
                                "type": "object"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "description": "Step",
                                "properties": {
                                    "ConfigRequired": {
                                        "description": "Indicates if the step requires configuration values to be provided by the build agent",
                                        "type": "boolean"
                                    },
                                    "Deleted": {
                                        "description": "Read Only.  Indicates if the record is deleted.",
                                        "type": "boolean"
                                    },
                                    "Description": {
                                        "description": "A description of the step to be presented to a user",
                                        "type": "string"
                                    },
                                    "ImplementationID": {
                                        "description": "The implementation ID used to lookup the step implementation when it is executed",
                                        "type": "string"
                                    },
                                    "Name": {
                                        "description": "The name of the step",
                                        "type": "string"
                                    },
                                    "Parameters": {
                                        "description": "The parameters for this step",
                                        "items": {
                                            "description": "A DTO for an IParameter",
                                            "properties": {
                                                "Direction": {
                                                    "description": "The parameter direction (Input or Output)",
                                                    "enum": [
                                                        "Input",
                                                        "Output"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name of the parameter",
                                                    "type": "string"
                                                },
                                                "Type": {
                                                    "description": "The data type of the parameter",
                                                    "enum": [
                                                        "String",
                                                        "Boolean",
                                                        "Integer",
                                                        "Float",
                                                        "StringDictionary"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    },
                                    "StepID": {
                                        "description": "The ID of the step",
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "Name",
                                    "ConfigRequired",
                                    "ImplementationID"
                                ],
                                "type": "object"
                            }
                        },
                        "text/xml": {
                            "schema": {
                                "description": "Step",
                                "properties": {
                                    "ConfigRequired": {
                                        "description": "Indicates if the step requires configuration values to be provided by the build agent",
                                        "type": "boolean"
                                    },
                                    "Deleted": {
                                        "description": "Read Only.  Indicates if the record is deleted.",
                                        "type": "boolean"
                                    },
                                    "Description": {
                                        "description": "A description of the step to be presented to a user",
                                        "type": "string"
                                    },
                                    "ImplementationID": {
                                        "description": "The implementation ID used to lookup the step implementation when it is executed",
                                        "type": "string"
                                    },
                                    "Name": {
                                        "description": "The name of the step",
                                        "type": "string"
                                    },
                                    "Parameters": {
                                        "description": "The parameters for this step",
                                        "items": {
                                            "description": "A DTO for an IParameter",
                                            "properties": {
                                                "Direction": {
                                                    "description": "The parameter direction (Input or Output)",
                                                    "enum": [
                                                        "Input",
                                                        "Output"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name of the parameter",
                                                    "type": "string"
                                                },
                                                "Type": {
                                                    "description": "The data type of the parameter",
                                                    "enum": [
                                                        "String",
                                                        "Boolean",
                                                        "Integer",
                                                        "Float",
                                                        "StringDictionary"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    },
                                    "StepID": {
                                        "description": "The ID of the step",
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "Name",
                                    "ConfigRequired",
                                    "ImplementationID"
                                ],
                                "type": "object"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "description": "Step",
                                "properties": {
                                    "ConfigRequired": {
                                        "description": "Indicates if the step requires configuration values to be provided by the build agent",
                                        "type": "boolean"
                                    },
                                    "Deleted": {
                                        "description": "Read Only.  Indicates if the record is deleted.",
                                        "type": "boolean"
                                    },
                                    "Description": {
                                        "description": "A description of the step to be presented to a user",
                                        "type": "string"
                                    },
                                    "ImplementationID": {
                                        "description": "The implementation ID used to lookup the step implementation when it is executed",
                                        "type": "string"
                                    },
                                    "Name": {
                                        "description": "The name of the step",
                                        "type": "string"
                                    },
                                    "Parameters": {
                                        "description": "The parameters for this step",
                                        "items": {
                                            "description": "A DTO for an IParameter",
                                            "properties": {
                                                "Direction": {
                                                    "description": "The parameter direction (Input or Output)",
                                                    "enum": [
                                                        "Input",
                                                        "Output"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name of the parameter",
                                                    "type": "string"
                                                },
                                                "Type": {
                                                    "description": "The data type of the parameter",
                                                    "enum": [
                                                        "String",
                                                        "Boolean",
                                                        "Integer",
                                                        "Float",
                                                        "StringDictionary"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    },
                                    "StepID": {
                                        "description": "The ID of the step",
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "Name",
                                    "ConfigRequired",
                                    "ImplementationID"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The step to create",
                    "required": true
                }
            }
        },
        "/api/v2/steps/{stepID}": {
            "get": {
                "deprecated": false,
                "description": "Gets a Step by ID. When successful, the response is the requested Step.\r\n            If unsuccessful, an appropriate ApiError is returned.  Steps.Read permission is required.",
                "operationId": "Steps_GetStep",
                "parameters": [
                    {
                        "description": "The ID of the Step to get.",
                        "in": "path",
                        "name": "stepID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "Does it include deleted step, or not",
                        "in": "query",
                        "name": "isIncludeDeleted",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Step",
                                    "properties": {
                                        "ConfigRequired": {
                                            "description": "Indicates if the step requires configuration values to be provided by the build agent",
                                            "type": "boolean"
                                        },
                                        "Deleted": {
                                            "description": "Read Only.  Indicates if the record is deleted.",
                                            "type": "boolean"
                                        },
                                        "Description": {
                                            "description": "A description of the step to be presented to a user",
                                            "type": "string"
                                        },
                                        "ImplementationID": {
                                            "description": "The implementation ID used to lookup the step implementation when it is executed",
                                            "type": "string"
                                        },
                                        "Name": {
                                            "description": "The name of the step",
                                            "type": "string"
                                        },
                                        "Parameters": {
                                            "description": "The parameters for this step",
                                            "items": {
                                                "description": "A DTO for an IParameter",
                                                "properties": {
                                                    "Direction": {
                                                        "description": "The parameter direction (Input or Output)",
                                                        "enum": [
                                                            "Input",
                                                            "Output"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the parameter",
                                                        "type": "string"
                                                    },
                                                    "Type": {
                                                        "description": "The data type of the parameter",
                                                        "enum": [
                                                            "String",
                                                            "Boolean",
                                                            "Integer",
                                                            "Float",
                                                            "StringDictionary"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "StepID": {
                                            "description": "The ID of the step",
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "Name",
                                        "ConfigRequired",
                                        "ImplementationID"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "description": "Step",
                                    "properties": {
                                        "ConfigRequired": {
                                            "description": "Indicates if the step requires configuration values to be provided by the build agent",
                                            "type": "boolean"
                                        },
                                        "Deleted": {
                                            "description": "Read Only.  Indicates if the record is deleted.",
                                            "type": "boolean"
                                        },
                                        "Description": {
                                            "description": "A description of the step to be presented to a user",
                                            "type": "string"
                                        },
                                        "ImplementationID": {
                                            "description": "The implementation ID used to lookup the step implementation when it is executed",
                                            "type": "string"
                                        },
                                        "Name": {
                                            "description": "The name of the step",
                                            "type": "string"
                                        },
                                        "Parameters": {
                                            "description": "The parameters for this step",
                                            "items": {
                                                "description": "A DTO for an IParameter",
                                                "properties": {
                                                    "Direction": {
                                                        "description": "The parameter direction (Input or Output)",
                                                        "enum": [
                                                            "Input",
                                                            "Output"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the parameter",
                                                        "type": "string"
                                                    },
                                                    "Type": {
                                                        "description": "The data type of the parameter",
                                                        "enum": [
                                                            "String",
                                                            "Boolean",
                                                            "Integer",
                                                            "Float",
                                                            "StringDictionary"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "StepID": {
                                            "description": "The ID of the step",
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "Name",
                                        "ConfigRequired",
                                        "ImplementationID"
                                    ],
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "description": "Step",
                                    "properties": {
                                        "ConfigRequired": {
                                            "description": "Indicates if the step requires configuration values to be provided by the build agent",
                                            "type": "boolean"
                                        },
                                        "Deleted": {
                                            "description": "Read Only.  Indicates if the record is deleted.",
                                            "type": "boolean"
                                        },
                                        "Description": {
                                            "description": "A description of the step to be presented to a user",
                                            "type": "string"
                                        },
                                        "ImplementationID": {
                                            "description": "The implementation ID used to lookup the step implementation when it is executed",
                                            "type": "string"
                                        },
                                        "Name": {
                                            "description": "The name of the step",
                                            "type": "string"
                                        },
                                        "Parameters": {
                                            "description": "The parameters for this step",
                                            "items": {
                                                "description": "A DTO for an IParameter",
                                                "properties": {
                                                    "Direction": {
                                                        "description": "The parameter direction (Input or Output)",
                                                        "enum": [
                                                            "Input",
                                                            "Output"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the parameter",
                                                        "type": "string"
                                                    },
                                                    "Type": {
                                                        "description": "The data type of the parameter",
                                                        "enum": [
                                                            "String",
                                                            "Boolean",
                                                            "Integer",
                                                            "Float",
                                                            "StringDictionary"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "StepID": {
                                            "description": "The ID of the step",
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "Name",
                                        "ConfigRequired",
                                        "ImplementationID"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "description": "Step",
                                    "properties": {
                                        "ConfigRequired": {
                                            "description": "Indicates if the step requires configuration values to be provided by the build agent",
                                            "type": "boolean"
                                        },
                                        "Deleted": {
                                            "description": "Read Only.  Indicates if the record is deleted.",
                                            "type": "boolean"
                                        },
                                        "Description": {
                                            "description": "A description of the step to be presented to a user",
                                            "type": "string"
                                        },
                                        "ImplementationID": {
                                            "description": "The implementation ID used to lookup the step implementation when it is executed",
                                            "type": "string"
                                        },
                                        "Name": {
                                            "description": "The name of the step",
                                            "type": "string"
                                        },
                                        "Parameters": {
                                            "description": "The parameters for this step",
                                            "items": {
                                                "description": "A DTO for an IParameter",
                                                "properties": {
                                                    "Direction": {
                                                        "description": "The parameter direction (Input or Output)",
                                                        "enum": [
                                                            "Input",
                                                            "Output"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the parameter",
                                                        "type": "string"
                                                    },
                                                    "Type": {
                                                        "description": "The data type of the parameter",
                                                        "enum": [
                                                            "String",
                                                            "Boolean",
                                                            "Integer",
                                                            "Float",
                                                            "StringDictionary"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "StepID": {
                                            "description": "The ID of the step",
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "Name",
                                        "ConfigRequired",
                                        "ImplementationID"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Get a Step by ID",
                "tags": [
                    "Steps"
                ]
            },
            "put": {
                "deprecated": false,
                "description": "No Documentation Found.",
                "operationId": "Steps_PutStep",
                "parameters": [
                    {
                        "description": "The step ID of the step to update",
                        "in": "path",
                        "name": "stepID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "API Error Response",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "DeveloperMessage": {
                                            "type": "string"
                                        },
                                        "ErrorCode": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "MoreInfo": {
                                            "type": "string"
                                        },
                                        "UserMessage": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Update a Step",
                "tags": [
                    "Steps"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Step",
                                "properties": {
                                    "ConfigRequired": {
                                        "description": "Indicates if the step requires configuration values to be provided by the build agent",
                                        "type": "boolean"
                                    },
                                    "Deleted": {
                                        "description": "Read Only.  Indicates if the record is deleted.",
                                        "type": "boolean"
                                    },
                                    "Description": {
                                        "description": "A description of the step to be presented to a user",
                                        "type": "string"
                                    },
                                    "ImplementationID": {
                                        "description": "The implementation ID used to lookup the step implementation when it is executed",
                                        "type": "string"
                                    },
                                    "Name": {
                                        "description": "The name of the step",
                                        "type": "string"
                                    },
                                    "Parameters": {
                                        "description": "The parameters for this step",
                                        "items": {
                                            "description": "A DTO for an IParameter",
                                            "properties": {
                                                "Direction": {
                                                    "description": "The parameter direction (Input or Output)",
                                                    "enum": [
                                                        "Input",
                                                        "Output"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name of the parameter",
                                                    "type": "string"
                                                },
                                                "Type": {
                                                    "description": "The data type of the parameter",
                                                    "enum": [
                                                        "String",
                                                        "Boolean",
                                                        "Integer",
                                                        "Float",
                                                        "StringDictionary"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    },
                                    "StepID": {
                                        "description": "The ID of the step",
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "Name",
                                    "ConfigRequired",
                                    "ImplementationID"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "description": "Step",
                                "properties": {
                                    "ConfigRequired": {
                                        "description": "Indicates if the step requires configuration values to be provided by the build agent",
                                        "type": "boolean"
                                    },
                                    "Deleted": {
                                        "description": "Read Only.  Indicates if the record is deleted.",
                                        "type": "boolean"
                                    },
                                    "Description": {
                                        "description": "A description of the step to be presented to a user",
                                        "type": "string"
                                    },
                                    "ImplementationID": {
                                        "description": "The implementation ID used to lookup the step implementation when it is executed",
                                        "type": "string"
                                    },
                                    "Name": {
                                        "description": "The name of the step",
                                        "type": "string"
                                    },
                                    "Parameters": {
                                        "description": "The parameters for this step",
                                        "items": {
                                            "description": "A DTO for an IParameter",
                                            "properties": {
                                                "Direction": {
                                                    "description": "The parameter direction (Input or Output)",
                                                    "enum": [
                                                        "Input",
                                                        "Output"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name of the parameter",
                                                    "type": "string"
                                                },
                                                "Type": {
                                                    "description": "The data type of the parameter",
                                                    "enum": [
                                                        "String",
                                                        "Boolean",
                                                        "Integer",
                                                        "Float",
                                                        "StringDictionary"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    },
                                    "StepID": {
                                        "description": "The ID of the step",
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "Name",
                                    "ConfigRequired",
                                    "ImplementationID"
                                ],
                                "type": "object"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "description": "Step",
                                "properties": {
                                    "ConfigRequired": {
                                        "description": "Indicates if the step requires configuration values to be provided by the build agent",
                                        "type": "boolean"
                                    },
                                    "Deleted": {
                                        "description": "Read Only.  Indicates if the record is deleted.",
                                        "type": "boolean"
                                    },
                                    "Description": {
                                        "description": "A description of the step to be presented to a user",
                                        "type": "string"
                                    },
                                    "ImplementationID": {
                                        "description": "The implementation ID used to lookup the step implementation when it is executed",
                                        "type": "string"
                                    },
                                    "Name": {
                                        "description": "The name of the step",
                                        "type": "string"
                                    },
                                    "Parameters": {
                                        "description": "The parameters for this step",
                                        "items": {
                                            "description": "A DTO for an IParameter",
                                            "properties": {
                                                "Direction": {
                                                    "description": "The parameter direction (Input or Output)",
                                                    "enum": [
                                                        "Input",
                                                        "Output"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name of the parameter",
                                                    "type": "string"
                                                },
                                                "Type": {
                                                    "description": "The data type of the parameter",
                                                    "enum": [
                                                        "String",
                                                        "Boolean",
                                                        "Integer",
                                                        "Float",
                                                        "StringDictionary"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    },
                                    "StepID": {
                                        "description": "The ID of the step",
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "Name",
                                    "ConfigRequired",
                                    "ImplementationID"
                                ],
                                "type": "object"
                            }
                        },
                        "text/xml": {
                            "schema": {
                                "description": "Step",
                                "properties": {
                                    "ConfigRequired": {
                                        "description": "Indicates if the step requires configuration values to be provided by the build agent",
                                        "type": "boolean"
                                    },
                                    "Deleted": {
                                        "description": "Read Only.  Indicates if the record is deleted.",
                                        "type": "boolean"
                                    },
                                    "Description": {
                                        "description": "A description of the step to be presented to a user",
                                        "type": "string"
                                    },
                                    "ImplementationID": {
                                        "description": "The implementation ID used to lookup the step implementation when it is executed",
                                        "type": "string"
                                    },
                                    "Name": {
                                        "description": "The name of the step",
                                        "type": "string"
                                    },
                                    "Parameters": {
                                        "description": "The parameters for this step",
                                        "items": {
                                            "description": "A DTO for an IParameter",
                                            "properties": {
                                                "Direction": {
                                                    "description": "The parameter direction (Input or Output)",
                                                    "enum": [
                                                        "Input",
                                                        "Output"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name of the parameter",
                                                    "type": "string"
                                                },
                                                "Type": {
                                                    "description": "The data type of the parameter",
                                                    "enum": [
                                                        "String",
                                                        "Boolean",
                                                        "Integer",
                                                        "Float",
                                                        "StringDictionary"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    },
                                    "StepID": {
                                        "description": "The ID of the step",
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "Name",
                                    "ConfigRequired",
                                    "ImplementationID"
                                ],
                                "type": "object"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "description": "Step",
                                "properties": {
                                    "ConfigRequired": {
                                        "description": "Indicates if the step requires configuration values to be provided by the build agent",
                                        "type": "boolean"
                                    },
                                    "Deleted": {
                                        "description": "Read Only.  Indicates if the record is deleted.",
                                        "type": "boolean"
                                    },
                                    "Description": {
                                        "description": "A description of the step to be presented to a user",
                                        "type": "string"
                                    },
                                    "ImplementationID": {
                                        "description": "The implementation ID used to lookup the step implementation when it is executed",
                                        "type": "string"
                                    },
                                    "Name": {
                                        "description": "The name of the step",
                                        "type": "string"
                                    },
                                    "Parameters": {
                                        "description": "The parameters for this step",
                                        "items": {
                                            "description": "A DTO for an IParameter",
                                            "properties": {
                                                "Direction": {
                                                    "description": "The parameter direction (Input or Output)",
                                                    "enum": [
                                                        "Input",
                                                        "Output"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name of the parameter",
                                                    "type": "string"
                                                },
                                                "Type": {
                                                    "description": "The data type of the parameter",
                                                    "enum": [
                                                        "String",
                                                        "Boolean",
                                                        "Integer",
                                                        "Float",
                                                        "StringDictionary"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "readOnly": true,
                                        "type": "array"
                                    },
                                    "StepID": {
                                        "description": "The ID of the step",
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "Name",
                                    "ConfigRequired",
                                    "ImplementationID"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The updated step",
                    "required": true
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AGCOPowerServices.Models.ECU": {
                "description": "An AGCO Power ECU",
                "properties": {
                    "ActivationCode": {
                        "description": "The code used to activate the ECU. May not be modified. Returned only on activation.",
                        "format": "byte",
                        "type": "string"
                    },
                    "DamagedDescription": {
                        "description": "A description why the ECU cannot be deactivated.",
                        "pattern": "^[a-zA-Z0-9]{0,4096}$",
                        "type": "string"
                    },
                    "EngineSerialNumber": {
                        "description": "The serial number of the ECU’s engine",
                        "pattern": "(^[A-Z][0-9]+$)|(^[ABCDEFGHJKLMNPRSTVWX1-9][5CMB][ED][0-5][0-9][0-7][0-9][0-9][0-9]$)",
                        "type": "string"
                    },
                    "ReplacesECUSerialNumber": {
                        "description": "The serial number of the ECU that this ECU replaces. Required if activating an ECU..",
                        "pattern": "^0?\\d{23}$",
                        "type": "string"
                    },
                    "SerialNumber": {
                        "description": "The serial number of the ECU",
                        "pattern": "^0?\\d{23}$",
                        "type": "string"
                    },
                    "State": {
                        "description": "The state of the ECU",
                        "enum": [
                            "Active",
                            "Inactive",
                            "Damaged"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "SerialNumber",
                    "EngineSerialNumber",
                    "State"
                ],
                "type": "object"
            },
            "AGCOPowerServices.Models.ProductionData": {
                "description": "Production data for an AGCO Power engine.",
                "properties": {
                    "DataType": {
                        "description": "Type of data. Valid types are (but not limited to)\r\n            'PowerCalibration'",
                        "type": "string"
                    },
                    "DataValues": {
                        "description": "Raw values of the calibration data",
                        "format": "byte",
                        "type": "string"
                    }
                },
                "required": [
                    "DataType",
                    "DataValues"
                ],
                "type": "object"
            },
            "AGCOPowerServices.Models.UserStatus": {
                "description": "Status of a voucher in the AGCO Power system",
                "properties": {
                    "DealerCode": {
                        "description": "The dealer code of the voucher",
                        "type": "string"
                    },
                    "State": {
                        "description": "The state of the voucher",
                        "enum": [
                            "Active",
                            "Inactive",
                            "None"
                        ],
                        "type": "string"
                    },
                    "VoucherCode": {
                        "description": "The voucher code",
                        "type": "string"
                    }
                },
                "required": [
                    "VoucherCode",
                    "DealerCode"
                ],
                "type": "object"
            },
            "API.Models.ApiError": {
                "properties": {
                    "DeveloperMessage": {
                        "type": "string"
                    },
                    "ErrorCode": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "MoreInfo": {
                        "type": "string"
                    },
                    "UserMessage": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "API.Models.AuthenticatedUser": {
                "properties": {
                    "Email": {
                        "description": "The user's email address",
                        "type": "string"
                    },
                    "MACId": {
                        "description": "The MAC identifier to use for API access",
                        "type": "string"
                    },
                    "MACToken": {
                        "description": "The MAC token to use for API access",
                        "type": "string"
                    },
                    "Name": {
                        "description": "The user's name",
                        "type": "string"
                    },
                    "Token": {
                        "description": "The token to use for API access",
                        "type": "string"
                    },
                    "UserID": {
                        "description": "The user ID",
                        "format": "int32",
                        "type": "integer"
                    },
                    "Username": {
                        "description": "The username used for authentication",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "API.Models.Credentials": {
                "properties": {
                    "BearerAction": {
                        "description": "The action to perform on the bearer token. Optional. Defaults to ‘None’.",
                        "enum": [
                            "None",
                            "Reset",
                            "Disable"
                        ],
                        "type": "string"
                    },
                    "MACAction": {
                        "description": "The action to perform on the MAC token. Optional. Defaults to ‘None’.",
                        "enum": [
                            "None",
                            "Reset",
                            "Disable"
                        ],
                        "type": "string"
                    },
                    "password": {
                        "description": "A secret word or phrase that must be used to gain admission",
                        "type": "string"
                    },
                    "username": {
                        "description": "A unique ID a user needs to login with",
                        "type": "string"
                    }
                },
                "required": [
                    "username",
                    "password"
                ],
                "type": "object"
            },
            "API.Models.Log": {
                "properties": {
                    "ID": {
                        "type": "string"
                    },
                    "Message": {
                        "type": "string"
                    },
                    "TimeStamp": {
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "API.Models.Notification": {
                "properties": {
                    "CC_Addresses": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "IsBodyHtml": {
                        "type": "boolean"
                    },
                    "MessageBody": {
                        "type": "string"
                    },
                    "Subject": {
                        "type": "string"
                    },
                    "To_Addresses": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "To_Addresses",
                    "Subject",
                    "MessageBody",
                    "IsBodyHtml"
                ],
                "type": "object"
            },
            "API.Models.PasswordReset": {
                "properties": {
                    "NewPassword": {
                        "description": "The new password",
                        "type": "string"
                    },
                    "Token": {
                        "description": "The password reset token",
                        "type": "string"
                    }
                },
                "required": [
                    "Token",
                    "NewPassword"
                ],
                "type": "object"
            },
            "API.Models.PasswordResetRequest": {
                "properties": {
                    "ParameterName": {
                        "description": "The query string parameter name to use for supplying the password reset token",
                        "type": "string"
                    },
                    "Url": {
                        "description": "The URL to direct the user to reset the password.",
                        "type": "string"
                    },
                    "Username": {
                        "description": "The username to reset the password for",
                        "type": "string"
                    }
                },
                "required": [
                    "Username",
                    "Url",
                    "ParameterName"
                ],
                "type": "object"
            },
            "API.Models.Permission": {
                "properties": {
                    "DataDescription": {
                        "description": "Description of data to be provided with Role Authorization",
                        "type": "string"
                    },
                    "DataRequired": {
                        "description": "Indicates if data is required or optional",
                        "enum": [
                            "Yes",
                            "No",
                            "Optional"
                        ],
                        "type": "string"
                    },
                    "Description": {
                        "type": "string"
                    },
                    "Id": {
                        "description": "The identifier of the permission.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "Name": {
                        "description": "The name of the permission.",
                        "type": "string"
                    }
                },
                "required": [
                    "Name",
                    "DataRequired"
                ],
                "type": "object"
            },
            "API.Models.Role": {
                "description": "Defines an API Role",
                "properties": {
                    "Description": {
                        "description": "Role description",
                        "type": "string"
                    },
                    "Id": {
                        "description": "The role's identifier.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "Name": {
                        "description": "The name of the role. Must be alpha-numeric strings separated by a period (.).",
                        "pattern": "^[0-9a-zA-Z]+(\\.[0-9a-zA-Z]+)*$",
                        "type": "string"
                    }
                },
                "required": [
                    "Name",
                    "Description"
                ],
                "type": "object"
            },
            "API.Models.RolePermissionChange": {
                "description": "Change to the Permissions that a Role is given.",
                "properties": {
                    "Action": {
                        "description": "The action to take.",
                        "enum": [
                            "Grant",
                            "Revoke"
                        ],
                        "type": "string"
                    },
                    "Permission": {
                        "description": "The name of the permission to grant or revoke.",
                        "type": "string"
                    }
                },
                "required": [
                    "Permission",
                    "Action"
                ],
                "type": "object"
            },
            "API.Models.RoleUserChange": {
                "properties": {
                    "Action": {
                        "description": "The action to take with the user",
                        "enum": [
                            "Grant",
                            "Revoke"
                        ],
                        "type": "string"
                    },
                    "Id": {
                        "description": "The Id of the User",
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "required": [
                    "Id",
                    "Action"
                ],
                "type": "object"
            },
            "API.Models.TokenOptions": {
                "properties": {
                    "BearerAction": {
                        "description": "The action to perform on the bearer token. Optional. Defaults to ‘None’.",
                        "enum": [
                            "None",
                            "Reset",
                            "Disable"
                        ],
                        "type": "string"
                    },
                    "MACAction": {
                        "description": "The action to perform on the MAC token. Optional. Defaults to ‘None’.",
                        "enum": [
                            "None",
                            "Reset",
                            "Disable"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "API.Models.User": {
                "properties": {
                    "ChangePassword": {
                        "description": "Never Returned.  When changing a user's password, this field must contain the new password.",
                        "type": "string"
                    },
                    "Email": {
                        "description": "The user's email address",
                        "type": "string"
                    },
                    "Name": {
                        "description": "The user's name",
                        "type": "string"
                    },
                    "Password": {
                        "description": "Never Returned.  Required when creating a new user or updating a user.  When changing a user's password this field must contain the current password.",
                        "type": "string"
                    },
                    "UserID": {
                        "description": "The user ID",
                        "format": "int32",
                        "type": "integer"
                    },
                    "Username": {
                        "description": "The username used for authentication",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "API.Models.UserEffectivePermission": {
                "properties": {
                    "PermissionId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "PermissionName": {
                        "type": "string"
                    },
                    "UserID": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "API.Models.UserRoleChange": {
                "properties": {
                    "Action": {
                        "description": "The action to take with the role",
                        "enum": [
                            "Grant",
                            "Revoke"
                        ],
                        "type": "string"
                    },
                    "Name": {
                        "description": "The name of the role",
                        "type": "string"
                    }
                },
                "required": [
                    "Name",
                    "Action"
                ],
                "type": "object"
            },
            "API.PagedResponseMetadata": {
                "description": "Metadata for the paged response",
                "properties": {
                    "Limit": {
                        "description": "The number of entities this paged response is limited to.",
                        "format": "int32",
                        "readOnly": true,
                        "type": "integer"
                    },
                    "Offset": {
                        "description": "The number of entities prior to this page of items.",
                        "format": "int32",
                        "readOnly": true,
                        "type": "integer"
                    },
                    "TotalCount": {
                        "description": "The total number of entities matching the request.",
                        "format": "int32",
                        "readOnly": true,
                        "type": "integer"
                    }
                },
                "required": [
                    "TotalCount",
                    "Limit",
                    "Offset"
                ],
                "type": "object"
            },
            "AuthorizationCodes.Shared.Models.AuthorizationCode": {
                "description": "Represents the model containing an authorization code used to unlock a feature in machines and EDT",
                "properties": {
                    "Code": {
                        "description": "The code to enter to unlock a feature. Read only.",
                        "type": "string"
                    },
                    "CreatedByUserID": {
                        "description": "The ID of the user that created this authorization code. Read only.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "CreatedDate": {
                        "description": "A timestamp of when this code was created. Read only.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "DataParameters": {
                        "description": "The parameters and values contained as data in this authorization code. May not be updated.",
                        "items": {
                            "description": "A parameter used to create an authorization code.",
                            "properties": {
                                "Name": {
                                    "description": "The name of the parameter. May not be updated.",
                                    "type": "string"
                                },
                                "Value": {
                                    "description": "The value of the parameter. May not be updated.",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "Name",
                                "Value"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "DefinitionID": {
                        "description": "The id of the definition for this authorization code. May not be updated.",
                        "type": "string"
                    },
                    "DeletedByUserID": {
                        "description": "The ID of the user that deleted this authorization code. Read only.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "DeletedDate": {
                        "description": "A timestamp of when this authorization code was deleted. Read only.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "ID": {
                        "description": "The identifier for the authorization code. Read only.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "IsDeleted": {
                        "description": "Indicates whether this code is deleted.",
                        "type": "boolean"
                    },
                    "ValidationParameters": {
                        "description": "The parameters and values used to validate this authorization code. May not be updated.",
                        "items": {
                            "description": "A parameter used to create an authorization code.",
                            "properties": {
                                "Name": {
                                    "description": "The name of the parameter. May not be updated.",
                                    "type": "string"
                                },
                                "Value": {
                                    "description": "The value of the parameter. May not be updated.",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "Name",
                                "Value"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "AuthorizationCodes.Shared.Models.AuthorizationCodeDefinition": {
                "description": "Represents the model used to define how a type of authorization code is generated.",
                "properties": {
                    "CreatedByUserID": {
                        "description": "The ID of the user that created this definition. Read only.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "CreatedDate": {
                        "description": "A timestamp of when this definition was created. Read only.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "DataFields": {
                        "description": "The defined fields to include in authorization codes generated from this definition. May not be updated.",
                        "items": {
                            "properties": {
                                "DigitsPrecision": {
                                    "description": "The number of decimal digits to be used by this data field. Required only by the 'Float' data type. Must be in range 1 - 15.",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "MaxExponent": {
                                    "description": "The maximum exponent to be used by this data field. Required only by the 'Float' data type. May not be greater than 307.",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "MaxValue": {
                                    "description": "The maximum value that can be represented by this data field. Required only by the 'Decimal' data type.",
                                    "format": "double",
                                    "type": "number"
                                },
                                "MinExponent": {
                                    "description": "The minimum exponent to be used by this data field. Required only by the 'Float' data type. May not be less than -292.",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "MinValue": {
                                    "description": "The minimum value that can be represented by this data field. Required only by the 'Decimal' data type.",
                                    "format": "double",
                                    "type": "number"
                                },
                                "Name": {
                                    "description": "The name of the field.",
                                    "type": "string"
                                },
                                "ScaleFactor": {
                                    "description": "The resolution of values that can be represented by this data field. The base value is multiplied by this to compute the final value. Required only by the 'Decimal' data type.",
                                    "format": "double",
                                    "type": "number"
                                },
                                "Signed": {
                                    "description": "Indicates whether this value is signed. Required only by the 'Float' data type.",
                                    "type": "boolean"
                                },
                                "Type": {
                                    "description": "The type of this data field.",
                                    "enum": [
                                        "Boolean",
                                        "Decimal",
                                        "Float",
                                        "VariableLengthByteArray"
                                    ],
                                    "type": "string"
                                }
                            },
                            "required": [
                                "Type",
                                "Name"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "DeletedByUserID": {
                        "description": "The ID of the user that deleted this definition. Read only.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "DeletedDate": {
                        "description": "A timestamp of when this definition was deleted. Read only.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "Description": {
                        "description": "A description of this definition. May not be updated.",
                        "type": "string"
                    },
                    "DurationAccuracy": {
                        "description": "The number of bits used for timestamp verification. Defaults to 5. May not be updated.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "DurationAmount": {
                        "description": "The amount of duration for the specified duration unit used to calculate the Authorization Code. Defaults to 1. May not be updated.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "DurationUnits": {
                        "description": "The units of duration used to calculate the Authorization Code. Defaults to 'Days'. May not be updated.",
                        "enum": [
                            "Weeks",
                            "Days",
                            "Hours",
                            "Minutes"
                        ],
                        "type": "string"
                    },
                    "HashLength": {
                        "description": "The bit length of the hash data which will be used for the authorization code. Defaults to 20. May not be updated.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "ID": {
                        "description": "The ID of the authorization code definition. Read only.",
                        "type": "string"
                    },
                    "IsDeleted": {
                        "description": "Indicates whether this definition is enabled. True if generating codes is disabled.",
                        "type": "boolean"
                    },
                    "Name": {
                        "description": "The name of the authorization code definition. May not be updated.",
                        "type": "string"
                    },
                    "RandomLength": {
                        "description": "The bit length of random data which will be included in the authorization code.  This is necessary to allow creation of \"identical\" authorization codes containing the same timestamp. Defaults to 5. May not be updated.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "ValidationFields": {
                        "description": "The defined fields to verify when reading authorization codes generated from this definition. May not be updated.",
                        "items": {
                            "properties": {
                                "Name": {
                                    "description": "The name of the field.",
                                    "type": "string"
                                },
                                "Type": {
                                    "description": "The type for this validation field.",
                                    "enum": [
                                        "Boolean",
                                        "Float",
                                        "Int",
                                        "StringCaseInsensitive",
                                        "StringCaseSensitive"
                                    ],
                                    "type": "string"
                                }
                            },
                            "required": [
                                "Type",
                                "Name"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "Name"
                ],
                "type": "object"
            },
            "AuthorizationCodes.Shared.Models.DataField": {
                "properties": {
                    "DigitsPrecision": {
                        "description": "The number of decimal digits to be used by this data field. Required only by the 'Float' data type. Must be in range 1 - 15.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "MaxExponent": {
                        "description": "The maximum exponent to be used by this data field. Required only by the 'Float' data type. May not be greater than 307.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "MaxValue": {
                        "description": "The maximum value that can be represented by this data field. Required only by the 'Decimal' data type.",
                        "format": "double",
                        "type": "number"
                    },
                    "MinExponent": {
                        "description": "The minimum exponent to be used by this data field. Required only by the 'Float' data type. May not be less than -292.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "MinValue": {
                        "description": "The minimum value that can be represented by this data field. Required only by the 'Decimal' data type.",
                        "format": "double",
                        "type": "number"
                    },
                    "Name": {
                        "description": "The name of the field.",
                        "type": "string"
                    },
                    "ScaleFactor": {
                        "description": "The resolution of values that can be represented by this data field. The base value is multiplied by this to compute the final value. Required only by the 'Decimal' data type.",
                        "format": "double",
                        "type": "number"
                    },
                    "Signed": {
                        "description": "Indicates whether this value is signed. Required only by the 'Float' data type.",
                        "type": "boolean"
                    },
                    "Type": {
                        "description": "The type of this data field.",
                        "enum": [
                            "Boolean",
                            "Decimal",
                            "Float",
                            "VariableLengthByteArray"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "Type",
                    "Name"
                ],
                "type": "object"
            },
            "AuthorizationCodes.Shared.Models.Parameter": {
                "description": "A parameter used to create an authorization code.",
                "properties": {
                    "Name": {
                        "description": "The name of the parameter. May not be updated.",
                        "type": "string"
                    },
                    "Value": {
                        "description": "The value of the parameter. May not be updated.",
                        "type": "string"
                    }
                },
                "required": [
                    "Name",
                    "Value"
                ],
                "type": "object"
            },
            "AuthorizationCodes.Shared.Models.ValidationField": {
                "properties": {
                    "Name": {
                        "description": "The name of the field.",
                        "type": "string"
                    },
                    "Type": {
                        "description": "The type for this validation field.",
                        "enum": [
                            "Boolean",
                            "Float",
                            "Int",
                            "StringCaseInsensitive",
                            "StringCaseSensitive"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "Type",
                    "Name"
                ],
                "type": "object"
            },
            "BuildSystem.Shared.DTO.Activity": {
                "description": "A DTO for an IActivity",
                "properties": {
                    "ActivityID": {
                        "description": "The ID of the activity",
                        "format": "int32",
                        "type": "integer"
                    },
                    "Deleted": {
                        "description": "",
                        "type": "boolean"
                    },
                    "Name": {
                        "description": "The name of the activity",
                        "type": "string"
                    },
                    "Parameters": {
                        "description": "The parameters for this activity",
                        "items": {
                            "description": "A DTO for an IParameter",
                            "properties": {
                                "Direction": {
                                    "description": "The parameter direction (Input or Output)",
                                    "enum": [
                                        "Input",
                                        "Output"
                                    ],
                                    "type": "string"
                                },
                                "Name": {
                                    "description": "The name of the parameter",
                                    "type": "string"
                                },
                                "Type": {
                                    "description": "The data type of the parameter",
                                    "enum": [
                                        "String",
                                        "Boolean",
                                        "Integer",
                                        "Float",
                                        "StringDictionary"
                                    ],
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "readOnly": true,
                        "type": "array"
                    },
                    "Steps": {
                        "description": "The steps which are performed for this activity",
                        "items": {
                            "description": "A DTO for an IActivityStep",
                            "properties": {
                                "ActivityID": {
                                    "description": "The id of the activity this activity step belongs to",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "ActivityStepID": {
                                    "description": "The id of this activity step",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "ImplementationID": {
                                    "description": "The implementation id which is used to look up the step implementation",
                                    "type": "string"
                                },
                                "ParameterMappings": {
                                    "description": "The mapping of values from a source to be used for the step parameters",
                                    "items": {
                                        "description": "A DTO for an IParameterMapping",
                                        "properties": {
                                            "Name": {
                                                "description": "The name of the parameter this mapping applies to",
                                                "type": "string"
                                            },
                                            "Source": {
                                                "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                "type": "string"
                                            },
                                            "SourceType": {
                                                "description": "The source type used for supplying the parameter",
                                                "enum": [
                                                    "Constant",
                                                    "Variable"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "readOnly": true,
                                    "type": "array"
                                },
                                "RunOrder": {
                                    "description": "The order of this activity step relative to other activity steps",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "StepID": {
                                    "description": "The id of the step",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "StepName": {
                                    "description": "The name of the step",
                                    "type": "string"
                                },
                                "UseConfig": {
                                    "description": "Indicates the configuration for the ActivityStep to use at runtime.  The build agent must provide this configuration",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "readOnly": true,
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "BuildSystem.Shared.DTO.ActivityRun": {
                "description": "A DTO for an IActivityRun",
                "properties": {
                    "ActivityRunID": {
                        "description": "The identifier for the ActivityRun",
                        "format": "int32",
                        "type": "integer"
                    },
                    "EndDate": {
                        "description": "Read Only. The UTC date and time when the activity completed",
                        "format": "date-time",
                        "type": "string"
                    },
                    "JobActivityID": {
                        "description": "Read Only. The ID of the Job Activity that defines this activity run",
                        "format": "int32",
                        "type": "integer"
                    },
                    "JobRunID": {
                        "description": "Read Only. The ID of the JobRun under which this ActivityRun is executing",
                        "format": "int32",
                        "type": "integer"
                    },
                    "Parameters": {
                        "description": "The parameters used for this run of the activity.  Parameters cannot be added or removed, but output parameter values may be updated.",
                        "items": {
                            "description": "A DTO for an IParameterValue",
                            "properties": {
                                "Direction": {
                                    "description": "The parameter direction (Input or Output)",
                                    "enum": [
                                        "Input",
                                        "Output"
                                    ],
                                    "type": "string"
                                },
                                "Name": {
                                    "description": "The name of the parameter this value is for",
                                    "type": "string"
                                },
                                "Value": {
                                    "description": "The parameter value in string representation",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "readOnly": true,
                        "type": "array"
                    },
                    "StartDate": {
                        "description": "Read Only. The UTC date and time when the activity started",
                        "format": "date-time",
                        "type": "string"
                    },
                    "Status": {
                        "description": "The status of this ActivityRun",
                        "properties": {
                            "CurrentStep": {
                                "description": "The activity step currently executing, indicated by numeric order",
                                "format": "int32",
                                "type": "integer"
                            },
                            "Status": {
                                "description": "The status of the ActivityRun",
                                "enum": [
                                    "Ready",
                                    "InProgress",
                                    "Succeeded",
                                    "Cancelled",
                                    "Failed"
                                ],
                                "type": "string"
                            },
                            "StepProgress": {
                                "description": "The percent progress from the currently executing step.  This value shall be null if progress is not available",
                                "format": "int32",
                                "type": "integer"
                            },
                            "StepStatus": {
                                "description": "The status text from the currently executing step",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "Steps": {
                        "description": "Read Only. The steps to be executed for the activity.  These steps come from the relationship through JobActivity down to ActivityStep",
                        "items": {
                            "description": "A DTO for an IActivityStep",
                            "properties": {
                                "ActivityID": {
                                    "description": "The id of the activity this activity step belongs to",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "ActivityStepID": {
                                    "description": "The id of this activity step",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "ImplementationID": {
                                    "description": "The implementation id which is used to look up the step implementation",
                                    "type": "string"
                                },
                                "ParameterMappings": {
                                    "description": "The mapping of values from a source to be used for the step parameters",
                                    "items": {
                                        "description": "A DTO for an IParameterMapping",
                                        "properties": {
                                            "Name": {
                                                "description": "The name of the parameter this mapping applies to",
                                                "type": "string"
                                            },
                                            "Source": {
                                                "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                "type": "string"
                                            },
                                            "SourceType": {
                                                "description": "The source type used for supplying the parameter",
                                                "enum": [
                                                    "Constant",
                                                    "Variable"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "readOnly": true,
                                    "type": "array"
                                },
                                "RunOrder": {
                                    "description": "The order of this activity step relative to other activity steps",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "StepID": {
                                    "description": "The id of the step",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "StepName": {
                                    "description": "The name of the step",
                                    "type": "string"
                                },
                                "UseConfig": {
                                    "description": "Indicates the configuration for the ActivityStep to use at runtime.  The build agent must provide this configuration",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "readOnly": true,
                        "type": "array"
                    }
                },
                "required": [
                    "Status"
                ],
                "type": "object"
            },
            "BuildSystem.Shared.DTO.ActivityRunStatus": {
                "description": "A DTO for an IActivityRunStatus",
                "properties": {
                    "CurrentStep": {
                        "description": "The activity step currently executing, indicated by numeric order",
                        "format": "int32",
                        "type": "integer"
                    },
                    "Status": {
                        "description": "The status of the ActivityRun",
                        "enum": [
                            "Ready",
                            "InProgress",
                            "Succeeded",
                            "Cancelled",
                            "Failed"
                        ],
                        "type": "string"
                    },
                    "StepProgress": {
                        "description": "The percent progress from the currently executing step.  This value shall be null if progress is not available",
                        "format": "int32",
                        "type": "integer"
                    },
                    "StepStatus": {
                        "description": "The status text from the currently executing step",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "BuildSystem.Shared.DTO.ActivityStep": {
                "description": "A DTO for an IActivityStep",
                "properties": {
                    "ActivityID": {
                        "description": "The id of the activity this activity step belongs to",
                        "format": "int32",
                        "type": "integer"
                    },
                    "ActivityStepID": {
                        "description": "The id of this activity step",
                        "format": "int32",
                        "type": "integer"
                    },
                    "ImplementationID": {
                        "description": "The implementation id which is used to look up the step implementation",
                        "type": "string"
                    },
                    "ParameterMappings": {
                        "description": "The mapping of values from a source to be used for the step parameters",
                        "items": {
                            "description": "A DTO for an IParameterMapping",
                            "properties": {
                                "Name": {
                                    "description": "The name of the parameter this mapping applies to",
                                    "type": "string"
                                },
                                "Source": {
                                    "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                    "type": "string"
                                },
                                "SourceType": {
                                    "description": "The source type used for supplying the parameter",
                                    "enum": [
                                        "Constant",
                                        "Variable"
                                    ],
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "readOnly": true,
                        "type": "array"
                    },
                    "RunOrder": {
                        "description": "The order of this activity step relative to other activity steps",
                        "format": "int32",
                        "type": "integer"
                    },
                    "StepID": {
                        "description": "The id of the step",
                        "format": "int32",
                        "type": "integer"
                    },
                    "StepName": {
                        "description": "The name of the step",
                        "type": "string"
                    },
                    "UseConfig": {
                        "description": "Indicates the configuration for the ActivityStep to use at runtime.  The build agent must provide this configuration",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "BuildSystem.Shared.DTO.Agent": {
                "description": "A DTO for an IAgent",
                "properties": {
                    "AgentID": {
                        "description": "The id of the Agent",
                        "format": "int32",
                        "type": "integer"
                    },
                    "KeepAliveInterval": {
                        "description": "The 'Heartbeat Interval' used by the Build Agent.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "MachineName": {
                        "description": "The machine name of the computer the agent is running on",
                        "type": "string"
                    },
                    "Status": {
                        "description": "The agent status.",
                        "properties": {
                            "LastStatusUpdate": {
                                "description": "ReadOnly. The UTC date and time of the last status update",
                                "format": "date-time",
                                "type": "string"
                            },
                            "Online": {
                                "description": "Indicates if the agent is online",
                                "type": "boolean"
                            }
                        },
                        "required": [
                            "Online"
                        ],
                        "type": "object"
                    },
                    "StepConfigurations": {
                        "description": "The agent's step configurations",
                        "items": {
                            "description": "Step Configuration",
                            "properties": {
                                "Configurations": {
                                    "description": "The configuration names supported.  The configurations collection is empty for steps which do not require configuration.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "StepImplementationID": {
                                    "description": "The Implementation ID of the step this configuration is for",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "StepImplementationID"
                            ],
                            "type": "object"
                        },
                        "readOnly": true,
                        "type": "array"
                    },
                    "UserID": {
                        "description": "The UserID of the Agent",
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "required": [
                    "UserID",
                    "MachineName",
                    "Status",
                    "KeepAliveInterval"
                ],
                "type": "object"
            },
            "BuildSystem.Shared.DTO.AgentStatus": {
                "description": "A DTO for an IAgentStatus",
                "properties": {
                    "LastStatusUpdate": {
                        "description": "ReadOnly. The UTC date and time of the last status update",
                        "format": "date-time",
                        "type": "string"
                    },
                    "Online": {
                        "description": "Indicates if the agent is online",
                        "type": "boolean"
                    }
                },
                "required": [
                    "Online"
                ],
                "type": "object"
            },
            "BuildSystem.Shared.DTO.Job": {
                "description": "A DTO for an IJob",
                "properties": {
                    "Activities": {
                        "description": "The activities which are performed for the job",
                        "items": {
                            "description": "A DTO for an IJobActivity",
                            "properties": {
                                "ActivityID": {
                                    "description": "The ID of the activity to be run as part of the job",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "JobActivityID": {
                                    "description": "The ID of this job activity",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "JobID": {
                                    "description": "The ID of the job this job activity belongs to",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "ParameterMappings": {
                                    "description": "The mapping of values from a source to be used for the activity parameters",
                                    "items": {
                                        "description": "A DTO for an IParameterMapping",
                                        "properties": {
                                            "Name": {
                                                "description": "The name of the parameter this mapping applies to",
                                                "type": "string"
                                            },
                                            "Source": {
                                                "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                "type": "string"
                                            },
                                            "SourceType": {
                                                "description": "The source type used for supplying the parameter",
                                                "enum": [
                                                    "Constant",
                                                    "Variable"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "readOnly": true,
                                    "type": "array"
                                },
                                "RunOrder": {
                                    "description": "The order of this job activity relative to others in the job",
                                    "format": "int32",
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        },
                        "readOnly": true,
                        "type": "array"
                    },
                    "Deleted": {
                        "description": "Indicates if the job has been deleted.",
                        "type": "boolean"
                    },
                    "JobID": {
                        "description": "The ID of the job",
                        "format": "int32",
                        "type": "integer"
                    },
                    "Name": {
                        "description": "The name of the job",
                        "type": "string"
                    },
                    "Parameters": {
                        "description": "The parameters for the job",
                        "items": {
                            "description": "A DTO for an IParameter",
                            "properties": {
                                "Direction": {
                                    "description": "The parameter direction (Input or Output)",
                                    "enum": [
                                        "Input",
                                        "Output"
                                    ],
                                    "type": "string"
                                },
                                "Name": {
                                    "description": "The name of the parameter",
                                    "type": "string"
                                },
                                "Type": {
                                    "description": "The data type of the parameter",
                                    "enum": [
                                        "String",
                                        "Boolean",
                                        "Integer",
                                        "Float",
                                        "StringDictionary"
                                    ],
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "readOnly": true,
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "BuildSystem.Shared.DTO.JobActivity": {
                "description": "A DTO for an IJobActivity",
                "properties": {
                    "ActivityID": {
                        "description": "The ID of the activity to be run as part of the job",
                        "format": "int32",
                        "type": "integer"
                    },
                    "JobActivityID": {
                        "description": "The ID of this job activity",
                        "format": "int32",
                        "type": "integer"
                    },
                    "JobID": {
                        "description": "The ID of the job this job activity belongs to",
                        "format": "int32",
                        "type": "integer"
                    },
                    "ParameterMappings": {
                        "description": "The mapping of values from a source to be used for the activity parameters",
                        "items": {
                            "description": "A DTO for an IParameterMapping",
                            "properties": {
                                "Name": {
                                    "description": "The name of the parameter this mapping applies to",
                                    "type": "string"
                                },
                                "Source": {
                                    "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                    "type": "string"
                                },
                                "SourceType": {
                                    "description": "The source type used for supplying the parameter",
                                    "enum": [
                                        "Constant",
                                        "Variable"
                                    ],
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "readOnly": true,
                        "type": "array"
                    },
                    "RunOrder": {
                        "description": "The order of this job activity relative to others in the job",
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "BuildSystem.Shared.DTO.JobRun": {
                "description": "A DTO for an IJobRun",
                "properties": {
                    "ActivityRuns": {
                        "description": "The activity runs belonging to this JobRun",
                        "items": {
                            "description": "A DTO for an IActivityRun",
                            "properties": {
                                "ActivityRunID": {
                                    "description": "The identifier for the ActivityRun",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "EndDate": {
                                    "description": "Read Only. The UTC date and time when the activity completed",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "JobActivityID": {
                                    "description": "Read Only. The ID of the Job Activity that defines this activity run",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "JobRunID": {
                                    "description": "Read Only. The ID of the JobRun under which this ActivityRun is executing",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "Parameters": {
                                    "description": "The parameters used for this run of the activity.  Parameters cannot be added or removed, but output parameter values may be updated.",
                                    "items": {
                                        "description": "A DTO for an IParameterValue",
                                        "properties": {
                                            "Direction": {
                                                "description": "The parameter direction (Input or Output)",
                                                "enum": [
                                                    "Input",
                                                    "Output"
                                                ],
                                                "type": "string"
                                            },
                                            "Name": {
                                                "description": "The name of the parameter this value is for",
                                                "type": "string"
                                            },
                                            "Value": {
                                                "description": "The parameter value in string representation",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "readOnly": true,
                                    "type": "array"
                                },
                                "StartDate": {
                                    "description": "Read Only. The UTC date and time when the activity started",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "Status": {
                                    "description": "The status of this ActivityRun",
                                    "properties": {
                                        "CurrentStep": {
                                            "description": "The activity step currently executing, indicated by numeric order",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Status": {
                                            "description": "The status of the ActivityRun",
                                            "enum": [
                                                "Ready",
                                                "InProgress",
                                                "Succeeded",
                                                "Cancelled",
                                                "Failed"
                                            ],
                                            "type": "string"
                                        },
                                        "StepProgress": {
                                            "description": "The percent progress from the currently executing step.  This value shall be null if progress is not available",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "StepStatus": {
                                            "description": "The status text from the currently executing step",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "Steps": {
                                    "description": "Read Only. The steps to be executed for the activity.  These steps come from the relationship through JobActivity down to ActivityStep",
                                    "items": {
                                        "description": "A DTO for an IActivityStep",
                                        "properties": {
                                            "ActivityID": {
                                                "description": "The id of the activity this activity step belongs to",
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "ActivityStepID": {
                                                "description": "The id of this activity step",
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "ImplementationID": {
                                                "description": "The implementation id which is used to look up the step implementation",
                                                "type": "string"
                                            },
                                            "ParameterMappings": {
                                                "description": "The mapping of values from a source to be used for the step parameters",
                                                "items": {
                                                    "description": "A DTO for an IParameterMapping",
                                                    "properties": {
                                                        "Name": {
                                                            "description": "The name of the parameter this mapping applies to",
                                                            "type": "string"
                                                        },
                                                        "Source": {
                                                            "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                            "type": "string"
                                                        },
                                                        "SourceType": {
                                                            "description": "The source type used for supplying the parameter",
                                                            "enum": [
                                                                "Constant",
                                                                "Variable"
                                                            ],
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "readOnly": true,
                                                "type": "array"
                                            },
                                            "RunOrder": {
                                                "description": "The order of this activity step relative to other activity steps",
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "StepID": {
                                                "description": "The id of the step",
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "StepName": {
                                                "description": "The name of the step",
                                                "type": "string"
                                            },
                                            "UseConfig": {
                                                "description": "Indicates the configuration for the ActivityStep to use at runtime.  The build agent must provide this configuration",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "readOnly": true,
                                    "type": "array"
                                }
                            },
                            "required": [
                                "Status"
                            ],
                            "type": "object"
                        },
                        "readOnly": true,
                        "type": "array"
                    },
                    "EndDate": {
                        "description": "The UTC date and time when the job completed",
                        "format": "date-time",
                        "type": "string"
                    },
                    "JobID": {
                        "description": "The ID of the job that defines the run",
                        "format": "int32",
                        "type": "integer"
                    },
                    "JobRunID": {
                        "description": "The ID of this JobRun",
                        "format": "int32",
                        "type": "integer"
                    },
                    "Parameters": {
                        "description": "The parameters used for this run of the job",
                        "items": {
                            "description": "A DTO for an IParameterValue",
                            "properties": {
                                "Direction": {
                                    "description": "The parameter direction (Input or Output)",
                                    "enum": [
                                        "Input",
                                        "Output"
                                    ],
                                    "type": "string"
                                },
                                "Name": {
                                    "description": "The name of the parameter this value is for",
                                    "type": "string"
                                },
                                "Value": {
                                    "description": "The parameter value in string representation",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "readOnly": true,
                        "type": "array"
                    },
                    "StartDate": {
                        "description": "The UTC date and time when the job started",
                        "format": "date-time",
                        "type": "string"
                    },
                    "Status": {
                        "description": "The status of this JobRun",
                        "enum": [
                            "Ready",
                            "InProgress",
                            "Succeeded",
                            "Cancelled",
                            "Failed"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "BuildSystem.Shared.DTO.Parameter": {
                "description": "A DTO for an IParameter",
                "properties": {
                    "Direction": {
                        "description": "The parameter direction (Input or Output)",
                        "enum": [
                            "Input",
                            "Output"
                        ],
                        "type": "string"
                    },
                    "Name": {
                        "description": "The name of the parameter",
                        "type": "string"
                    },
                    "Type": {
                        "description": "The data type of the parameter",
                        "enum": [
                            "String",
                            "Boolean",
                            "Integer",
                            "Float",
                            "StringDictionary"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "BuildSystem.Shared.DTO.ParameterMapping": {
                "description": "A DTO for an IParameterMapping",
                "properties": {
                    "Name": {
                        "description": "The name of the parameter this mapping applies to",
                        "type": "string"
                    },
                    "Source": {
                        "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                        "type": "string"
                    },
                    "SourceType": {
                        "description": "The source type used for supplying the parameter",
                        "enum": [
                            "Constant",
                            "Variable"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "BuildSystem.Shared.DTO.ParameterValue": {
                "description": "A DTO for an IParameterValue",
                "properties": {
                    "Direction": {
                        "description": "The parameter direction (Input or Output)",
                        "enum": [
                            "Input",
                            "Output"
                        ],
                        "type": "string"
                    },
                    "Name": {
                        "description": "The name of the parameter this value is for",
                        "type": "string"
                    },
                    "Value": {
                        "description": "The parameter value in string representation",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "BuildSystem.Shared.DTO.Step": {
                "description": "Step",
                "properties": {
                    "ConfigRequired": {
                        "description": "Indicates if the step requires configuration values to be provided by the build agent",
                        "type": "boolean"
                    },
                    "Deleted": {
                        "description": "Read Only.  Indicates if the record is deleted.",
                        "type": "boolean"
                    },
                    "Description": {
                        "description": "A description of the step to be presented to a user",
                        "type": "string"
                    },
                    "ImplementationID": {
                        "description": "The implementation ID used to lookup the step implementation when it is executed",
                        "type": "string"
                    },
                    "Name": {
                        "description": "The name of the step",
                        "type": "string"
                    },
                    "Parameters": {
                        "description": "The parameters for this step",
                        "items": {
                            "description": "A DTO for an IParameter",
                            "properties": {
                                "Direction": {
                                    "description": "The parameter direction (Input or Output)",
                                    "enum": [
                                        "Input",
                                        "Output"
                                    ],
                                    "type": "string"
                                },
                                "Name": {
                                    "description": "The name of the parameter",
                                    "type": "string"
                                },
                                "Type": {
                                    "description": "The data type of the parameter",
                                    "enum": [
                                        "String",
                                        "Boolean",
                                        "Integer",
                                        "Float",
                                        "StringDictionary"
                                    ],
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "readOnly": true,
                        "type": "array"
                    },
                    "StepID": {
                        "description": "The ID of the step",
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "required": [
                    "Name",
                    "ConfigRequired",
                    "ImplementationID"
                ],
                "type": "object"
            },
            "BuildSystem.Shared.DTO.StepConfiguration": {
                "description": "Step Configuration",
                "properties": {
                    "Configurations": {
                        "description": "The configuration names supported.  The configurations collection is empty for steps which do not require configuration.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "StepImplementationID": {
                        "description": "The Implementation ID of the step this configuration is for",
                        "type": "string"
                    }
                },
                "required": [
                    "StepImplementationID"
                ],
                "type": "object"
            },
            "ContentSubmission.Shared.BusinessEntities.ContentDefinition": {
                "properties": {
                    "ContentDefinitionID": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "Description": {
                        "type": "string"
                    },
                    "Name": {
                        "type": "string"
                    },
                    "PackageTypeID": {
                        "type": "string"
                    },
                    "TypeID": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ContentSubmission.Shared.BusinessEntities.ContentReleaseVersion": {
                "properties": {
                    "ContentDefinitionID": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "ContentReleaseID": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "Deleted": {
                        "type": "boolean"
                    },
                    "PublisherUserID": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "ReleaseID": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "TestReportUrl": {
                        "type": "string"
                    },
                    "UpdatedDate": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "Version": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ContentSubmission.Shared.BusinessEntities.ContentSubmission": {
                "properties": {
                    "ContentDefinitionID": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "ContentSubmissionID": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "JobRunID": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "PackageID": {
                        "type": "string"
                    },
                    "ReleaseNotes": {
                        "type": "string"
                    },
                    "Repository": {
                        "type": "string"
                    },
                    "Revision": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "SubmissionDate": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "UserID": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "Version": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ContentSubmission.Shared.BusinessEntities.ContentSubmissionType": {
                "properties": {
                    "AttributeTemplate": {
                        "type": "string"
                    },
                    "CategoryTemplate": {
                        "type": "string"
                    },
                    "Description": {
                        "type": "string"
                    },
                    "Enabled": {
                        "type": "boolean"
                    },
                    "ID": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "InventoryPackageID": {
                        "type": "string"
                    },
                    "JobID": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "Name": {
                        "type": "string"
                    },
                    "ReleaseNotesDescription": {
                        "type": "string"
                    }
                },
                "required": [
                    "Name",
                    "Description"
                ],
                "type": "object"
            },
            "ContentSubmission.Shared.BusinessEntities.Release": {
                "properties": {
                    "BuildDate": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "ReleaseDate": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "ReleaseID": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "ReleaseNumber": {
                        "type": "string"
                    },
                    "Visible": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "ContentSubmission.Shared.BusinessEntities.UserContentDefinition": {
                "properties": {
                    "ContentDefinitionID": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "UserContentDefinitionID": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "UserID": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "DealerDB.Models.Dealer": {
                "properties": {
                    "BillingAddress": {
                        "type": "string"
                    },
                    "BillingAddress2": {
                        "type": "string"
                    },
                    "BillingAddress3": {
                        "type": "string"
                    },
                    "BillingAddress4": {
                        "type": "string"
                    },
                    "BillingCity": {
                        "type": "string"
                    },
                    "BillingCountry": {
                        "type": "string"
                    },
                    "BillingCountryCode": {
                        "type": "string"
                    },
                    "BillingState": {
                        "type": "string"
                    },
                    "BillingZip": {
                        "type": "string"
                    },
                    "Brands": {
                        "items": {
                            "type": "string"
                        },
                        "readOnly": true,
                        "type": "array"
                    },
                    "DealerCode": {
                        "type": "string"
                    },
                    "DealerName": {
                        "type": "string"
                    },
                    "DealerStatus": {
                        "type": "string"
                    },
                    "DealerStatusUpdateDate": {
                        "type": "string"
                    },
                    "Filler": {
                        "type": "string"
                    },
                    "IsValid": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "LanguagePreference": {
                        "type": "string"
                    },
                    "Region1": {
                        "type": "string"
                    },
                    "Region2": {
                        "type": "string"
                    },
                    "RegionMapping": {
                        "type": "string"
                    },
                    "RoleBrand": {
                        "type": "string"
                    },
                    "ShippingAddress2": {
                        "type": "string"
                    },
                    "ShippingAddress3": {
                        "type": "string"
                    },
                    "ShippingAddress4": {
                        "type": "string"
                    },
                    "ShippingCity": {
                        "type": "string"
                    },
                    "ShippingCountry": {
                        "type": "string"
                    },
                    "ShippingState": {
                        "type": "string"
                    },
                    "ShippingStreet": {
                        "type": "string"
                    },
                    "ShippingZip": {
                        "type": "string"
                    },
                    "Telephone": {
                        "type": "string"
                    },
                    "VATCode": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DealerDB.Models.DealersPerCountry": {
                "properties": {
                    "Count": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "Country": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DealerDB.Models.EDTLiteRegistration": {
                "description": "Registration for an EDT Lite",
                "properties": {
                    "DealerCode": {
                        "description": "The dealer code with which the EDT Lite was created.",
                        "type": "string"
                    },
                    "ExpirationDate": {
                        "description": "The date at which the content of the EDT Lite expires.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "InstanceID": {
                        "description": "The identifier for the EDT Lite.",
                        "type": "string"
                    },
                    "VoucherCode": {
                        "description": "The voucher code with which the EDT Lite was created.",
                        "type": "string"
                    }
                },
                "required": [
                    "InstanceID",
                    "VoucherCode",
                    "ExpirationDate"
                ],
                "type": "object"
            },
            "DealerDB.Models.License": {
                "properties": {
                    "Active": {
                        "description": "True if license is active.",
                        "type": "boolean"
                    },
                    "CreatedDate": {
                        "description": "The date the license was created.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "DeactivatedDate": {
                        "description": "The date the license was deactivated.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "LicenseActivationType": {
                        "description": "The type of license (e.g. EDT, EDT Lite)",
                        "enum": [
                            "EDT",
                            "EDTLite"
                        ],
                        "type": "string"
                    },
                    "LicenseID": {
                        "description": "The LicenseID",
                        "type": "string"
                    },
                    "LicenseVersion": {
                        "description": "The version of the license.",
                        "type": "string"
                    },
                    "RefreshDate": {
                        "description": "The date the license was refreshed.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "SystemInfo": {
                        "description": "Information about the system which is licensed.",
                        "type": "string"
                    },
                    "UpdatedLicenseVersion": {
                        "description": "The updated version of the license.  A value in this field indicates that the update has not been confirmed.",
                        "type": "string"
                    },
                    "VoucherCode": {
                        "description": "The voucher code that generated the license.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DealerDB.Models.LicenseActivation": {
                "properties": {
                    "Key": {
                        "description": "The license key in base64 format.  This is only provided when the LicenseData is a new license.",
                        "type": "string"
                    },
                    "LicenseData": {
                        "description": "The license data in base64 format.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DealerDB.Models.LicenseActivationConfirm": {
                "properties": {
                    "LicenseVersion": {
                        "description": "The license version to confirm",
                        "type": "string"
                    }
                },
                "required": [
                    "LicenseVersion"
                ],
                "type": "object"
            },
            "DealerDB.Models.LicenseActivationCreate": {
                "properties": {
                    "DealerCode": {
                        "description": "The Dealer Code of the dealer activating the license",
                        "type": "string"
                    },
                    "LicenseActivationType": {
                        "description": "The type of license to create (e.g. EDT, EDT Lite)",
                        "enum": [
                            "EDT",
                            "EDTLite"
                        ],
                        "type": "string"
                    },
                    "PostalCode": {
                        "description": "The dealer's postal code (zip code)",
                        "type": "string"
                    },
                    "SystemInfo": {
                        "description": "Information about  the system being activated",
                        "type": "string"
                    },
                    "VoucherCode": {
                        "description": "The Voucher Code to use for activation",
                        "type": "string"
                    }
                },
                "required": [
                    "VoucherCode",
                    "DealerCode",
                    "PostalCode",
                    "SystemInfo"
                ],
                "type": "object"
            },
            "DealerDB.Models.LicenseActivationUpdate": {
                "properties": {
                    "LicenseVersion": {
                        "description": "The license version to update",
                        "type": "string"
                    },
                    "SystemInfo": {
                        "description": "Information about  the system being activated",
                        "type": "string"
                    }
                },
                "required": [
                    "LicenseVersion"
                ],
                "type": "object"
            },
            "DealerDB.Models.Voucher": {
                "description": "A voucher for EDT activation",
                "properties": {
                    "CreatedDate": {
                        "description": "Read-Only. The date the voucher was created.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "DealerCode": {
                        "description": "The dealer code the voucher is assigned to.  Required for commercial vouchers.",
                        "type": "string"
                    },
                    "Deleted": {
                        "description": "Read-Only. True if voucher has been deleted.",
                        "type": "boolean"
                    },
                    "Email": {
                        "description": "The email address. Required for Internal Vouchers",
                        "type": "string"
                    },
                    "ExpirationDate": {
                        "description": "The expiration date of the voucher. Required for Temporary Vouchers.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "LicenseTo": {
                        "description": "Required for Internal Vouchers",
                        "type": "string"
                    },
                    "ModifiedBy": {
                        "description": "Read-Only. The user that made the last modification to the voucher.",
                        "type": "string"
                    },
                    "OrderNumber": {
                        "description": "The order number of a commercial license. Required for Commercial Vouchers. Not supported for other Vouchers.",
                        "type": "string"
                    },
                    "Punched": {
                        "description": "True if voucher has aleady been used.  False if the voucher has not been used.",
                        "type": "boolean"
                    },
                    "PunchedDate": {
                        "description": "Read-Only. The date the voucher was punched.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "Purpose": {
                        "description": "Required for Internal Vouchers",
                        "type": "string"
                    },
                    "Type": {
                        "description": "The type of voucher. Commercial is the default if not specified.",
                        "enum": [
                            "Commercial",
                            "Internal",
                            "Temporary"
                        ],
                        "type": "string"
                    },
                    "VoucherCode": {
                        "description": "The voucher code.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DealerDB.Models.VoucherHistory": {
                "properties": {
                    "ChangedDate": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "CreatedDate": {
                        "description": "Read-Only. The date the voucher was created.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "DealerCode": {
                        "description": "The dealer code the voucher is assigned to.  Required for commercial vouchers.",
                        "type": "string"
                    },
                    "Deleted": {
                        "description": "Read-Only. True if voucher has been deleted.",
                        "type": "boolean"
                    },
                    "Email": {
                        "description": "The email address. Required for Internal Vouchers",
                        "type": "string"
                    },
                    "ExpirationDate": {
                        "description": "The expiration date of the voucher. Required for Temporary Vouchers.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "ID": {
                        "description": "The id of the voucher history item",
                        "format": "int32",
                        "type": "integer"
                    },
                    "LicenseTo": {
                        "description": "Required for Internal Vouchers",
                        "type": "string"
                    },
                    "ModifiedBy": {
                        "description": "Read-Only. The user that made the last modification to the voucher.",
                        "type": "string"
                    },
                    "OrderNumber": {
                        "description": "The order number of a commercial license. Required for Commercial Vouchers. Not supported for other Vouchers.",
                        "type": "string"
                    },
                    "Punched": {
                        "description": "True if voucher has aleady been used.  False if the voucher has not been used.",
                        "type": "boolean"
                    },
                    "PunchedDate": {
                        "description": "Read-Only. The date the voucher was punched.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "Purpose": {
                        "description": "Required for Internal Vouchers",
                        "type": "string"
                    },
                    "Type": {
                        "description": "The type of voucher.",
                        "enum": [
                            "Commercial",
                            "Internal",
                            "Temporary"
                        ],
                        "type": "string"
                    },
                    "VoucherCode": {
                        "description": "The voucher code.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "System.Object": {
                "properties": {},
                "type": "object"
            },
            "UpdateSystem.Models.AttributeValue": {
                "properties": {
                    "Key": {
                        "description": "The attribute name",
                        "type": "string"
                    },
                    "TimeStamp": {
                        "description": "Read Only. The timestamp.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "Value": {
                        "description": "The value",
                        "type": "string"
                    }
                },
                "required": [
                    "Key"
                ],
                "type": "object"
            },
            "UpdateSystem.Models.AvailableSubscription": {
                "properties": {
                    "PackageType": {
                        "description": "The PackageType this subscription is for.",
                        "properties": {
                            "Attribute": {
                                "description": "The inventory attribute (from the InventoryPackage) used to determine what version of this package type is installed.",
                                "type": "string"
                            },
                            "Category": {
                                "description": "The inventory category (from the InventoryPackage) used to determine what version of this package type is installed.",
                                "type": "string"
                            },
                            "Description": {
                                "description": "The description of the package type",
                                "type": "string"
                            },
                            "Icon": {
                                "description": "Optional.  The icon to use for the PackageType, in base 64",
                                "type": "string"
                            },
                            "InventoryFrequency": {
                                "description": "The number of minutes to wait before requesting another inventory.  The default value is 1440 (24 hours).",
                                "format": "int32",
                                "type": "integer"
                            },
                            "InventoryPackage": {
                                "description": "The inventory package used to determine what version of this package type is installed.",
                                "type": "string"
                            },
                            "LocalizedDescription": {
                                "description": "Optional. The StringID used to localize the description of the PackageType",
                                "type": "string"
                            },
                            "LocalizedName": {
                                "description": "Optional. The StringID used to localize the name of the PackageType",
                                "type": "string"
                            },
                            "MaxDeltaPackages": {
                                "description": "The maximum number of \"chained\" delta packages to use when updating the client",
                                "format": "int32",
                                "type": "integer"
                            },
                            "PackageTypeID": {
                                "description": "Read Only. The package type id.",
                                "type": "string"
                            }
                        },
                        "required": [
                            "Description"
                        ],
                        "type": "object"
                    },
                    "SubscriptionType": {
                        "description": "The type of subscription supported.",
                        "enum": [
                            "Required",
                            "IncludeByDefault",
                            "ExcludeByDefault"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UpdateSystem.Models.AvailableUpdateGroupSubscription": {
                "properties": {
                    "AvailableSubscriptions": {
                        "description": "The available subscriptions for this update group.",
                        "items": {
                            "properties": {
                                "PackageType": {
                                    "description": "The PackageType this subscription is for.",
                                    "properties": {
                                        "Attribute": {
                                            "description": "The inventory attribute (from the InventoryPackage) used to determine what version of this package type is installed.",
                                            "type": "string"
                                        },
                                        "Category": {
                                            "description": "The inventory category (from the InventoryPackage) used to determine what version of this package type is installed.",
                                            "type": "string"
                                        },
                                        "Description": {
                                            "description": "The description of the package type",
                                            "type": "string"
                                        },
                                        "Icon": {
                                            "description": "Optional.  The icon to use for the PackageType, in base 64",
                                            "type": "string"
                                        },
                                        "InventoryFrequency": {
                                            "description": "The number of minutes to wait before requesting another inventory.  The default value is 1440 (24 hours).",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "InventoryPackage": {
                                            "description": "The inventory package used to determine what version of this package type is installed.",
                                            "type": "string"
                                        },
                                        "LocalizedDescription": {
                                            "description": "Optional. The StringID used to localize the description of the PackageType",
                                            "type": "string"
                                        },
                                        "LocalizedName": {
                                            "description": "Optional. The StringID used to localize the name of the PackageType",
                                            "type": "string"
                                        },
                                        "MaxDeltaPackages": {
                                            "description": "The maximum number of \"chained\" delta packages to use when updating the client",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "PackageTypeID": {
                                            "description": "Read Only. The package type id.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "Description"
                                    ],
                                    "type": "object"
                                },
                                "SubscriptionType": {
                                    "description": "The type of subscription supported.",
                                    "enum": [
                                        "Required",
                                        "IncludeByDefault",
                                        "ExcludeByDefault"
                                    ],
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "UpdateGroup": {
                        "description": "The Update Group this subscription is for.",
                        "properties": {
                            "Description": {
                                "description": "The description of the update group",
                                "type": "string"
                            },
                            "ID": {
                                "type": "string"
                            },
                            "InventoryFrequency": {
                                "description": "The time in minutes between inventory checks. Default value is 1440 minutes (one day).",
                                "format": "int32",
                                "type": "integer"
                            },
                            "InventoryPackage": {
                                "description": "The Package ID of the package used for inventory",
                                "type": "string"
                            },
                            "LocalizedDescription": {
                                "description": "Optional. The StringID used to localize the description of the update group",
                                "type": "string"
                            },
                            "LocalizedName": {
                                "description": "Optional. The StringID used to localize the name of the update group",
                                "type": "string"
                            },
                            "ReportField": {
                                "description": "A field to return in the status report for this update group.\r\n            Specify the field with the format [Label]: {[InventoryPackageID].[Category].[Attribute]}.  (i.e. example: {bec778ca-278d-424a-867a-4653a1a19e86.MyCategory.MyAttribute})",
                                "type": "string"
                            },
                            "UpdateType": {
                                "description": "The update type name",
                                "type": "string"
                            },
                            "ValidatingField": {
                                "description": "A field used for validation in the status report for this update group.\r\n            Specify the field with the format [Label]: {[InventoryPackageID].[Category].[Attribute]}.  (i.e. example: {bec778ca-278d-424a-867a-4653a1a19e86.MyCategory.MyAttribute})",
                                "type": "string"
                            },
                            "ValueToValidate": {
                                "description": "The value to validate the ValidationField against.",
                                "type": "string"
                            },
                            "Version": {
                                "description": "The version of the UpdateGroup, this value is incremented with each modification to a related Bundle or PackageType",
                                "format": "byte",
                                "type": "string"
                            }
                        },
                        "required": [
                            "Description",
                            "UpdateType"
                        ],
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "UpdateSystem.Models.Bundle": {
                "properties": {
                    "Active": {
                        "description": "Default Value: false. During the creation of the Bundle, this field must be false.",
                        "type": "boolean"
                    },
                    "BundleID": {
                        "description": "Read-Only.",
                        "type": "string"
                    },
                    "BundleNumber": {
                        "description": "The bundle number",
                        "format": "int32",
                        "type": "integer"
                    },
                    "Description": {
                        "description": "The Bundle description.",
                        "type": "string"
                    },
                    "UpdateGroupID": {
                        "description": "The update group this bundle belongs to.",
                        "type": "string"
                    }
                },
                "required": [
                    "Description",
                    "UpdateGroupID",
                    "BundleNumber"
                ],
                "type": "object"
            },
            "UpdateSystem.Models.Category": {
                "properties": {
                    "Values": {
                        "items": {
                            "properties": {
                                "Key": {
                                    "description": "The attribute name",
                                    "type": "string"
                                },
                                "TimeStamp": {
                                    "description": "Read Only. The timestamp.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "Value": {
                                    "description": "The value",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "Key"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "category": {
                        "description": "The category name",
                        "type": "string"
                    }
                },
                "required": [
                    "category"
                ],
                "type": "object"
            },
            "UpdateSystem.Models.CheckinResult": {
                "properties": {
                    "Packages": {
                        "description": "The packages for the client to run.",
                        "items": {
                            "properties": {
                                "Autorun": {
                                    "description": "Value is true if package should run automatically. Default value is false.",
                                    "type": "boolean"
                                },
                                "CRC": {
                                    "description": "The CRC used to validate the download.",
                                    "type": "string"
                                },
                                "Description": {
                                    "description": "The package description",
                                    "type": "string"
                                },
                                "LocalizedName": {
                                    "description": "Optional. The StringID used to localize the name of the Package",
                                    "type": "string"
                                },
                                "Notes": {
                                    "description": "Notes about the package",
                                    "type": "string"
                                },
                                "PackageID": {
                                    "description": "Read Only. The package ID",
                                    "type": "string"
                                },
                                "PackageTypeID": {
                                    "description": "The id of the package type this package belongs to.",
                                    "type": "string"
                                },
                                "PreviousVersion": {
                                    "description": "For delta packages, the previous version required.  For non-delta packages, the Previous version is 0.  Default value is 0.",
                                    "format": "int32",
                                    "maximum": 2147483647,
                                    "minimum": 0,
                                    "type": "integer"
                                },
                                "ReleaseDate": {
                                    "description": "The date the package was released",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "Released": {
                                    "description": "True if the package is released.  Default value is False.",
                                    "type": "boolean"
                                },
                                "RemoveOnSuccess": {
                                    "description": "True to remove the package after successful execution.  Default value is False.",
                                    "type": "boolean"
                                },
                                "Size": {
                                    "description": "The size of the file at the specified URL.  If a size is not supplied at creation time, the size will be determined by the response from the URL.\r\n            If the size provided does not match the size in the response from the URL an error will be returned.",
                                    "format": "int64",
                                    "type": "integer"
                                },
                                "Switches": {
                                    "description": "The command line arguments for the package.  Default value is an empty string.",
                                    "type": "string"
                                },
                                "Url": {
                                    "description": "The Url to download the package from.",
                                    "type": "string"
                                },
                                "Version": {
                                    "description": "The version.",
                                    "format": "int32",
                                    "maximum": 2147483647,
                                    "minimum": 1,
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "PackageTypeID",
                                "Url",
                                "CRC",
                                "Version",
                                "Description",
                                "ReleaseDate"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "RemovePackages": {
                        "description": "The package ids for the client to remove.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "UpdateSystem.Models.Client": {
                "properties": {
                    "ClientID": {
                        "description": "Read Only. The id of the client",
                        "type": "string"
                    },
                    "LastCheckin": {
                        "description": "Read Only. The time of the client's last checkin with the server.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "Tag": {
                        "description": "A description of the client that can be used for easy reference",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UpdateSystem.Models.ClientInfo": {
                "properties": {
                    "ClientID": {
                        "description": "The id of the client",
                        "type": "string"
                    },
                    "Package": {
                        "description": "The packages",
                        "items": {
                            "properties": {
                                "Categories": {
                                    "description": "The package report's categories.",
                                    "items": {
                                        "properties": {
                                            "Values": {
                                                "items": {
                                                    "properties": {
                                                        "Key": {
                                                            "description": "The attribute name",
                                                            "type": "string"
                                                        },
                                                        "TimeStamp": {
                                                            "description": "Read Only. The timestamp.",
                                                            "format": "date-time",
                                                            "type": "string"
                                                        },
                                                        "Value": {
                                                            "description": "The value",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "Key"
                                                    ],
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "category": {
                                                "description": "The category name",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "category"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "PackageDescription": {
                                    "description": "Read Only. The package description",
                                    "type": "string"
                                },
                                "PackageID": {
                                    "description": "The PackageID.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "UpdateSystem.Models.ClientStatus": {
                "properties": {
                    "ClientID": {
                        "description": "The Client ID",
                        "type": "string"
                    },
                    "LastCheckin": {
                        "description": "The time of the client's last check-in",
                        "format": "date-time",
                        "type": "string"
                    },
                    "MinutesElapsed": {
                        "description": "The number of minutes that have passed since the last check-in",
                        "format": "int32",
                        "type": "integer"
                    },
                    "ReportResult": {
                        "description": "The result for the client included in the UpdateGroup's report",
                        "type": "string"
                    },
                    "ReportResultIsValid": {
                        "description": "True if the result for the client matches what is expected for the UpdateGroup",
                        "type": "boolean"
                    },
                    "ReportValue": {
                        "description": "The value for the client included in the UpdateGroup's report",
                        "type": "string"
                    },
                    "Tag": {
                        "description": "A descriptive name for the client",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UpdateSystem.Models.Package": {
                "properties": {
                    "Autorun": {
                        "description": "Value is true if package should run automatically. Default value is false.",
                        "type": "boolean"
                    },
                    "CRC": {
                        "description": "The CRC used to validate the download.",
                        "type": "string"
                    },
                    "Description": {
                        "description": "The package description",
                        "type": "string"
                    },
                    "LocalizedName": {
                        "description": "Optional. The StringID used to localize the name of the Package",
                        "type": "string"
                    },
                    "Notes": {
                        "description": "Notes about the package",
                        "type": "string"
                    },
                    "PackageID": {
                        "description": "Read Only. The package ID",
                        "type": "string"
                    },
                    "PackageTypeID": {
                        "description": "The id of the package type this package belongs to.",
                        "type": "string"
                    },
                    "PreviousVersion": {
                        "description": "For delta packages, the previous version required.  For non-delta packages, the Previous version is 0.  Default value is 0.",
                        "format": "int32",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "type": "integer"
                    },
                    "ReleaseDate": {
                        "description": "The date the package was released",
                        "format": "date-time",
                        "type": "string"
                    },
                    "Released": {
                        "description": "True if the package is released.  Default value is False.",
                        "type": "boolean"
                    },
                    "RemoveOnSuccess": {
                        "description": "True to remove the package after successful execution.  Default value is False.",
                        "type": "boolean"
                    },
                    "Size": {
                        "description": "The size of the file at the specified URL.  If a size is not supplied at creation time, the size will be determined by the response from the URL.\r\n            If the size provided does not match the size in the response from the URL an error will be returned.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "Switches": {
                        "description": "The command line arguments for the package.  Default value is an empty string.",
                        "type": "string"
                    },
                    "Url": {
                        "description": "The Url to download the package from.",
                        "type": "string"
                    },
                    "Version": {
                        "description": "The version.",
                        "format": "int32",
                        "maximum": 2147483647,
                        "minimum": 1,
                        "type": "integer"
                    }
                },
                "required": [
                    "PackageTypeID",
                    "Url",
                    "CRC",
                    "Version",
                    "Description",
                    "ReleaseDate"
                ],
                "type": "object"
            },
            "UpdateSystem.Models.PackageReport": {
                "properties": {
                    "Categories": {
                        "description": "The package report's categories.",
                        "items": {
                            "properties": {
                                "Values": {
                                    "items": {
                                        "properties": {
                                            "Key": {
                                                "description": "The attribute name",
                                                "type": "string"
                                            },
                                            "TimeStamp": {
                                                "description": "Read Only. The timestamp.",
                                                "format": "date-time",
                                                "type": "string"
                                            },
                                            "Value": {
                                                "description": "The value",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "Key"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "category": {
                                    "description": "The category name",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "category"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "PackageDescription": {
                        "description": "Read Only. The package description",
                        "type": "string"
                    },
                    "PackageID": {
                        "description": "The PackageID.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UpdateSystem.Models.PackageStatus": {
                "properties": {
                    "ClientID": {
                        "description": "The id of the client",
                        "type": "string"
                    },
                    "ClientKey": {
                        "description": "The client's tag",
                        "type": "string"
                    },
                    "DownloadTime": {
                        "description": "The amount of time spent downloading",
                        "type": "string"
                    },
                    "Downloaded": {
                        "description": "The number of bytes downloaded",
                        "type": "string"
                    },
                    "InstallCompleted": {
                        "description": "The time the package completed",
                        "type": "string"
                    },
                    "InstallResult": {
                        "description": "The package result",
                        "type": "string"
                    },
                    "InstallStarted": {
                        "description": "The time the package was started",
                        "type": "string"
                    },
                    "InstallTime": {
                        "description": "The amount of time required to run the package",
                        "type": "string"
                    },
                    "Percentage": {
                        "description": "The download completion percentage",
                        "type": "string"
                    },
                    "Size": {
                        "description": "The total size of the package",
                        "type": "string"
                    },
                    "Timestamp": {
                        "description": "The time the status was last updated",
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UpdateSystem.Models.PackageStatusSummary": {
                "properties": {
                    "AverageDownloadTime": {
                        "description": "The average time required to complete the download",
                        "type": "string"
                    },
                    "AverageInstallTime": {
                        "description": "The average time required to complete the install",
                        "type": "string"
                    },
                    "Downloaded": {
                        "description": "The number of clients that have completed the download",
                        "format": "int64",
                        "type": "integer"
                    },
                    "Error": {
                        "description": "The result of the install",
                        "format": "int32",
                        "type": "integer"
                    },
                    "Installed": {
                        "description": "The number of clients that have completed the install",
                        "format": "int64",
                        "type": "integer"
                    },
                    "Package": {
                        "description": "The name of the package",
                        "type": "string"
                    },
                    "PackageID": {
                        "description": "The ID of the package",
                        "type": "string"
                    },
                    "PackageStatusItems": {
                        "description": "The individual package status items",
                        "items": {
                            "properties": {
                                "ClientID": {
                                    "description": "The id of the client",
                                    "type": "string"
                                },
                                "ClientKey": {
                                    "description": "The client's tag",
                                    "type": "string"
                                },
                                "DownloadTime": {
                                    "description": "The amount of time spent downloading",
                                    "type": "string"
                                },
                                "Downloaded": {
                                    "description": "The number of bytes downloaded",
                                    "type": "string"
                                },
                                "InstallCompleted": {
                                    "description": "The time the package completed",
                                    "type": "string"
                                },
                                "InstallResult": {
                                    "description": "The package result",
                                    "type": "string"
                                },
                                "InstallStarted": {
                                    "description": "The time the package was started",
                                    "type": "string"
                                },
                                "InstallTime": {
                                    "description": "The amount of time required to run the package",
                                    "type": "string"
                                },
                                "Percentage": {
                                    "description": "The download completion percentage",
                                    "type": "string"
                                },
                                "Size": {
                                    "description": "The total size of the package",
                                    "type": "string"
                                },
                                "Timestamp": {
                                    "description": "The time the status was last updated",
                                    "format": "date-time",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "UpdateSystem.Models.PackageType": {
                "properties": {
                    "Attribute": {
                        "description": "The inventory attribute (from the InventoryPackage) used to determine what version of this package type is installed.",
                        "type": "string"
                    },
                    "Category": {
                        "description": "The inventory category (from the InventoryPackage) used to determine what version of this package type is installed.",
                        "type": "string"
                    },
                    "Description": {
                        "description": "The description of the package type",
                        "type": "string"
                    },
                    "Icon": {
                        "description": "Optional.  The icon to use for the PackageType, in base 64",
                        "type": "string"
                    },
                    "InventoryFrequency": {
                        "description": "The number of minutes to wait before requesting another inventory.  The default value is 1440 (24 hours).",
                        "format": "int32",
                        "type": "integer"
                    },
                    "InventoryPackage": {
                        "description": "The inventory package used to determine what version of this package type is installed.",
                        "type": "string"
                    },
                    "LocalizedDescription": {
                        "description": "Optional. The StringID used to localize the description of the PackageType",
                        "type": "string"
                    },
                    "LocalizedName": {
                        "description": "Optional. The StringID used to localize the name of the PackageType",
                        "type": "string"
                    },
                    "MaxDeltaPackages": {
                        "description": "The maximum number of \"chained\" delta packages to use when updating the client",
                        "format": "int32",
                        "type": "integer"
                    },
                    "PackageTypeID": {
                        "description": "Read Only. The package type id.",
                        "type": "string"
                    }
                },
                "required": [
                    "Description"
                ],
                "type": "object"
            },
            "UpdateSystem.Models.PackageTypeIDtoBundle": {
                "properties": {
                    "BundleID": {
                        "description": "The bundle to include the package in.",
                        "type": "string"
                    },
                    "PackageTypeID": {
                        "description": "The package type id of the package to include",
                        "type": "string"
                    },
                    "PackageVersion": {
                        "description": "The package version of the package to include",
                        "format": "int32",
                        "type": "integer"
                    },
                    "Priority": {
                        "description": "The execution priority of the package relative to other packages in the bundle. Range 1 - 100, lower value indication higher priority.",
                        "format": "int32",
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer"
                    },
                    "SubscriptionType": {
                        "description": "Optional. The type of subscription supported.  The default subscription type is Required.",
                        "enum": [
                            "Required",
                            "IncludeByDefault",
                            "ExcludeByDefault"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "BundleID",
                    "PackageTypeID",
                    "PackageVersion"
                ],
                "type": "object"
            },
            "UpdateSystem.Models.PagedClientStatusMetadata": {
                "properties": {
                    "Limit": {
                        "description": "The number of entities this paged response is limited to.",
                        "format": "int32",
                        "readOnly": true,
                        "type": "integer"
                    },
                    "Offset": {
                        "description": "The number of entities prior to this page of items.",
                        "format": "int32",
                        "readOnly": true,
                        "type": "integer"
                    },
                    "ReportResultExpected": {
                        "description": "The label for data contained in ClientStatus.ReportResults",
                        "type": "string"
                    },
                    "ReportResultLabel": {
                        "description": "The label for data contained in ClientStatus.ReportResults",
                        "type": "string"
                    },
                    "ReportValueLabel": {
                        "description": "The label for data contained in ClientStatus.ReportValue",
                        "type": "string"
                    },
                    "TotalCount": {
                        "description": "The total number of entities matching the request.",
                        "format": "int32",
                        "readOnly": true,
                        "type": "integer"
                    }
                },
                "required": [
                    "TotalCount",
                    "Limit",
                    "Offset",
                    "ReportValueLabel",
                    "ReportResultLabel",
                    "ReportResultExpected"
                ],
                "type": "object"
            },
            "UpdateSystem.Models.PriorityPackage": {
                "properties": {
                    "Autorun": {
                        "description": "Read Only. From the package specified by package ID.\r\n            Value is true if package should run automatically. Default value is false.",
                        "type": "boolean"
                    },
                    "CRC": {
                        "description": "Read Only. From the package specified by package ID.",
                        "type": "string"
                    },
                    "ClientID": {
                        "description": "The ID of the client to receive the priority package",
                        "type": "string"
                    },
                    "Description": {
                        "description": "Read Only. From the package specified by package ID.",
                        "type": "string"
                    },
                    "Notes": {
                        "description": "Read Only. From the package specified by package ID.",
                        "type": "string"
                    },
                    "PackageID": {
                        "description": "The ID of the package to push as a priority package.",
                        "type": "string"
                    },
                    "PackageTypeID": {
                        "description": "Read Only. From the package specified by package ID.",
                        "type": "string"
                    },
                    "PreviousVersion": {
                        "description": "Read Only. From the package specified by package ID.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "PriorityPackageID": {
                        "description": "Read Only. The ID of the priority package.",
                        "type": "string"
                    },
                    "ReleaseDate": {
                        "description": "Read Only. From the package specified by package ID.\r\n            The date the package was released",
                        "format": "date-time",
                        "type": "string"
                    },
                    "Released": {
                        "description": "Read Only. From the package specified by package ID.",
                        "type": "boolean"
                    },
                    "RemoveOnSuccess": {
                        "description": "Read Only. From the package specified by package ID.",
                        "type": "boolean"
                    },
                    "Size": {
                        "description": "Read Only. From the package specified by package ID.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "Switches": {
                        "description": "The command line arguments for the priority package.  Default value is an empty string.",
                        "type": "string"
                    },
                    "TimeStamp": {
                        "description": "Read Only. The timestamp of the priority package.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "Url": {
                        "description": "Read Only. From the package specified by package ID.",
                        "type": "string"
                    },
                    "Version": {
                        "description": "Read Only. From the package specified by package ID.",
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "required": [
                    "ClientID",
                    "PackageID"
                ],
                "type": "object"
            },
            "UpdateSystem.Models.UpdateGroup": {
                "properties": {
                    "Description": {
                        "description": "The description of the update group",
                        "type": "string"
                    },
                    "ID": {
                        "type": "string"
                    },
                    "InventoryFrequency": {
                        "description": "The time in minutes between inventory checks. Default value is 1440 minutes (one day).",
                        "format": "int32",
                        "type": "integer"
                    },
                    "InventoryPackage": {
                        "description": "The Package ID of the package used for inventory",
                        "type": "string"
                    },
                    "LocalizedDescription": {
                        "description": "Optional. The StringID used to localize the description of the update group",
                        "type": "string"
                    },
                    "LocalizedName": {
                        "description": "Optional. The StringID used to localize the name of the update group",
                        "type": "string"
                    },
                    "ReportField": {
                        "description": "A field to return in the status report for this update group.\r\n            Specify the field with the format [Label]: {[InventoryPackageID].[Category].[Attribute]}.  (i.e. example: {bec778ca-278d-424a-867a-4653a1a19e86.MyCategory.MyAttribute})",
                        "type": "string"
                    },
                    "UpdateType": {
                        "description": "The update type name",
                        "type": "string"
                    },
                    "ValidatingField": {
                        "description": "A field used for validation in the status report for this update group.\r\n            Specify the field with the format [Label]: {[InventoryPackageID].[Category].[Attribute]}.  (i.e. example: {bec778ca-278d-424a-867a-4653a1a19e86.MyCategory.MyAttribute})",
                        "type": "string"
                    },
                    "ValueToValidate": {
                        "description": "The value to validate the ValidationField against.",
                        "type": "string"
                    },
                    "Version": {
                        "description": "The version of the UpdateGroup, this value is incremented with each modification to a related Bundle or PackageType",
                        "format": "byte",
                        "type": "string"
                    }
                },
                "required": [
                    "Description",
                    "UpdateType"
                ],
                "type": "object"
            },
            "UpdateSystem.Models.UpdateGroupClientRelationship": {
                "properties": {
                    "Active": {
                        "description": "The subscription status.  The status is active by default.",
                        "type": "boolean"
                    },
                    "ClientID": {
                        "description": "Read Only after creation. The client id of the subscriber.",
                        "type": "string"
                    },
                    "LastCheckin": {
                        "description": "ReadOnly. The timestamp of the last checkin.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "RelationshipID": {
                        "description": "Read Only after creation. The relationship id.  A relationship id will be assigned if not provided on creation.",
                        "type": "string"
                    },
                    "UpdateGroupID": {
                        "description": "Read Only after creation. The update group to subscribe to.",
                        "type": "string"
                    }
                },
                "required": [
                    "UpdateGroupID",
                    "ClientID"
                ],
                "type": "object"
            },
            "UpdateSystem.Models.UpdateGroupSubscription": {
                "properties": {
                    "ClientID": {
                        "description": "The ClientID.",
                        "type": "string"
                    },
                    "Include": {
                        "description": "True to receive content of type indicated by PackageTypeID.",
                        "type": "boolean"
                    },
                    "PackageTypeID": {
                        "description": "The PackageType to set subscription status for",
                        "type": "string"
                    },
                    "UpdateGroupID": {
                        "description": "The Update Group this subscription is relevant for.",
                        "type": "string"
                    },
                    "UpdateGroupSubscriptionID": {
                        "description": "The Update Group Subscription ID.  This ID will be automatically assigned when creating an Update Group Subscription.",
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "required": [
                    "UpdateGroupID",
                    "PackageTypeID",
                    "ClientID",
                    "Include"
                ],
                "type": "object"
            },
            "UpdateSystem.Models.UpdateMetricsData": {
                "description": "Model that retrieves the data for UpdateMetrics",
                "properties": {
                    "ActiveVersion": {
                        "description": "Active version (bundle number) of update type.",
                        "type": "string"
                    },
                    "ActiveVersionByClient": {
                        "description": "Generic collection that is of type ActiveVersionByClientRecord",
                        "items": {
                            "properties": {
                                "BundleNumber": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "ClientCount": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "ReleaseName": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "CurrentStateByClient": {
                        "description": "Generic collection that is of type CurrentStateByClientRecord",
                        "items": {
                            "properties": {
                                "ClientCount": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "State": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "CutOffDate": {
                        "description": "Date that has been configured to only show the most recent clients with a cut off date. (Ex. year from current date)",
                        "format": "date-time",
                        "type": "string"
                    },
                    "DataRefreshed": {
                        "description": "Data was refreshed at this time.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "FilteredClientCount": {
                        "description": "Sum of clients represented\r\n            Filtered by updateType and lastCheckedInDate",
                        "format": "int32",
                        "type": "integer"
                    },
                    "PackageErrors": {
                        "description": "Generic collection that is of type PackageErrorsRecord",
                        "items": {
                            "properties": {
                                "ClientCount": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "ErrorCode": {
                                    "type": "string"
                                },
                                "LongDescription": {
                                    "type": "string"
                                },
                                "ShortDescription": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "TotalClientCount": {
                        "description": "Total clients we have ever serviced",
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "UpdateSystem.Models.UpdateMetricsData.ActiveVersionByClientRecord": {
                "properties": {
                    "BundleNumber": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "ClientCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "ReleaseName": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UpdateSystem.Models.UpdateMetricsData.CurrentStateByClientRecord": {
                "properties": {
                    "ClientCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "State": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UpdateSystem.Models.UpdateMetricsData.PackageErrorsRecord": {
                "properties": {
                    "ClientCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "ErrorCode": {
                        "type": "string"
                    },
                    "LongDescription": {
                        "type": "string"
                    },
                    "ShortDescription": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "API.IPagedResponse_AuthorizationCodes.Shared.Models.AuthorizationCodeDefinition_": {
                "properties": {
                    "Entities": {
                        "items": {
                            "description": "Represents the model used to define how a type of authorization code is generated.",
                            "properties": {
                                "CreatedByUserID": {
                                    "description": "The ID of the user that created this definition. Read only.",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "CreatedDate": {
                                    "description": "A timestamp of when this definition was created. Read only.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "DataFields": {
                                    "description": "The defined fields to include in authorization codes generated from this definition. May not be updated.",
                                    "items": {
                                        "properties": {
                                            "DigitsPrecision": {
                                                "description": "The number of decimal digits to be used by this data field. Required only by the 'Float' data type. Must be in range 1 - 15.",
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "MaxExponent": {
                                                "description": "The maximum exponent to be used by this data field. Required only by the 'Float' data type. May not be greater than 307.",
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "MaxValue": {
                                                "description": "The maximum value that can be represented by this data field. Required only by the 'Decimal' data type.",
                                                "format": "double",
                                                "type": "number"
                                            },
                                            "MinExponent": {
                                                "description": "The minimum exponent to be used by this data field. Required only by the 'Float' data type. May not be less than -292.",
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "MinValue": {
                                                "description": "The minimum value that can be represented by this data field. Required only by the 'Decimal' data type.",
                                                "format": "double",
                                                "type": "number"
                                            },
                                            "Name": {
                                                "description": "The name of the field.",
                                                "type": "string"
                                            },
                                            "ScaleFactor": {
                                                "description": "The resolution of values that can be represented by this data field. The base value is multiplied by this to compute the final value. Required only by the 'Decimal' data type.",
                                                "format": "double",
                                                "type": "number"
                                            },
                                            "Signed": {
                                                "description": "Indicates whether this value is signed. Required only by the 'Float' data type.",
                                                "type": "boolean"
                                            },
                                            "Type": {
                                                "description": "The type of this data field.",
                                                "enum": [
                                                    "Boolean",
                                                    "Decimal",
                                                    "Float",
                                                    "VariableLengthByteArray"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "Type",
                                            "Name"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "DeletedByUserID": {
                                    "description": "The ID of the user that deleted this definition. Read only.",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "DeletedDate": {
                                    "description": "A timestamp of when this definition was deleted. Read only.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "Description": {
                                    "description": "A description of this definition. May not be updated.",
                                    "type": "string"
                                },
                                "DurationAccuracy": {
                                    "description": "The number of bits used for timestamp verification. Defaults to 5. May not be updated.",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "DurationAmount": {
                                    "description": "The amount of duration for the specified duration unit used to calculate the Authorization Code. Defaults to 1. May not be updated.",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "DurationUnits": {
                                    "description": "The units of duration used to calculate the Authorization Code. Defaults to 'Days'. May not be updated.",
                                    "enum": [
                                        "Weeks",
                                        "Days",
                                        "Hours",
                                        "Minutes"
                                    ],
                                    "type": "string"
                                },
                                "HashLength": {
                                    "description": "The bit length of the hash data which will be used for the authorization code. Defaults to 20. May not be updated.",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "ID": {
                                    "description": "The ID of the authorization code definition. Read only.",
                                    "type": "string"
                                },
                                "IsDeleted": {
                                    "description": "Indicates whether this definition is enabled. True if generating codes is disabled.",
                                    "type": "boolean"
                                },
                                "Name": {
                                    "description": "The name of the authorization code definition. May not be updated.",
                                    "type": "string"
                                },
                                "RandomLength": {
                                    "description": "The bit length of random data which will be included in the authorization code.  This is necessary to allow creation of \"identical\" authorization codes containing the same timestamp. Defaults to 5. May not be updated.",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "ValidationFields": {
                                    "description": "The defined fields to verify when reading authorization codes generated from this definition. May not be updated.",
                                    "items": {
                                        "properties": {
                                            "Name": {
                                                "description": "The name of the field.",
                                                "type": "string"
                                            },
                                            "Type": {
                                                "description": "The type for this validation field.",
                                                "enum": [
                                                    "Boolean",
                                                    "Float",
                                                    "Int",
                                                    "StringCaseInsensitive",
                                                    "StringCaseSensitive"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "Type",
                                            "Name"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "Name"
                            ],
                            "type": "object"
                        },
                        "readOnly": true,
                        "type": "array"
                    },
                    "Metadata": {
                        "readOnly": true,
                        "description": "Metadata for the paged response",
                        "properties": {
                            "Limit": {
                                "description": "The number of entities this paged response is limited to.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            },
                            "Offset": {
                                "description": "The number of entities prior to this page of items.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            },
                            "TotalCount": {
                                "description": "The total number of entities matching the request.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            }
                        },
                        "required": [
                            "TotalCount",
                            "Limit",
                            "Offset"
                        ],
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "API.IPagedResponse_AuthorizationCodes.Shared.Models.AuthorizationCode_": {
                "properties": {
                    "Entities": {
                        "items": {
                            "description": "Represents the model containing an authorization code used to unlock a feature in machines and EDT",
                            "properties": {
                                "Code": {
                                    "description": "The code to enter to unlock a feature. Read only.",
                                    "type": "string"
                                },
                                "CreatedByUserID": {
                                    "description": "The ID of the user that created this authorization code. Read only.",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "CreatedDate": {
                                    "description": "A timestamp of when this code was created. Read only.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "DataParameters": {
                                    "description": "The parameters and values contained as data in this authorization code. May not be updated.",
                                    "items": {
                                        "description": "A parameter used to create an authorization code.",
                                        "properties": {
                                            "Name": {
                                                "description": "The name of the parameter. May not be updated.",
                                                "type": "string"
                                            },
                                            "Value": {
                                                "description": "The value of the parameter. May not be updated.",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "Name",
                                            "Value"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "DefinitionID": {
                                    "description": "The id of the definition for this authorization code. May not be updated.",
                                    "type": "string"
                                },
                                "DeletedByUserID": {
                                    "description": "The ID of the user that deleted this authorization code. Read only.",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "DeletedDate": {
                                    "description": "A timestamp of when this authorization code was deleted. Read only.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "ID": {
                                    "description": "The identifier for the authorization code. Read only.",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "IsDeleted": {
                                    "description": "Indicates whether this code is deleted.",
                                    "type": "boolean"
                                },
                                "ValidationParameters": {
                                    "description": "The parameters and values used to validate this authorization code. May not be updated.",
                                    "items": {
                                        "description": "A parameter used to create an authorization code.",
                                        "properties": {
                                            "Name": {
                                                "description": "The name of the parameter. May not be updated.",
                                                "type": "string"
                                            },
                                            "Value": {
                                                "description": "The value of the parameter. May not be updated.",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "Name",
                                            "Value"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "readOnly": true,
                        "type": "array"
                    },
                    "Metadata": {
                        "readOnly": true,
                        "description": "Metadata for the paged response",
                        "properties": {
                            "Limit": {
                                "description": "The number of entities this paged response is limited to.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            },
                            "Offset": {
                                "description": "The number of entities prior to this page of items.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            },
                            "TotalCount": {
                                "description": "The total number of entities matching the request.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            }
                        },
                        "required": [
                            "TotalCount",
                            "Limit",
                            "Offset"
                        ],
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "API.PagedResponse_API.Models.Log_": {
                "description": "A response containing a page of results and metadata concerning the results",
                "properties": {
                    "Entities": {
                        "items": {
                            "properties": {
                                "ID": {
                                    "type": "string"
                                },
                                "Message": {
                                    "type": "string"
                                },
                                "TimeStamp": {
                                    "format": "date-time",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "readOnly": true,
                        "type": "array"
                    },
                    "Metadata": {
                        "readOnly": true,
                        "description": "Metadata for the paged response",
                        "properties": {
                            "Limit": {
                                "description": "The number of entities this paged response is limited to.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            },
                            "Offset": {
                                "description": "The number of entities prior to this page of items.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            },
                            "TotalCount": {
                                "description": "The total number of entities matching the request.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            }
                        },
                        "required": [
                            "TotalCount",
                            "Limit",
                            "Offset"
                        ],
                        "type": "object"
                    }
                },
                "required": [
                    "Metadata",
                    "Entities"
                ],
                "type": "object"
            },
            "API.PagedResponse_API.Models.Permission_": {
                "description": "A response containing a page of results and metadata concerning the results",
                "properties": {
                    "Entities": {
                        "items": {
                            "properties": {
                                "DataDescription": {
                                    "description": "Description of data to be provided with Role Authorization",
                                    "type": "string"
                                },
                                "DataRequired": {
                                    "description": "Indicates if data is required or optional",
                                    "enum": [
                                        "Yes",
                                        "No",
                                        "Optional"
                                    ],
                                    "type": "string"
                                },
                                "Description": {
                                    "type": "string"
                                },
                                "Id": {
                                    "description": "The identifier of the permission.",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "Name": {
                                    "description": "The name of the permission.",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "Name",
                                "DataRequired"
                            ],
                            "type": "object"
                        },
                        "readOnly": true,
                        "type": "array"
                    },
                    "Metadata": {
                        "readOnly": true,
                        "description": "Metadata for the paged response",
                        "properties": {
                            "Limit": {
                                "description": "The number of entities this paged response is limited to.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            },
                            "Offset": {
                                "description": "The number of entities prior to this page of items.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            },
                            "TotalCount": {
                                "description": "The total number of entities matching the request.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            }
                        },
                        "required": [
                            "TotalCount",
                            "Limit",
                            "Offset"
                        ],
                        "type": "object"
                    }
                },
                "required": [
                    "Metadata",
                    "Entities"
                ],
                "type": "object"
            },
            "API.PagedResponse_API.Models.Role_": {
                "description": "A response containing a page of results and metadata concerning the results",
                "properties": {
                    "Entities": {
                        "items": {
                            "description": "Defines an API Role",
                            "properties": {
                                "Description": {
                                    "description": "Role description",
                                    "type": "string"
                                },
                                "Id": {
                                    "description": "The role's identifier.",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "Name": {
                                    "description": "The name of the role. Must be alpha-numeric strings separated by a period (.).",
                                    "pattern": "^[0-9a-zA-Z]+(\\.[0-9a-zA-Z]+)*$",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "Name",
                                "Description"
                            ],
                            "type": "object"
                        },
                        "readOnly": true,
                        "type": "array"
                    },
                    "Metadata": {
                        "readOnly": true,
                        "description": "Metadata for the paged response",
                        "properties": {
                            "Limit": {
                                "description": "The number of entities this paged response is limited to.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            },
                            "Offset": {
                                "description": "The number of entities prior to this page of items.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            },
                            "TotalCount": {
                                "description": "The total number of entities matching the request.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            }
                        },
                        "required": [
                            "TotalCount",
                            "Limit",
                            "Offset"
                        ],
                        "type": "object"
                    }
                },
                "required": [
                    "Metadata",
                    "Entities"
                ],
                "type": "object"
            },
            "API.PagedResponse_API.Models.UserEffectivePermission_": {
                "description": "A response containing a page of results and metadata concerning the results",
                "properties": {
                    "Entities": {
                        "items": {
                            "properties": {
                                "PermissionId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "PermissionName": {
                                    "type": "string"
                                },
                                "UserID": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        },
                        "readOnly": true,
                        "type": "array"
                    },
                    "Metadata": {
                        "readOnly": true,
                        "description": "Metadata for the paged response",
                        "properties": {
                            "Limit": {
                                "description": "The number of entities this paged response is limited to.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            },
                            "Offset": {
                                "description": "The number of entities prior to this page of items.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            },
                            "TotalCount": {
                                "description": "The total number of entities matching the request.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            }
                        },
                        "required": [
                            "TotalCount",
                            "Limit",
                            "Offset"
                        ],
                        "type": "object"
                    }
                },
                "required": [
                    "Metadata",
                    "Entities"
                ],
                "type": "object"
            },
            "API.PagedResponse_API.Models.User_": {
                "description": "A response containing a page of results and metadata concerning the results",
                "properties": {
                    "Entities": {
                        "items": {
                            "properties": {
                                "ChangePassword": {
                                    "description": "Never Returned.  When changing a user's password, this field must contain the new password.",
                                    "type": "string"
                                },
                                "Email": {
                                    "description": "The user's email address",
                                    "type": "string"
                                },
                                "Name": {
                                    "description": "The user's name",
                                    "type": "string"
                                },
                                "Password": {
                                    "description": "Never Returned.  Required when creating a new user or updating a user.  When changing a user's password this field must contain the current password.",
                                    "type": "string"
                                },
                                "UserID": {
                                    "description": "The user ID",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "Username": {
                                    "description": "The username used for authentication",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "readOnly": true,
                        "type": "array"
                    },
                    "Metadata": {
                        "readOnly": true,
                        "description": "Metadata for the paged response",
                        "properties": {
                            "Limit": {
                                "description": "The number of entities this paged response is limited to.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            },
                            "Offset": {
                                "description": "The number of entities prior to this page of items.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            },
                            "TotalCount": {
                                "description": "The total number of entities matching the request.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            }
                        },
                        "required": [
                            "TotalCount",
                            "Limit",
                            "Offset"
                        ],
                        "type": "object"
                    }
                },
                "required": [
                    "Metadata",
                    "Entities"
                ],
                "type": "object"
            },
            "API.PagedResponse_BuildSystem.Shared.DTO.ActivityRun_": {
                "description": "A response containing a page of results and metadata concerning the results",
                "properties": {
                    "Entities": {
                        "items": {
                            "description": "A DTO for an IActivityRun",
                            "properties": {
                                "ActivityRunID": {
                                    "description": "The identifier for the ActivityRun",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "EndDate": {
                                    "description": "Read Only. The UTC date and time when the activity completed",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "JobActivityID": {
                                    "description": "Read Only. The ID of the Job Activity that defines this activity run",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "JobRunID": {
                                    "description": "Read Only. The ID of the JobRun under which this ActivityRun is executing",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "Parameters": {
                                    "description": "The parameters used for this run of the activity.  Parameters cannot be added or removed, but output parameter values may be updated.",
                                    "items": {
                                        "description": "A DTO for an IParameterValue",
                                        "properties": {
                                            "Direction": {
                                                "description": "The parameter direction (Input or Output)",
                                                "enum": [
                                                    "Input",
                                                    "Output"
                                                ],
                                                "type": "string"
                                            },
                                            "Name": {
                                                "description": "The name of the parameter this value is for",
                                                "type": "string"
                                            },
                                            "Value": {
                                                "description": "The parameter value in string representation",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "readOnly": true,
                                    "type": "array"
                                },
                                "StartDate": {
                                    "description": "Read Only. The UTC date and time when the activity started",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "Status": {
                                    "description": "The status of this ActivityRun",
                                    "properties": {
                                        "CurrentStep": {
                                            "description": "The activity step currently executing, indicated by numeric order",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "Status": {
                                            "description": "The status of the ActivityRun",
                                            "enum": [
                                                "Ready",
                                                "InProgress",
                                                "Succeeded",
                                                "Cancelled",
                                                "Failed"
                                            ],
                                            "type": "string"
                                        },
                                        "StepProgress": {
                                            "description": "The percent progress from the currently executing step.  This value shall be null if progress is not available",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "StepStatus": {
                                            "description": "The status text from the currently executing step",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "Steps": {
                                    "description": "Read Only. The steps to be executed for the activity.  These steps come from the relationship through JobActivity down to ActivityStep",
                                    "items": {
                                        "description": "A DTO for an IActivityStep",
                                        "properties": {
                                            "ActivityID": {
                                                "description": "The id of the activity this activity step belongs to",
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "ActivityStepID": {
                                                "description": "The id of this activity step",
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "ImplementationID": {
                                                "description": "The implementation id which is used to look up the step implementation",
                                                "type": "string"
                                            },
                                            "ParameterMappings": {
                                                "description": "The mapping of values from a source to be used for the step parameters",
                                                "items": {
                                                    "description": "A DTO for an IParameterMapping",
                                                    "properties": {
                                                        "Name": {
                                                            "description": "The name of the parameter this mapping applies to",
                                                            "type": "string"
                                                        },
                                                        "Source": {
                                                            "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                            "type": "string"
                                                        },
                                                        "SourceType": {
                                                            "description": "The source type used for supplying the parameter",
                                                            "enum": [
                                                                "Constant",
                                                                "Variable"
                                                            ],
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "readOnly": true,
                                                "type": "array"
                                            },
                                            "RunOrder": {
                                                "description": "The order of this activity step relative to other activity steps",
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "StepID": {
                                                "description": "The id of the step",
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "StepName": {
                                                "description": "The name of the step",
                                                "type": "string"
                                            },
                                            "UseConfig": {
                                                "description": "Indicates the configuration for the ActivityStep to use at runtime.  The build agent must provide this configuration",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "readOnly": true,
                                    "type": "array"
                                }
                            },
                            "required": [
                                "Status"
                            ],
                            "type": "object"
                        },
                        "readOnly": true,
                        "type": "array"
                    },
                    "Metadata": {
                        "readOnly": true,
                        "description": "Metadata for the paged response",
                        "properties": {
                            "Limit": {
                                "description": "The number of entities this paged response is limited to.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            },
                            "Offset": {
                                "description": "The number of entities prior to this page of items.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            },
                            "TotalCount": {
                                "description": "The total number of entities matching the request.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            }
                        },
                        "required": [
                            "TotalCount",
                            "Limit",
                            "Offset"
                        ],
                        "type": "object"
                    }
                },
                "required": [
                    "Metadata",
                    "Entities"
                ],
                "type": "object"
            },
            "API.PagedResponse_BuildSystem.Shared.DTO.Activity_": {
                "description": "A response containing a page of results and metadata concerning the results",
                "properties": {
                    "Entities": {
                        "items": {
                            "description": "A DTO for an IActivity",
                            "properties": {
                                "ActivityID": {
                                    "description": "The ID of the activity",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "Deleted": {
                                    "description": "",
                                    "type": "boolean"
                                },
                                "Name": {
                                    "description": "The name of the activity",
                                    "type": "string"
                                },
                                "Parameters": {
                                    "description": "The parameters for this activity",
                                    "items": {
                                        "description": "A DTO for an IParameter",
                                        "properties": {
                                            "Direction": {
                                                "description": "The parameter direction (Input or Output)",
                                                "enum": [
                                                    "Input",
                                                    "Output"
                                                ],
                                                "type": "string"
                                            },
                                            "Name": {
                                                "description": "The name of the parameter",
                                                "type": "string"
                                            },
                                            "Type": {
                                                "description": "The data type of the parameter",
                                                "enum": [
                                                    "String",
                                                    "Boolean",
                                                    "Integer",
                                                    "Float",
                                                    "StringDictionary"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "readOnly": true,
                                    "type": "array"
                                },
                                "Steps": {
                                    "description": "The steps which are performed for this activity",
                                    "items": {
                                        "description": "A DTO for an IActivityStep",
                                        "properties": {
                                            "ActivityID": {
                                                "description": "The id of the activity this activity step belongs to",
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "ActivityStepID": {
                                                "description": "The id of this activity step",
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "ImplementationID": {
                                                "description": "The implementation id which is used to look up the step implementation",
                                                "type": "string"
                                            },
                                            "ParameterMappings": {
                                                "description": "The mapping of values from a source to be used for the step parameters",
                                                "items": {
                                                    "description": "A DTO for an IParameterMapping",
                                                    "properties": {
                                                        "Name": {
                                                            "description": "The name of the parameter this mapping applies to",
                                                            "type": "string"
                                                        },
                                                        "Source": {
                                                            "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                            "type": "string"
                                                        },
                                                        "SourceType": {
                                                            "description": "The source type used for supplying the parameter",
                                                            "enum": [
                                                                "Constant",
                                                                "Variable"
                                                            ],
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "readOnly": true,
                                                "type": "array"
                                            },
                                            "RunOrder": {
                                                "description": "The order of this activity step relative to other activity steps",
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "StepID": {
                                                "description": "The id of the step",
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "StepName": {
                                                "description": "The name of the step",
                                                "type": "string"
                                            },
                                            "UseConfig": {
                                                "description": "Indicates the configuration for the ActivityStep to use at runtime.  The build agent must provide this configuration",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "readOnly": true,
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "readOnly": true,
                        "type": "array"
                    },
                    "Metadata": {
                        "readOnly": true,
                        "description": "Metadata for the paged response",
                        "properties": {
                            "Limit": {
                                "description": "The number of entities this paged response is limited to.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            },
                            "Offset": {
                                "description": "The number of entities prior to this page of items.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            },
                            "TotalCount": {
                                "description": "The total number of entities matching the request.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            }
                        },
                        "required": [
                            "TotalCount",
                            "Limit",
                            "Offset"
                        ],
                        "type": "object"
                    }
                },
                "required": [
                    "Metadata",
                    "Entities"
                ],
                "type": "object"
            },
            "API.PagedResponse_BuildSystem.Shared.DTO.Agent_": {
                "description": "A response containing a page of results and metadata concerning the results",
                "properties": {
                    "Entities": {
                        "items": {
                            "description": "A DTO for an IAgent",
                            "properties": {
                                "AgentID": {
                                    "description": "The id of the Agent",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "KeepAliveInterval": {
                                    "description": "The 'Heartbeat Interval' used by the Build Agent.",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "MachineName": {
                                    "description": "The machine name of the computer the agent is running on",
                                    "type": "string"
                                },
                                "Status": {
                                    "description": "The agent status.",
                                    "properties": {
                                        "LastStatusUpdate": {
                                            "description": "ReadOnly. The UTC date and time of the last status update",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "Online": {
                                            "description": "Indicates if the agent is online",
                                            "type": "boolean"
                                        }
                                    },
                                    "required": [
                                        "Online"
                                    ],
                                    "type": "object"
                                },
                                "StepConfigurations": {
                                    "description": "The agent's step configurations",
                                    "items": {
                                        "description": "Step Configuration",
                                        "properties": {
                                            "Configurations": {
                                                "description": "The configuration names supported.  The configurations collection is empty for steps which do not require configuration.",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "StepImplementationID": {
                                                "description": "The Implementation ID of the step this configuration is for",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "StepImplementationID"
                                        ],
                                        "type": "object"
                                    },
                                    "readOnly": true,
                                    "type": "array"
                                },
                                "UserID": {
                                    "description": "The UserID of the Agent",
                                    "format": "int32",
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "UserID",
                                "MachineName",
                                "Status",
                                "KeepAliveInterval"
                            ],
                            "type": "object"
                        },
                        "readOnly": true,
                        "type": "array"
                    },
                    "Metadata": {
                        "readOnly": true,
                        "description": "Metadata for the paged response",
                        "properties": {
                            "Limit": {
                                "description": "The number of entities this paged response is limited to.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            },
                            "Offset": {
                                "description": "The number of entities prior to this page of items.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            },
                            "TotalCount": {
                                "description": "The total number of entities matching the request.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            }
                        },
                        "required": [
                            "TotalCount",
                            "Limit",
                            "Offset"
                        ],
                        "type": "object"
                    }
                },
                "required": [
                    "Metadata",
                    "Entities"
                ],
                "type": "object"
            },
            "API.PagedResponse_BuildSystem.Shared.DTO.JobRun_": {
                "description": "A response containing a page of results and metadata concerning the results",
                "properties": {
                    "Entities": {
                        "items": {
                            "description": "A DTO for an IJobRun",
                            "properties": {
                                "ActivityRuns": {
                                    "description": "The activity runs belonging to this JobRun",
                                    "items": {
                                        "description": "A DTO for an IActivityRun",
                                        "properties": {
                                            "ActivityRunID": {
                                                "description": "The identifier for the ActivityRun",
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "EndDate": {
                                                "description": "Read Only. The UTC date and time when the activity completed",
                                                "format": "date-time",
                                                "type": "string"
                                            },
                                            "JobActivityID": {
                                                "description": "Read Only. The ID of the Job Activity that defines this activity run",
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "JobRunID": {
                                                "description": "Read Only. The ID of the JobRun under which this ActivityRun is executing",
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "Parameters": {
                                                "description": "The parameters used for this run of the activity.  Parameters cannot be added or removed, but output parameter values may be updated.",
                                                "items": {
                                                    "description": "A DTO for an IParameterValue",
                                                    "properties": {
                                                        "Direction": {
                                                            "description": "The parameter direction (Input or Output)",
                                                            "enum": [
                                                                "Input",
                                                                "Output"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "Name": {
                                                            "description": "The name of the parameter this value is for",
                                                            "type": "string"
                                                        },
                                                        "Value": {
                                                            "description": "The parameter value in string representation",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "readOnly": true,
                                                "type": "array"
                                            },
                                            "StartDate": {
                                                "description": "Read Only. The UTC date and time when the activity started",
                                                "format": "date-time",
                                                "type": "string"
                                            },
                                            "Status": {
                                                "description": "The status of this ActivityRun",
                                                "properties": {
                                                    "CurrentStep": {
                                                        "description": "The activity step currently executing, indicated by numeric order",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "Status": {
                                                        "description": "The status of the ActivityRun",
                                                        "enum": [
                                                            "Ready",
                                                            "InProgress",
                                                            "Succeeded",
                                                            "Cancelled",
                                                            "Failed"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "StepProgress": {
                                                        "description": "The percent progress from the currently executing step.  This value shall be null if progress is not available",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "StepStatus": {
                                                        "description": "The status text from the currently executing step",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "Steps": {
                                                "description": "Read Only. The steps to be executed for the activity.  These steps come from the relationship through JobActivity down to ActivityStep",
                                                "items": {
                                                    "description": "A DTO for an IActivityStep",
                                                    "properties": {
                                                        "ActivityID": {
                                                            "description": "The id of the activity this activity step belongs to",
                                                            "format": "int32",
                                                            "type": "integer"
                                                        },
                                                        "ActivityStepID": {
                                                            "description": "The id of this activity step",
                                                            "format": "int32",
                                                            "type": "integer"
                                                        },
                                                        "ImplementationID": {
                                                            "description": "The implementation id which is used to look up the step implementation",
                                                            "type": "string"
                                                        },
                                                        "ParameterMappings": {
                                                            "description": "The mapping of values from a source to be used for the step parameters",
                                                            "items": {
                                                                "description": "A DTO for an IParameterMapping",
                                                                "properties": {
                                                                    "Name": {
                                                                        "description": "The name of the parameter this mapping applies to",
                                                                        "type": "string"
                                                                    },
                                                                    "Source": {
                                                                        "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                                        "type": "string"
                                                                    },
                                                                    "SourceType": {
                                                                        "description": "The source type used for supplying the parameter",
                                                                        "enum": [
                                                                            "Constant",
                                                                            "Variable"
                                                                        ],
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "readOnly": true,
                                                            "type": "array"
                                                        },
                                                        "RunOrder": {
                                                            "description": "The order of this activity step relative to other activity steps",
                                                            "format": "int32",
                                                            "type": "integer"
                                                        },
                                                        "StepID": {
                                                            "description": "The id of the step",
                                                            "format": "int32",
                                                            "type": "integer"
                                                        },
                                                        "StepName": {
                                                            "description": "The name of the step",
                                                            "type": "string"
                                                        },
                                                        "UseConfig": {
                                                            "description": "Indicates the configuration for the ActivityStep to use at runtime.  The build agent must provide this configuration",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "readOnly": true,
                                                "type": "array"
                                            }
                                        },
                                        "required": [
                                            "Status"
                                        ],
                                        "type": "object"
                                    },
                                    "readOnly": true,
                                    "type": "array"
                                },
                                "EndDate": {
                                    "description": "The UTC date and time when the job completed",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "JobID": {
                                    "description": "The ID of the job that defines the run",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "JobRunID": {
                                    "description": "The ID of this JobRun",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "Parameters": {
                                    "description": "The parameters used for this run of the job",
                                    "items": {
                                        "description": "A DTO for an IParameterValue",
                                        "properties": {
                                            "Direction": {
                                                "description": "The parameter direction (Input or Output)",
                                                "enum": [
                                                    "Input",
                                                    "Output"
                                                ],
                                                "type": "string"
                                            },
                                            "Name": {
                                                "description": "The name of the parameter this value is for",
                                                "type": "string"
                                            },
                                            "Value": {
                                                "description": "The parameter value in string representation",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "readOnly": true,
                                    "type": "array"
                                },
                                "StartDate": {
                                    "description": "The UTC date and time when the job started",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "Status": {
                                    "description": "The status of this JobRun",
                                    "enum": [
                                        "Ready",
                                        "InProgress",
                                        "Succeeded",
                                        "Cancelled",
                                        "Failed"
                                    ],
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "readOnly": true,
                        "type": "array"
                    },
                    "Metadata": {
                        "readOnly": true,
                        "description": "Metadata for the paged response",
                        "properties": {
                            "Limit": {
                                "description": "The number of entities this paged response is limited to.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            },
                            "Offset": {
                                "description": "The number of entities prior to this page of items.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            },
                            "TotalCount": {
                                "description": "The total number of entities matching the request.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            }
                        },
                        "required": [
                            "TotalCount",
                            "Limit",
                            "Offset"
                        ],
                        "type": "object"
                    }
                },
                "required": [
                    "Metadata",
                    "Entities"
                ],
                "type": "object"
            },
            "API.PagedResponse_BuildSystem.Shared.DTO.Job_": {
                "description": "A response containing a page of results and metadata concerning the results",
                "properties": {
                    "Entities": {
                        "items": {
                            "description": "A DTO for an IJob",
                            "properties": {
                                "Activities": {
                                    "description": "The activities which are performed for the job",
                                    "items": {
                                        "description": "A DTO for an IJobActivity",
                                        "properties": {
                                            "ActivityID": {
                                                "description": "The ID of the activity to be run as part of the job",
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "JobActivityID": {
                                                "description": "The ID of this job activity",
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "JobID": {
                                                "description": "The ID of the job this job activity belongs to",
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "ParameterMappings": {
                                                "description": "The mapping of values from a source to be used for the activity parameters",
                                                "items": {
                                                    "description": "A DTO for an IParameterMapping",
                                                    "properties": {
                                                        "Name": {
                                                            "description": "The name of the parameter this mapping applies to",
                                                            "type": "string"
                                                        },
                                                        "Source": {
                                                            "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable",
                                                            "type": "string"
                                                        },
                                                        "SourceType": {
                                                            "description": "The source type used for supplying the parameter",
                                                            "enum": [
                                                                "Constant",
                                                                "Variable"
                                                            ],
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "readOnly": true,
                                                "type": "array"
                                            },
                                            "RunOrder": {
                                                "description": "The order of this job activity relative to others in the job",
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "readOnly": true,
                                    "type": "array"
                                },
                                "Deleted": {
                                    "description": "Indicates if the job has been deleted.",
                                    "type": "boolean"
                                },
                                "JobID": {
                                    "description": "The ID of the job",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "Name": {
                                    "description": "The name of the job",
                                    "type": "string"
                                },
                                "Parameters": {
                                    "description": "The parameters for the job",
                                    "items": {
                                        "description": "A DTO for an IParameter",
                                        "properties": {
                                            "Direction": {
                                                "description": "The parameter direction (Input or Output)",
                                                "enum": [
                                                    "Input",
                                                    "Output"
                                                ],
                                                "type": "string"
                                            },
                                            "Name": {
                                                "description": "The name of the parameter",
                                                "type": "string"
                                            },
                                            "Type": {
                                                "description": "The data type of the parameter",
                                                "enum": [
                                                    "String",
                                                    "Boolean",
                                                    "Integer",
                                                    "Float",
                                                    "StringDictionary"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "readOnly": true,
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "readOnly": true,
                        "type": "array"
                    },
                    "Metadata": {
                        "readOnly": true,
                        "description": "Metadata for the paged response",
                        "properties": {
                            "Limit": {
                                "description": "The number of entities this paged response is limited to.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            },
                            "Offset": {
                                "description": "The number of entities prior to this page of items.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            },
                            "TotalCount": {
                                "description": "The total number of entities matching the request.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            }
                        },
                        "required": [
                            "TotalCount",
                            "Limit",
                            "Offset"
                        ],
                        "type": "object"
                    }
                },
                "required": [
                    "Metadata",
                    "Entities"
                ],
                "type": "object"
            },
            "API.PagedResponse_BuildSystem.Shared.DTO.Step_": {
                "description": "A response containing a page of results and metadata concerning the results",
                "properties": {
                    "Entities": {
                        "items": {
                            "description": "Step",
                            "properties": {
                                "ConfigRequired": {
                                    "description": "Indicates if the step requires configuration values to be provided by the build agent",
                                    "type": "boolean"
                                },
                                "Deleted": {
                                    "description": "Read Only.  Indicates if the record is deleted.",
                                    "type": "boolean"
                                },
                                "Description": {
                                    "description": "A description of the step to be presented to a user",
                                    "type": "string"
                                },
                                "ImplementationID": {
                                    "description": "The implementation ID used to lookup the step implementation when it is executed",
                                    "type": "string"
                                },
                                "Name": {
                                    "description": "The name of the step",
                                    "type": "string"
                                },
                                "Parameters": {
                                    "description": "The parameters for this step",
                                    "items": {
                                        "description": "A DTO for an IParameter",
                                        "properties": {
                                            "Direction": {
                                                "description": "The parameter direction (Input or Output)",
                                                "enum": [
                                                    "Input",
                                                    "Output"
                                                ],
                                                "type": "string"
                                            },
                                            "Name": {
                                                "description": "The name of the parameter",
                                                "type": "string"
                                            },
                                            "Type": {
                                                "description": "The data type of the parameter",
                                                "enum": [
                                                    "String",
                                                    "Boolean",
                                                    "Integer",
                                                    "Float",
                                                    "StringDictionary"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "readOnly": true,
                                    "type": "array"
                                },
                                "StepID": {
                                    "description": "The ID of the step",
                                    "format": "int32",
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "Name",
                                "ConfigRequired",
                                "ImplementationID"
                            ],
                            "type": "object"
                        },
                        "readOnly": true,
                        "type": "array"
                    },
                    "Metadata": {
                        "readOnly": true,
                        "description": "Metadata for the paged response",
                        "properties": {
                            "Limit": {
                                "description": "The number of entities this paged response is limited to.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            },
                            "Offset": {
                                "description": "The number of entities prior to this page of items.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            },
                            "TotalCount": {
                                "description": "The total number of entities matching the request.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            }
                        },
                        "required": [
                            "TotalCount",
                            "Limit",
                            "Offset"
                        ],
                        "type": "object"
                    }
                },
                "required": [
                    "Metadata",
                    "Entities"
                ],
                "type": "object"
            },
            "API.PagedResponse_ContentSubmission.Shared.BusinessEntities.ContentDefinition_": {
                "description": "A response containing a page of results and metadata concerning the results",
                "properties": {
                    "Entities": {
                        "items": {
                            "properties": {
                                "ContentDefinitionID": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "Description": {
                                    "type": "string"
                                },
                                "Name": {
                                    "type": "string"
                                },
                                "PackageTypeID": {
                                    "type": "string"
                                },
                                "TypeID": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        },
                        "readOnly": true,
                        "type": "array"
                    },
                    "Metadata": {
                        "readOnly": true,
                        "description": "Metadata for the paged response",
                        "properties": {
                            "Limit": {
                                "description": "The number of entities this paged response is limited to.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            },
                            "Offset": {
                                "description": "The number of entities prior to this page of items.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            },
                            "TotalCount": {
                                "description": "The total number of entities matching the request.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            }
                        },
                        "required": [
                            "TotalCount",
                            "Limit",
                            "Offset"
                        ],
                        "type": "object"
                    }
                },
                "required": [
                    "Metadata",
                    "Entities"
                ],
                "type": "object"
            },
            "API.PagedResponse_ContentSubmission.Shared.BusinessEntities.ContentReleaseVersion_": {
                "description": "A response containing a page of results and metadata concerning the results",
                "properties": {
                    "Entities": {
                        "items": {
                            "properties": {
                                "ContentDefinitionID": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "ContentReleaseID": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "Deleted": {
                                    "type": "boolean"
                                },
                                "PublisherUserID": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "ReleaseID": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "TestReportUrl": {
                                    "type": "string"
                                },
                                "UpdatedDate": {
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "Version": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        },
                        "readOnly": true,
                        "type": "array"
                    },
                    "Metadata": {
                        "readOnly": true,
                        "description": "Metadata for the paged response",
                        "properties": {
                            "Limit": {
                                "description": "The number of entities this paged response is limited to.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            },
                            "Offset": {
                                "description": "The number of entities prior to this page of items.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            },
                            "TotalCount": {
                                "description": "The total number of entities matching the request.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            }
                        },
                        "required": [
                            "TotalCount",
                            "Limit",
                            "Offset"
                        ],
                        "type": "object"
                    }
                },
                "required": [
                    "Metadata",
                    "Entities"
                ],
                "type": "object"
            },
            "API.PagedResponse_ContentSubmission.Shared.BusinessEntities.ContentSubmission_": {
                "description": "A response containing a page of results and metadata concerning the results",
                "properties": {
                    "Entities": {
                        "items": {
                            "properties": {
                                "ContentDefinitionID": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "ContentSubmissionID": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "JobRunID": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "PackageID": {
                                    "type": "string"
                                },
                                "ReleaseNotes": {
                                    "type": "string"
                                },
                                "Repository": {
                                    "type": "string"
                                },
                                "Revision": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "SubmissionDate": {
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "UserID": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "Version": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        },
                        "readOnly": true,
                        "type": "array"
                    },
                    "Metadata": {
                        "readOnly": true,
                        "description": "Metadata for the paged response",
                        "properties": {
                            "Limit": {
                                "description": "The number of entities this paged response is limited to.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            },
                            "Offset": {
                                "description": "The number of entities prior to this page of items.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            },
                            "TotalCount": {
                                "description": "The total number of entities matching the request.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            }
                        },
                        "required": [
                            "TotalCount",
                            "Limit",
                            "Offset"
                        ],
                        "type": "object"
                    }
                },
                "required": [
                    "Metadata",
                    "Entities"
                ],
                "type": "object"
            },
            "API.PagedResponse_ContentSubmission.Shared.BusinessEntities.Release_": {
                "description": "A response containing a page of results and metadata concerning the results",
                "properties": {
                    "Entities": {
                        "items": {
                            "properties": {
                                "BuildDate": {
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "ReleaseDate": {
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "ReleaseID": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "ReleaseNumber": {
                                    "type": "string"
                                },
                                "Visible": {
                                    "type": "boolean"
                                }
                            },
                            "type": "object"
                        },
                        "readOnly": true,
                        "type": "array"
                    },
                    "Metadata": {
                        "readOnly": true,
                        "description": "Metadata for the paged response",
                        "properties": {
                            "Limit": {
                                "description": "The number of entities this paged response is limited to.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            },
                            "Offset": {
                                "description": "The number of entities prior to this page of items.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            },
                            "TotalCount": {
                                "description": "The total number of entities matching the request.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            }
                        },
                        "required": [
                            "TotalCount",
                            "Limit",
                            "Offset"
                        ],
                        "type": "object"
                    }
                },
                "required": [
                    "Metadata",
                    "Entities"
                ],
                "type": "object"
            },
            "API.PagedResponse_ContentSubmission.Shared.BusinessEntities.UserContentDefinition_": {
                "description": "A response containing a page of results and metadata concerning the results",
                "properties": {
                    "Entities": {
                        "items": {
                            "properties": {
                                "ContentDefinitionID": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "UserContentDefinitionID": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "UserID": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        },
                        "readOnly": true,
                        "type": "array"
                    },
                    "Metadata": {
                        "readOnly": true,
                        "description": "Metadata for the paged response",
                        "properties": {
                            "Limit": {
                                "description": "The number of entities this paged response is limited to.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            },
                            "Offset": {
                                "description": "The number of entities prior to this page of items.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            },
                            "TotalCount": {
                                "description": "The total number of entities matching the request.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            }
                        },
                        "required": [
                            "TotalCount",
                            "Limit",
                            "Offset"
                        ],
                        "type": "object"
                    }
                },
                "required": [
                    "Metadata",
                    "Entities"
                ],
                "type": "object"
            },
            "API.PagedResponse_DealerDB.Models.Dealer_": {
                "description": "A response containing a page of results and metadata concerning the results",
                "properties": {
                    "Entities": {
                        "items": {
                            "properties": {
                                "BillingAddress": {
                                    "type": "string"
                                },
                                "BillingAddress2": {
                                    "type": "string"
                                },
                                "BillingAddress3": {
                                    "type": "string"
                                },
                                "BillingAddress4": {
                                    "type": "string"
                                },
                                "BillingCity": {
                                    "type": "string"
                                },
                                "BillingCountry": {
                                    "type": "string"
                                },
                                "BillingCountryCode": {
                                    "type": "string"
                                },
                                "BillingState": {
                                    "type": "string"
                                },
                                "BillingZip": {
                                    "type": "string"
                                },
                                "Brands": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "readOnly": true,
                                    "type": "array"
                                },
                                "DealerCode": {
                                    "type": "string"
                                },
                                "DealerName": {
                                    "type": "string"
                                },
                                "DealerStatus": {
                                    "type": "string"
                                },
                                "DealerStatusUpdateDate": {
                                    "type": "string"
                                },
                                "Filler": {
                                    "type": "string"
                                },
                                "IsValid": {
                                    "readOnly": true,
                                    "type": "boolean"
                                },
                                "LanguagePreference": {
                                    "type": "string"
                                },
                                "Region1": {
                                    "type": "string"
                                },
                                "Region2": {
                                    "type": "string"
                                },
                                "RegionMapping": {
                                    "type": "string"
                                },
                                "RoleBrand": {
                                    "type": "string"
                                },
                                "ShippingAddress2": {
                                    "type": "string"
                                },
                                "ShippingAddress3": {
                                    "type": "string"
                                },
                                "ShippingAddress4": {
                                    "type": "string"
                                },
                                "ShippingCity": {
                                    "type": "string"
                                },
                                "ShippingCountry": {
                                    "type": "string"
                                },
                                "ShippingState": {
                                    "type": "string"
                                },
                                "ShippingStreet": {
                                    "type": "string"
                                },
                                "ShippingZip": {
                                    "type": "string"
                                },
                                "Telephone": {
                                    "type": "string"
                                },
                                "VATCode": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "readOnly": true,
                        "type": "array"
                    },
                    "Metadata": {
                        "readOnly": true,
                        "description": "Metadata for the paged response",
                        "properties": {
                            "Limit": {
                                "description": "The number of entities this paged response is limited to.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            },
                            "Offset": {
                                "description": "The number of entities prior to this page of items.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            },
                            "TotalCount": {
                                "description": "The total number of entities matching the request.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            }
                        },
                        "required": [
                            "TotalCount",
                            "Limit",
                            "Offset"
                        ],
                        "type": "object"
                    }
                },
                "required": [
                    "Metadata",
                    "Entities"
                ],
                "type": "object"
            },
            "API.PagedResponse_DealerDB.Models.DealersPerCountry_": {
                "description": "A response containing a page of results and metadata concerning the results",
                "properties": {
                    "Entities": {
                        "items": {
                            "properties": {
                                "Count": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "Country": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "readOnly": true,
                        "type": "array"
                    },
                    "Metadata": {
                        "readOnly": true,
                        "description": "Metadata for the paged response",
                        "properties": {
                            "Limit": {
                                "description": "The number of entities this paged response is limited to.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            },
                            "Offset": {
                                "description": "The number of entities prior to this page of items.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            },
                            "TotalCount": {
                                "description": "The total number of entities matching the request.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            }
                        },
                        "required": [
                            "TotalCount",
                            "Limit",
                            "Offset"
                        ],
                        "type": "object"
                    }
                },
                "required": [
                    "Metadata",
                    "Entities"
                ],
                "type": "object"
            },
            "API.PagedResponse_DealerDB.Models.License_": {
                "description": "A response containing a page of results and metadata concerning the results",
                "properties": {
                    "Entities": {
                        "items": {
                            "properties": {
                                "Active": {
                                    "description": "True if license is active.",
                                    "type": "boolean"
                                },
                                "CreatedDate": {
                                    "description": "The date the license was created.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "DeactivatedDate": {
                                    "description": "The date the license was deactivated.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "LicenseActivationType": {
                                    "description": "The type of license (e.g. EDT, EDT Lite)",
                                    "enum": [
                                        "EDT",
                                        "EDTLite"
                                    ],
                                    "type": "string"
                                },
                                "LicenseID": {
                                    "description": "The LicenseID",
                                    "type": "string"
                                },
                                "LicenseVersion": {
                                    "description": "The version of the license.",
                                    "type": "string"
                                },
                                "RefreshDate": {
                                    "description": "The date the license was refreshed.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "SystemInfo": {
                                    "description": "Information about the system which is licensed.",
                                    "type": "string"
                                },
                                "UpdatedLicenseVersion": {
                                    "description": "The updated version of the license.  A value in this field indicates that the update has not been confirmed.",
                                    "type": "string"
                                },
                                "VoucherCode": {
                                    "description": "The voucher code that generated the license.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "readOnly": true,
                        "type": "array"
                    },
                    "Metadata": {
                        "readOnly": true,
                        "description": "Metadata for the paged response",
                        "properties": {
                            "Limit": {
                                "description": "The number of entities this paged response is limited to.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            },
                            "Offset": {
                                "description": "The number of entities prior to this page of items.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            },
                            "TotalCount": {
                                "description": "The total number of entities matching the request.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            }
                        },
                        "required": [
                            "TotalCount",
                            "Limit",
                            "Offset"
                        ],
                        "type": "object"
                    }
                },
                "required": [
                    "Metadata",
                    "Entities"
                ],
                "type": "object"
            },
            "API.PagedResponse_DealerDB.Models.VoucherHistory_": {
                "description": "A response containing a page of results and metadata concerning the results",
                "properties": {
                    "Entities": {
                        "items": {
                            "properties": {
                                "ChangedDate": {
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "CreatedDate": {
                                    "description": "Read-Only. The date the voucher was created.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "DealerCode": {
                                    "description": "The dealer code the voucher is assigned to.  Required for commercial vouchers.",
                                    "type": "string"
                                },
                                "Deleted": {
                                    "description": "Read-Only. True if voucher has been deleted.",
                                    "type": "boolean"
                                },
                                "Email": {
                                    "description": "The email address. Required for Internal Vouchers",
                                    "type": "string"
                                },
                                "ExpirationDate": {
                                    "description": "The expiration date of the voucher. Required for Temporary Vouchers.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "ID": {
                                    "description": "The id of the voucher history item",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "LicenseTo": {
                                    "description": "Required for Internal Vouchers",
                                    "type": "string"
                                },
                                "ModifiedBy": {
                                    "description": "Read-Only. The user that made the last modification to the voucher.",
                                    "type": "string"
                                },
                                "OrderNumber": {
                                    "description": "The order number of a commercial license. Required for Commercial Vouchers. Not supported for other Vouchers.",
                                    "type": "string"
                                },
                                "Punched": {
                                    "description": "True if voucher has aleady been used.  False if the voucher has not been used.",
                                    "type": "boolean"
                                },
                                "PunchedDate": {
                                    "description": "Read-Only. The date the voucher was punched.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "Purpose": {
                                    "description": "Required for Internal Vouchers",
                                    "type": "string"
                                },
                                "Type": {
                                    "description": "The type of voucher.",
                                    "enum": [
                                        "Commercial",
                                        "Internal",
                                        "Temporary"
                                    ],
                                    "type": "string"
                                },
                                "VoucherCode": {
                                    "description": "The voucher code.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "readOnly": true,
                        "type": "array"
                    },
                    "Metadata": {
                        "readOnly": true,
                        "description": "Metadata for the paged response",
                        "properties": {
                            "Limit": {
                                "description": "The number of entities this paged response is limited to.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            },
                            "Offset": {
                                "description": "The number of entities prior to this page of items.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            },
                            "TotalCount": {
                                "description": "The total number of entities matching the request.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            }
                        },
                        "required": [
                            "TotalCount",
                            "Limit",
                            "Offset"
                        ],
                        "type": "object"
                    }
                },
                "required": [
                    "Metadata",
                    "Entities"
                ],
                "type": "object"
            },
            "API.PagedResponse_DealerDB.Models.Voucher_": {
                "description": "A response containing a page of results and metadata concerning the results",
                "properties": {
                    "Entities": {
                        "items": {
                            "description": "A voucher for EDT activation",
                            "properties": {
                                "CreatedDate": {
                                    "description": "Read-Only. The date the voucher was created.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "DealerCode": {
                                    "description": "The dealer code the voucher is assigned to.  Required for commercial vouchers.",
                                    "type": "string"
                                },
                                "Deleted": {
                                    "description": "Read-Only. True if voucher has been deleted.",
                                    "type": "boolean"
                                },
                                "Email": {
                                    "description": "The email address. Required for Internal Vouchers",
                                    "type": "string"
                                },
                                "ExpirationDate": {
                                    "description": "The expiration date of the voucher. Required for Temporary Vouchers.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "LicenseTo": {
                                    "description": "Required for Internal Vouchers",
                                    "type": "string"
                                },
                                "ModifiedBy": {
                                    "description": "Read-Only. The user that made the last modification to the voucher.",
                                    "type": "string"
                                },
                                "OrderNumber": {
                                    "description": "The order number of a commercial license. Required for Commercial Vouchers. Not supported for other Vouchers.",
                                    "type": "string"
                                },
                                "Punched": {
                                    "description": "True if voucher has aleady been used.  False if the voucher has not been used.",
                                    "type": "boolean"
                                },
                                "PunchedDate": {
                                    "description": "Read-Only. The date the voucher was punched.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "Purpose": {
                                    "description": "Required for Internal Vouchers",
                                    "type": "string"
                                },
                                "Type": {
                                    "description": "The type of voucher. Commercial is the default if not specified.",
                                    "enum": [
                                        "Commercial",
                                        "Internal",
                                        "Temporary"
                                    ],
                                    "type": "string"
                                },
                                "VoucherCode": {
                                    "description": "The voucher code.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "readOnly": true,
                        "type": "array"
                    },
                    "Metadata": {
                        "readOnly": true,
                        "description": "Metadata for the paged response",
                        "properties": {
                            "Limit": {
                                "description": "The number of entities this paged response is limited to.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            },
                            "Offset": {
                                "description": "The number of entities prior to this page of items.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            },
                            "TotalCount": {
                                "description": "The total number of entities matching the request.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            }
                        },
                        "required": [
                            "TotalCount",
                            "Limit",
                            "Offset"
                        ],
                        "type": "object"
                    }
                },
                "required": [
                    "Metadata",
                    "Entities"
                ],
                "type": "object"
            },
            "API.PagedResponse_UpdateSystem.Models.AvailableUpdateGroupSubscription_": {
                "description": "A response containing a page of results and metadata concerning the results",
                "properties": {
                    "Entities": {
                        "items": {
                            "properties": {
                                "AvailableSubscriptions": {
                                    "description": "The available subscriptions for this update group.",
                                    "items": {
                                        "properties": {
                                            "PackageType": {
                                                "description": "The PackageType this subscription is for.",
                                                "properties": {
                                                    "Attribute": {
                                                        "description": "The inventory attribute (from the InventoryPackage) used to determine what version of this package type is installed.",
                                                        "type": "string"
                                                    },
                                                    "Category": {
                                                        "description": "The inventory category (from the InventoryPackage) used to determine what version of this package type is installed.",
                                                        "type": "string"
                                                    },
                                                    "Description": {
                                                        "description": "The description of the package type",
                                                        "type": "string"
                                                    },
                                                    "Icon": {
                                                        "description": "Optional.  The icon to use for the PackageType, in base 64",
                                                        "type": "string"
                                                    },
                                                    "InventoryFrequency": {
                                                        "description": "The number of minutes to wait before requesting another inventory.  The default value is 1440 (24 hours).",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "InventoryPackage": {
                                                        "description": "The inventory package used to determine what version of this package type is installed.",
                                                        "type": "string"
                                                    },
                                                    "LocalizedDescription": {
                                                        "description": "Optional. The StringID used to localize the description of the PackageType",
                                                        "type": "string"
                                                    },
                                                    "LocalizedName": {
                                                        "description": "Optional. The StringID used to localize the name of the PackageType",
                                                        "type": "string"
                                                    },
                                                    "MaxDeltaPackages": {
                                                        "description": "The maximum number of \"chained\" delta packages to use when updating the client",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "PackageTypeID": {
                                                        "description": "Read Only. The package type id.",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "Description"
                                                ],
                                                "type": "object"
                                            },
                                            "SubscriptionType": {
                                                "description": "The type of subscription supported.",
                                                "enum": [
                                                    "Required",
                                                    "IncludeByDefault",
                                                    "ExcludeByDefault"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "UpdateGroup": {
                                    "description": "The Update Group this subscription is for.",
                                    "properties": {
                                        "Description": {
                                            "description": "The description of the update group",
                                            "type": "string"
                                        },
                                        "ID": {
                                            "type": "string"
                                        },
                                        "InventoryFrequency": {
                                            "description": "The time in minutes between inventory checks. Default value is 1440 minutes (one day).",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "InventoryPackage": {
                                            "description": "The Package ID of the package used for inventory",
                                            "type": "string"
                                        },
                                        "LocalizedDescription": {
                                            "description": "Optional. The StringID used to localize the description of the update group",
                                            "type": "string"
                                        },
                                        "LocalizedName": {
                                            "description": "Optional. The StringID used to localize the name of the update group",
                                            "type": "string"
                                        },
                                        "ReportField": {
                                            "description": "A field to return in the status report for this update group.\r\n            Specify the field with the format [Label]: {[InventoryPackageID].[Category].[Attribute]}.  (i.e. example: {bec778ca-278d-424a-867a-4653a1a19e86.MyCategory.MyAttribute})",
                                            "type": "string"
                                        },
                                        "UpdateType": {
                                            "description": "The update type name",
                                            "type": "string"
                                        },
                                        "ValidatingField": {
                                            "description": "A field used for validation in the status report for this update group.\r\n            Specify the field with the format [Label]: {[InventoryPackageID].[Category].[Attribute]}.  (i.e. example: {bec778ca-278d-424a-867a-4653a1a19e86.MyCategory.MyAttribute})",
                                            "type": "string"
                                        },
                                        "ValueToValidate": {
                                            "description": "The value to validate the ValidationField against.",
                                            "type": "string"
                                        },
                                        "Version": {
                                            "description": "The version of the UpdateGroup, this value is incremented with each modification to a related Bundle or PackageType",
                                            "format": "byte",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "Description",
                                        "UpdateType"
                                    ],
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "readOnly": true,
                        "type": "array"
                    },
                    "Metadata": {
                        "readOnly": true,
                        "description": "Metadata for the paged response",
                        "properties": {
                            "Limit": {
                                "description": "The number of entities this paged response is limited to.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            },
                            "Offset": {
                                "description": "The number of entities prior to this page of items.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            },
                            "TotalCount": {
                                "description": "The total number of entities matching the request.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            }
                        },
                        "required": [
                            "TotalCount",
                            "Limit",
                            "Offset"
                        ],
                        "type": "object"
                    }
                },
                "required": [
                    "Metadata",
                    "Entities"
                ],
                "type": "object"
            },
            "API.PagedResponse_UpdateSystem.Models.Bundle_": {
                "description": "A response containing a page of results and metadata concerning the results",
                "properties": {
                    "Entities": {
                        "items": {
                            "properties": {
                                "Active": {
                                    "description": "Default Value: false. During the creation of the Bundle, this field must be false.",
                                    "type": "boolean"
                                },
                                "BundleID": {
                                    "description": "Read-Only.",
                                    "type": "string"
                                },
                                "BundleNumber": {
                                    "description": "The bundle number",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "Description": {
                                    "description": "The Bundle description.",
                                    "type": "string"
                                },
                                "UpdateGroupID": {
                                    "description": "The update group this bundle belongs to.",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "Description",
                                "UpdateGroupID",
                                "BundleNumber"
                            ],
                            "type": "object"
                        },
                        "readOnly": true,
                        "type": "array"
                    },
                    "Metadata": {
                        "readOnly": true,
                        "description": "Metadata for the paged response",
                        "properties": {
                            "Limit": {
                                "description": "The number of entities this paged response is limited to.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            },
                            "Offset": {
                                "description": "The number of entities prior to this page of items.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            },
                            "TotalCount": {
                                "description": "The total number of entities matching the request.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            }
                        },
                        "required": [
                            "TotalCount",
                            "Limit",
                            "Offset"
                        ],
                        "type": "object"
                    }
                },
                "required": [
                    "Metadata",
                    "Entities"
                ],
                "type": "object"
            },
            "API.PagedResponse_UpdateSystem.Models.ClientStatus_UpdateSystem.Models.PagedClientStatusMetadata_": {
                "description": "A response containing a page of results and metadata concerning the results",
                "properties": {
                    "Entities": {
                        "items": {
                            "properties": {
                                "ClientID": {
                                    "description": "The Client ID",
                                    "type": "string"
                                },
                                "LastCheckin": {
                                    "description": "The time of the client's last check-in",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "MinutesElapsed": {
                                    "description": "The number of minutes that have passed since the last check-in",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "ReportResult": {
                                    "description": "The result for the client included in the UpdateGroup's report",
                                    "type": "string"
                                },
                                "ReportResultIsValid": {
                                    "description": "True if the result for the client matches what is expected for the UpdateGroup",
                                    "type": "boolean"
                                },
                                "ReportValue": {
                                    "description": "The value for the client included in the UpdateGroup's report",
                                    "type": "string"
                                },
                                "Tag": {
                                    "description": "A descriptive name for the client",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "readOnly": true,
                        "type": "array"
                    },
                    "Metadata": {
                        "readOnly": true,
                        "properties": {
                            "Limit": {
                                "description": "The number of entities this paged response is limited to.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            },
                            "Offset": {
                                "description": "The number of entities prior to this page of items.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            },
                            "ReportResultExpected": {
                                "description": "The label for data contained in ClientStatus.ReportResults",
                                "type": "string"
                            },
                            "ReportResultLabel": {
                                "description": "The label for data contained in ClientStatus.ReportResults",
                                "type": "string"
                            },
                            "ReportValueLabel": {
                                "description": "The label for data contained in ClientStatus.ReportValue",
                                "type": "string"
                            },
                            "TotalCount": {
                                "description": "The total number of entities matching the request.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            }
                        },
                        "required": [
                            "TotalCount",
                            "Limit",
                            "Offset",
                            "ReportValueLabel",
                            "ReportResultLabel",
                            "ReportResultExpected"
                        ],
                        "type": "object"
                    }
                },
                "required": [
                    "Metadata",
                    "Entities"
                ],
                "type": "object"
            },
            "API.PagedResponse_UpdateSystem.Models.Client_": {
                "description": "A response containing a page of results and metadata concerning the results",
                "properties": {
                    "Entities": {
                        "items": {
                            "properties": {
                                "ClientID": {
                                    "description": "Read Only. The id of the client",
                                    "type": "string"
                                },
                                "LastCheckin": {
                                    "description": "Read Only. The time of the client's last checkin with the server.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "Tag": {
                                    "description": "A description of the client that can be used for easy reference",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "readOnly": true,
                        "type": "array"
                    },
                    "Metadata": {
                        "readOnly": true,
                        "description": "Metadata for the paged response",
                        "properties": {
                            "Limit": {
                                "description": "The number of entities this paged response is limited to.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            },
                            "Offset": {
                                "description": "The number of entities prior to this page of items.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            },
                            "TotalCount": {
                                "description": "The total number of entities matching the request.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            }
                        },
                        "required": [
                            "TotalCount",
                            "Limit",
                            "Offset"
                        ],
                        "type": "object"
                    }
                },
                "required": [
                    "Metadata",
                    "Entities"
                ],
                "type": "object"
            },
            "API.PagedResponse_UpdateSystem.Models.PackageStatusSummary_": {
                "description": "A response containing a page of results and metadata concerning the results",
                "properties": {
                    "Entities": {
                        "items": {
                            "properties": {
                                "AverageDownloadTime": {
                                    "description": "The average time required to complete the download",
                                    "type": "string"
                                },
                                "AverageInstallTime": {
                                    "description": "The average time required to complete the install",
                                    "type": "string"
                                },
                                "Downloaded": {
                                    "description": "The number of clients that have completed the download",
                                    "format": "int64",
                                    "type": "integer"
                                },
                                "Error": {
                                    "description": "The result of the install",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "Installed": {
                                    "description": "The number of clients that have completed the install",
                                    "format": "int64",
                                    "type": "integer"
                                },
                                "Package": {
                                    "description": "The name of the package",
                                    "type": "string"
                                },
                                "PackageID": {
                                    "description": "The ID of the package",
                                    "type": "string"
                                },
                                "PackageStatusItems": {
                                    "description": "The individual package status items",
                                    "items": {
                                        "properties": {
                                            "ClientID": {
                                                "description": "The id of the client",
                                                "type": "string"
                                            },
                                            "ClientKey": {
                                                "description": "The client's tag",
                                                "type": "string"
                                            },
                                            "DownloadTime": {
                                                "description": "The amount of time spent downloading",
                                                "type": "string"
                                            },
                                            "Downloaded": {
                                                "description": "The number of bytes downloaded",
                                                "type": "string"
                                            },
                                            "InstallCompleted": {
                                                "description": "The time the package completed",
                                                "type": "string"
                                            },
                                            "InstallResult": {
                                                "description": "The package result",
                                                "type": "string"
                                            },
                                            "InstallStarted": {
                                                "description": "The time the package was started",
                                                "type": "string"
                                            },
                                            "InstallTime": {
                                                "description": "The amount of time required to run the package",
                                                "type": "string"
                                            },
                                            "Percentage": {
                                                "description": "The download completion percentage",
                                                "type": "string"
                                            },
                                            "Size": {
                                                "description": "The total size of the package",
                                                "type": "string"
                                            },
                                            "Timestamp": {
                                                "description": "The time the status was last updated",
                                                "format": "date-time",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "readOnly": true,
                        "type": "array"
                    },
                    "Metadata": {
                        "readOnly": true,
                        "description": "Metadata for the paged response",
                        "properties": {
                            "Limit": {
                                "description": "The number of entities this paged response is limited to.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            },
                            "Offset": {
                                "description": "The number of entities prior to this page of items.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            },
                            "TotalCount": {
                                "description": "The total number of entities matching the request.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            }
                        },
                        "required": [
                            "TotalCount",
                            "Limit",
                            "Offset"
                        ],
                        "type": "object"
                    }
                },
                "required": [
                    "Metadata",
                    "Entities"
                ],
                "type": "object"
            },
            "API.PagedResponse_UpdateSystem.Models.PackageTypeIDtoBundle_": {
                "description": "A response containing a page of results and metadata concerning the results",
                "properties": {
                    "Entities": {
                        "items": {
                            "properties": {
                                "BundleID": {
                                    "description": "The bundle to include the package in.",
                                    "type": "string"
                                },
                                "PackageTypeID": {
                                    "description": "The package type id of the package to include",
                                    "type": "string"
                                },
                                "PackageVersion": {
                                    "description": "The package version of the package to include",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "Priority": {
                                    "description": "The execution priority of the package relative to other packages in the bundle. Range 1 - 100, lower value indication higher priority.",
                                    "format": "int32",
                                    "maximum": 100,
                                    "minimum": 1,
                                    "type": "integer"
                                },
                                "SubscriptionType": {
                                    "description": "Optional. The type of subscription supported.  The default subscription type is Required.",
                                    "enum": [
                                        "Required",
                                        "IncludeByDefault",
                                        "ExcludeByDefault"
                                    ],
                                    "type": "string"
                                }
                            },
                            "required": [
                                "BundleID",
                                "PackageTypeID",
                                "PackageVersion"
                            ],
                            "type": "object"
                        },
                        "readOnly": true,
                        "type": "array"
                    },
                    "Metadata": {
                        "readOnly": true,
                        "description": "Metadata for the paged response",
                        "properties": {
                            "Limit": {
                                "description": "The number of entities this paged response is limited to.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            },
                            "Offset": {
                                "description": "The number of entities prior to this page of items.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            },
                            "TotalCount": {
                                "description": "The total number of entities matching the request.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            }
                        },
                        "required": [
                            "TotalCount",
                            "Limit",
                            "Offset"
                        ],
                        "type": "object"
                    }
                },
                "required": [
                    "Metadata",
                    "Entities"
                ],
                "type": "object"
            },
            "API.PagedResponse_UpdateSystem.Models.PackageType_": {
                "description": "A response containing a page of results and metadata concerning the results",
                "properties": {
                    "Entities": {
                        "items": {
                            "properties": {
                                "Attribute": {
                                    "description": "The inventory attribute (from the InventoryPackage) used to determine what version of this package type is installed.",
                                    "type": "string"
                                },
                                "Category": {
                                    "description": "The inventory category (from the InventoryPackage) used to determine what version of this package type is installed.",
                                    "type": "string"
                                },
                                "Description": {
                                    "description": "The description of the package type",
                                    "type": "string"
                                },
                                "Icon": {
                                    "description": "Optional.  The icon to use for the PackageType, in base 64",
                                    "type": "string"
                                },
                                "InventoryFrequency": {
                                    "description": "The number of minutes to wait before requesting another inventory.  The default value is 1440 (24 hours).",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "InventoryPackage": {
                                    "description": "The inventory package used to determine what version of this package type is installed.",
                                    "type": "string"
                                },
                                "LocalizedDescription": {
                                    "description": "Optional. The StringID used to localize the description of the PackageType",
                                    "type": "string"
                                },
                                "LocalizedName": {
                                    "description": "Optional. The StringID used to localize the name of the PackageType",
                                    "type": "string"
                                },
                                "MaxDeltaPackages": {
                                    "description": "The maximum number of \"chained\" delta packages to use when updating the client",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "PackageTypeID": {
                                    "description": "Read Only. The package type id.",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "Description"
                            ],
                            "type": "object"
                        },
                        "readOnly": true,
                        "type": "array"
                    },
                    "Metadata": {
                        "readOnly": true,
                        "description": "Metadata for the paged response",
                        "properties": {
                            "Limit": {
                                "description": "The number of entities this paged response is limited to.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            },
                            "Offset": {
                                "description": "The number of entities prior to this page of items.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            },
                            "TotalCount": {
                                "description": "The total number of entities matching the request.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            }
                        },
                        "required": [
                            "TotalCount",
                            "Limit",
                            "Offset"
                        ],
                        "type": "object"
                    }
                },
                "required": [
                    "Metadata",
                    "Entities"
                ],
                "type": "object"
            },
            "API.PagedResponse_UpdateSystem.Models.Package_": {
                "description": "A response containing a page of results and metadata concerning the results",
                "properties": {
                    "Entities": {
                        "items": {
                            "properties": {
                                "Autorun": {
                                    "description": "Value is true if package should run automatically. Default value is false.",
                                    "type": "boolean"
                                },
                                "CRC": {
                                    "description": "The CRC used to validate the download.",
                                    "type": "string"
                                },
                                "Description": {
                                    "description": "The package description",
                                    "type": "string"
                                },
                                "LocalizedName": {
                                    "description": "Optional. The StringID used to localize the name of the Package",
                                    "type": "string"
                                },
                                "Notes": {
                                    "description": "Notes about the package",
                                    "type": "string"
                                },
                                "PackageID": {
                                    "description": "Read Only. The package ID",
                                    "type": "string"
                                },
                                "PackageTypeID": {
                                    "description": "The id of the package type this package belongs to.",
                                    "type": "string"
                                },
                                "PreviousVersion": {
                                    "description": "For delta packages, the previous version required.  For non-delta packages, the Previous version is 0.  Default value is 0.",
                                    "format": "int32",
                                    "maximum": 2147483647,
                                    "minimum": 0,
                                    "type": "integer"
                                },
                                "ReleaseDate": {
                                    "description": "The date the package was released",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "Released": {
                                    "description": "True if the package is released.  Default value is False.",
                                    "type": "boolean"
                                },
                                "RemoveOnSuccess": {
                                    "description": "True to remove the package after successful execution.  Default value is False.",
                                    "type": "boolean"
                                },
                                "Size": {
                                    "description": "The size of the file at the specified URL.  If a size is not supplied at creation time, the size will be determined by the response from the URL.\r\n            If the size provided does not match the size in the response from the URL an error will be returned.",
                                    "format": "int64",
                                    "type": "integer"
                                },
                                "Switches": {
                                    "description": "The command line arguments for the package.  Default value is an empty string.",
                                    "type": "string"
                                },
                                "Url": {
                                    "description": "The Url to download the package from.",
                                    "type": "string"
                                },
                                "Version": {
                                    "description": "The version.",
                                    "format": "int32",
                                    "maximum": 2147483647,
                                    "minimum": 1,
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "PackageTypeID",
                                "Url",
                                "CRC",
                                "Version",
                                "Description",
                                "ReleaseDate"
                            ],
                            "type": "object"
                        },
                        "readOnly": true,
                        "type": "array"
                    },
                    "Metadata": {
                        "readOnly": true,
                        "description": "Metadata for the paged response",
                        "properties": {
                            "Limit": {
                                "description": "The number of entities this paged response is limited to.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            },
                            "Offset": {
                                "description": "The number of entities prior to this page of items.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            },
                            "TotalCount": {
                                "description": "The total number of entities matching the request.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            }
                        },
                        "required": [
                            "TotalCount",
                            "Limit",
                            "Offset"
                        ],
                        "type": "object"
                    }
                },
                "required": [
                    "Metadata",
                    "Entities"
                ],
                "type": "object"
            },
            "API.PagedResponse_UpdateSystem.Models.PriorityPackage_": {
                "description": "A response containing a page of results and metadata concerning the results",
                "properties": {
                    "Entities": {
                        "items": {
                            "properties": {
                                "Autorun": {
                                    "description": "Read Only. From the package specified by package ID.\r\n            Value is true if package should run automatically. Default value is false.",
                                    "type": "boolean"
                                },
                                "CRC": {
                                    "description": "Read Only. From the package specified by package ID.",
                                    "type": "string"
                                },
                                "ClientID": {
                                    "description": "The ID of the client to receive the priority package",
                                    "type": "string"
                                },
                                "Description": {
                                    "description": "Read Only. From the package specified by package ID.",
                                    "type": "string"
                                },
                                "Notes": {
                                    "description": "Read Only. From the package specified by package ID.",
                                    "type": "string"
                                },
                                "PackageID": {
                                    "description": "The ID of the package to push as a priority package.",
                                    "type": "string"
                                },
                                "PackageTypeID": {
                                    "description": "Read Only. From the package specified by package ID.",
                                    "type": "string"
                                },
                                "PreviousVersion": {
                                    "description": "Read Only. From the package specified by package ID.",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "PriorityPackageID": {
                                    "description": "Read Only. The ID of the priority package.",
                                    "type": "string"
                                },
                                "ReleaseDate": {
                                    "description": "Read Only. From the package specified by package ID.\r\n            The date the package was released",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "Released": {
                                    "description": "Read Only. From the package specified by package ID.",
                                    "type": "boolean"
                                },
                                "RemoveOnSuccess": {
                                    "description": "Read Only. From the package specified by package ID.",
                                    "type": "boolean"
                                },
                                "Size": {
                                    "description": "Read Only. From the package specified by package ID.",
                                    "format": "int64",
                                    "type": "integer"
                                },
                                "Switches": {
                                    "description": "The command line arguments for the priority package.  Default value is an empty string.",
                                    "type": "string"
                                },
                                "TimeStamp": {
                                    "description": "Read Only. The timestamp of the priority package.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "Url": {
                                    "description": "Read Only. From the package specified by package ID.",
                                    "type": "string"
                                },
                                "Version": {
                                    "description": "Read Only. From the package specified by package ID.",
                                    "format": "int32",
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "ClientID",
                                "PackageID"
                            ],
                            "type": "object"
                        },
                        "readOnly": true,
                        "type": "array"
                    },
                    "Metadata": {
                        "readOnly": true,
                        "description": "Metadata for the paged response",
                        "properties": {
                            "Limit": {
                                "description": "The number of entities this paged response is limited to.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            },
                            "Offset": {
                                "description": "The number of entities prior to this page of items.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            },
                            "TotalCount": {
                                "description": "The total number of entities matching the request.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            }
                        },
                        "required": [
                            "TotalCount",
                            "Limit",
                            "Offset"
                        ],
                        "type": "object"
                    }
                },
                "required": [
                    "Metadata",
                    "Entities"
                ],
                "type": "object"
            },
            "API.PagedResponse_UpdateSystem.Models.UpdateGroupClientRelationship_": {
                "description": "A response containing a page of results and metadata concerning the results",
                "properties": {
                    "Entities": {
                        "items": {
                            "properties": {
                                "Active": {
                                    "description": "The subscription status.  The status is active by default.",
                                    "type": "boolean"
                                },
                                "ClientID": {
                                    "description": "Read Only after creation. The client id of the subscriber.",
                                    "type": "string"
                                },
                                "LastCheckin": {
                                    "description": "ReadOnly. The timestamp of the last checkin.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "RelationshipID": {
                                    "description": "Read Only after creation. The relationship id.  A relationship id will be assigned if not provided on creation.",
                                    "type": "string"
                                },
                                "UpdateGroupID": {
                                    "description": "Read Only after creation. The update group to subscribe to.",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "UpdateGroupID",
                                "ClientID"
                            ],
                            "type": "object"
                        },
                        "readOnly": true,
                        "type": "array"
                    },
                    "Metadata": {
                        "readOnly": true,
                        "description": "Metadata for the paged response",
                        "properties": {
                            "Limit": {
                                "description": "The number of entities this paged response is limited to.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            },
                            "Offset": {
                                "description": "The number of entities prior to this page of items.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            },
                            "TotalCount": {
                                "description": "The total number of entities matching the request.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            }
                        },
                        "required": [
                            "TotalCount",
                            "Limit",
                            "Offset"
                        ],
                        "type": "object"
                    }
                },
                "required": [
                    "Metadata",
                    "Entities"
                ],
                "type": "object"
            },
            "API.PagedResponse_UpdateSystem.Models.UpdateGroupSubscription_": {
                "description": "A response containing a page of results and metadata concerning the results",
                "properties": {
                    "Entities": {
                        "items": {
                            "properties": {
                                "ClientID": {
                                    "description": "The ClientID.",
                                    "type": "string"
                                },
                                "Include": {
                                    "description": "True to receive content of type indicated by PackageTypeID.",
                                    "type": "boolean"
                                },
                                "PackageTypeID": {
                                    "description": "The PackageType to set subscription status for",
                                    "type": "string"
                                },
                                "UpdateGroupID": {
                                    "description": "The Update Group this subscription is relevant for.",
                                    "type": "string"
                                },
                                "UpdateGroupSubscriptionID": {
                                    "description": "The Update Group Subscription ID.  This ID will be automatically assigned when creating an Update Group Subscription.",
                                    "format": "int32",
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "UpdateGroupID",
                                "PackageTypeID",
                                "ClientID",
                                "Include"
                            ],
                            "type": "object"
                        },
                        "readOnly": true,
                        "type": "array"
                    },
                    "Metadata": {
                        "readOnly": true,
                        "description": "Metadata for the paged response",
                        "properties": {
                            "Limit": {
                                "description": "The number of entities this paged response is limited to.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            },
                            "Offset": {
                                "description": "The number of entities prior to this page of items.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            },
                            "TotalCount": {
                                "description": "The total number of entities matching the request.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            }
                        },
                        "required": [
                            "TotalCount",
                            "Limit",
                            "Offset"
                        ],
                        "type": "object"
                    }
                },
                "required": [
                    "Metadata",
                    "Entities"
                ],
                "type": "object"
            },
            "API.PagedResponse_UpdateSystem.Models.UpdateGroup_": {
                "description": "A response containing a page of results and metadata concerning the results",
                "properties": {
                    "Entities": {
                        "items": {
                            "properties": {
                                "Description": {
                                    "description": "The description of the update group",
                                    "type": "string"
                                },
                                "ID": {
                                    "type": "string"
                                },
                                "InventoryFrequency": {
                                    "description": "The time in minutes between inventory checks. Default value is 1440 minutes (one day).",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "InventoryPackage": {
                                    "description": "The Package ID of the package used for inventory",
                                    "type": "string"
                                },
                                "LocalizedDescription": {
                                    "description": "Optional. The StringID used to localize the description of the update group",
                                    "type": "string"
                                },
                                "LocalizedName": {
                                    "description": "Optional. The StringID used to localize the name of the update group",
                                    "type": "string"
                                },
                                "ReportField": {
                                    "description": "A field to return in the status report for this update group.\r\n            Specify the field with the format [Label]: {[InventoryPackageID].[Category].[Attribute]}.  (i.e. example: {bec778ca-278d-424a-867a-4653a1a19e86.MyCategory.MyAttribute})",
                                    "type": "string"
                                },
                                "UpdateType": {
                                    "description": "The update type name",
                                    "type": "string"
                                },
                                "ValidatingField": {
                                    "description": "A field used for validation in the status report for this update group.\r\n            Specify the field with the format [Label]: {[InventoryPackageID].[Category].[Attribute]}.  (i.e. example: {bec778ca-278d-424a-867a-4653a1a19e86.MyCategory.MyAttribute})",
                                    "type": "string"
                                },
                                "ValueToValidate": {
                                    "description": "The value to validate the ValidationField against.",
                                    "type": "string"
                                },
                                "Version": {
                                    "description": "The version of the UpdateGroup, this value is incremented with each modification to a related Bundle or PackageType",
                                    "format": "byte",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "Description",
                                "UpdateType"
                            ],
                            "type": "object"
                        },
                        "readOnly": true,
                        "type": "array"
                    },
                    "Metadata": {
                        "readOnly": true,
                        "description": "Metadata for the paged response",
                        "properties": {
                            "Limit": {
                                "description": "The number of entities this paged response is limited to.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            },
                            "Offset": {
                                "description": "The number of entities prior to this page of items.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            },
                            "TotalCount": {
                                "description": "The total number of entities matching the request.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            }
                        },
                        "required": [
                            "TotalCount",
                            "Limit",
                            "Offset"
                        ],
                        "type": "object"
                    }
                },
                "required": [
                    "Metadata",
                    "Entities"
                ],
                "type": "object"
            }
        },
        "requestBodies": {
            "AuthorizationCodeDefinitions_PostAuthorizationCodeDefinitionAuthorizationcodedefinition": {
                "content": {
                    "application/json": {
                        "schema": {
                            "description": "Represents the model used to define how a type of authorization code is generated.",
                            "properties": {
                                "CreatedByUserID": {
                                    "description": "The ID of the user that created this definition. Read only.",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "CreatedDate": {
                                    "description": "A timestamp of when this definition was created. Read only.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "DataFields": {
                                    "description": "The defined fields to include in authorization codes generated from this definition. May not be updated.",
                                    "items": {
                                        "properties": {
                                            "DigitsPrecision": {
                                                "description": "The number of decimal digits to be used by this data field. Required only by the 'Float' data type. Must be in range 1 - 15.",
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "MaxExponent": {
                                                "description": "The maximum exponent to be used by this data field. Required only by the 'Float' data type. May not be greater than 307.",
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "MaxValue": {
                                                "description": "The maximum value that can be represented by this data field. Required only by the 'Decimal' data type.",
                                                "format": "double",
                                                "type": "number"
                                            },
                                            "MinExponent": {
                                                "description": "The minimum exponent to be used by this data field. Required only by the 'Float' data type. May not be less than -292.",
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "MinValue": {
                                                "description": "The minimum value that can be represented by this data field. Required only by the 'Decimal' data type.",
                                                "format": "double",
                                                "type": "number"
                                            },
                                            "Name": {
                                                "description": "The name of the field.",
                                                "type": "string"
                                            },
                                            "ScaleFactor": {
                                                "description": "The resolution of values that can be represented by this data field. The base value is multiplied by this to compute the final value. Required only by the 'Decimal' data type.",
                                                "format": "double",
                                                "type": "number"
                                            },
                                            "Signed": {
                                                "description": "Indicates whether this value is signed. Required only by the 'Float' data type.",
                                                "type": "boolean"
                                            },
                                            "Type": {
                                                "description": "The type of this data field.",
                                                "enum": [
                                                    "Boolean",
                                                    "Decimal",
                                                    "Float",
                                                    "VariableLengthByteArray"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "Type",
                                            "Name"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "DeletedByUserID": {
                                    "description": "The ID of the user that deleted this definition. Read only.",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "DeletedDate": {
                                    "description": "A timestamp of when this definition was deleted. Read only.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "Description": {
                                    "description": "A description of this definition. May not be updated.",
                                    "type": "string"
                                },
                                "DurationAccuracy": {
                                    "description": "The number of bits used for timestamp verification. Defaults to 5. May not be updated.",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "DurationAmount": {
                                    "description": "The amount of duration for the specified duration unit used to calculate the Authorization Code. Defaults to 1. May not be updated.",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "DurationUnits": {
                                    "description": "The units of duration used to calculate the Authorization Code. Defaults to 'Days'. May not be updated.",
                                    "enum": [
                                        "Weeks",
                                        "Days",
                                        "Hours",
                                        "Minutes"
                                    ],
                                    "type": "string"
                                },
                                "HashLength": {
                                    "description": "The bit length of the hash data which will be used for the authorization code. Defaults to 20. May not be updated.",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "ID": {
                                    "description": "The ID of the authorization code definition. Read only.",
                                    "type": "string"
                                },
                                "IsDeleted": {
                                    "description": "Indicates whether this definition is enabled. True if generating codes is disabled.",
                                    "type": "boolean"
                                },
                                "Name": {
                                    "description": "The name of the authorization code definition. May not be updated.",
                                    "type": "string"
                                },
                                "RandomLength": {
                                    "description": "The bit length of random data which will be included in the authorization code.  This is necessary to allow creation of \"identical\" authorization codes containing the same timestamp. Defaults to 5. May not be updated.",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "ValidationFields": {
                                    "description": "The defined fields to verify when reading authorization codes generated from this definition. May not be updated.",
                                    "items": {
                                        "properties": {
                                            "Name": {
                                                "description": "The name of the field.",
                                                "type": "string"
                                            },
                                            "Type": {
                                                "description": "The type for this validation field.",
                                                "enum": [
                                                    "Boolean",
                                                    "Float",
                                                    "Int",
                                                    "StringCaseInsensitive",
                                                    "StringCaseSensitive"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "Type",
                                            "Name"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "Name"
                            ],
                            "type": "object"
                        }
                    },
                    "text/json": {
                        "schema": {
                            "description": "Represents the model used to define how a type of authorization code is generated.",
                            "properties": {
                                "CreatedByUserID": {
                                    "description": "The ID of the user that created this definition. Read only.",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "CreatedDate": {
                                    "description": "A timestamp of when this definition was created. Read only.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "DataFields": {
                                    "description": "The defined fields to include in authorization codes generated from this definition. May not be updated.",
                                    "items": {
                                        "properties": {
                                            "DigitsPrecision": {
                                                "description": "The number of decimal digits to be used by this data field. Required only by the 'Float' data type. Must be in range 1 - 15.",
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "MaxExponent": {
                                                "description": "The maximum exponent to be used by this data field. Required only by the 'Float' data type. May not be greater than 307.",
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "MaxValue": {
                                                "description": "The maximum value that can be represented by this data field. Required only by the 'Decimal' data type.",
                                                "format": "double",
                                                "type": "number"
                                            },
                                            "MinExponent": {
                                                "description": "The minimum exponent to be used by this data field. Required only by the 'Float' data type. May not be less than -292.",
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "MinValue": {
                                                "description": "The minimum value that can be represented by this data field. Required only by the 'Decimal' data type.",
                                                "format": "double",
                                                "type": "number"
                                            },
                                            "Name": {
                                                "description": "The name of the field.",
                                                "type": "string"
                                            },
                                            "ScaleFactor": {
                                                "description": "The resolution of values that can be represented by this data field. The base value is multiplied by this to compute the final value. Required only by the 'Decimal' data type.",
                                                "format": "double",
                                                "type": "number"
                                            },
                                            "Signed": {
                                                "description": "Indicates whether this value is signed. Required only by the 'Float' data type.",
                                                "type": "boolean"
                                            },
                                            "Type": {
                                                "description": "The type of this data field.",
                                                "enum": [
                                                    "Boolean",
                                                    "Decimal",
                                                    "Float",
                                                    "VariableLengthByteArray"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "Type",
                                            "Name"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "DeletedByUserID": {
                                    "description": "The ID of the user that deleted this definition. Read only.",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "DeletedDate": {
                                    "description": "A timestamp of when this definition was deleted. Read only.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "Description": {
                                    "description": "A description of this definition. May not be updated.",
                                    "type": "string"
                                },
                                "DurationAccuracy": {
                                    "description": "The number of bits used for timestamp verification. Defaults to 5. May not be updated.",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "DurationAmount": {
                                    "description": "The amount of duration for the specified duration unit used to calculate the Authorization Code. Defaults to 1. May not be updated.",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "DurationUnits": {
                                    "description": "The units of duration used to calculate the Authorization Code. Defaults to 'Days'. May not be updated.",
                                    "enum": [
                                        "Weeks",
                                        "Days",
                                        "Hours",
                                        "Minutes"
                                    ],
                                    "type": "string"
                                },
                                "HashLength": {
                                    "description": "The bit length of the hash data which will be used for the authorization code. Defaults to 20. May not be updated.",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "ID": {
                                    "description": "The ID of the authorization code definition. Read only.",
                                    "type": "string"
                                },
                                "IsDeleted": {
                                    "description": "Indicates whether this definition is enabled. True if generating codes is disabled.",
                                    "type": "boolean"
                                },
                                "Name": {
                                    "description": "The name of the authorization code definition. May not be updated.",
                                    "type": "string"
                                },
                                "RandomLength": {
                                    "description": "The bit length of random data which will be included in the authorization code.  This is necessary to allow creation of \"identical\" authorization codes containing the same timestamp. Defaults to 5. May not be updated.",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "ValidationFields": {
                                    "description": "The defined fields to verify when reading authorization codes generated from this definition. May not be updated.",
                                    "items": {
                                        "properties": {
                                            "Name": {
                                                "description": "The name of the field.",
                                                "type": "string"
                                            },
                                            "Type": {
                                                "description": "The type for this validation field.",
                                                "enum": [
                                                    "Boolean",
                                                    "Float",
                                                    "Int",
                                                    "StringCaseInsensitive",
                                                    "StringCaseSensitive"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "Type",
                                            "Name"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "Name"
                            ],
                            "type": "object"
                        }
                    },
                    "application/xml": {
                        "schema": {
                            "description": "Represents the model used to define how a type of authorization code is generated.",
                            "properties": {
                                "CreatedByUserID": {
                                    "description": "The ID of the user that created this definition. Read only.",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "CreatedDate": {
                                    "description": "A timestamp of when this definition was created. Read only.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "DataFields": {
                                    "description": "The defined fields to include in authorization codes generated from this definition. May not be updated.",
                                    "items": {
                                        "properties": {
                                            "DigitsPrecision": {
                                                "description": "The number of decimal digits to be used by this data field. Required only by the 'Float' data type. Must be in range 1 - 15.",
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "MaxExponent": {
                                                "description": "The maximum exponent to be used by this data field. Required only by the 'Float' data type. May not be greater than 307.",
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "MaxValue": {
                                                "description": "The maximum value that can be represented by this data field. Required only by the 'Decimal' data type.",
                                                "format": "double",
                                                "type": "number"
                                            },
                                            "MinExponent": {
                                                "description": "The minimum exponent to be used by this data field. Required only by the 'Float' data type. May not be less than -292.",
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "MinValue": {
                                                "description": "The minimum value that can be represented by this data field. Required only by the 'Decimal' data type.",
                                                "format": "double",
                                                "type": "number"
                                            },
                                            "Name": {
                                                "description": "The name of the field.",
                                                "type": "string"
                                            },
                                            "ScaleFactor": {
                                                "description": "The resolution of values that can be represented by this data field. The base value is multiplied by this to compute the final value. Required only by the 'Decimal' data type.",
                                                "format": "double",
                                                "type": "number"
                                            },
                                            "Signed": {
                                                "description": "Indicates whether this value is signed. Required only by the 'Float' data type.",
                                                "type": "boolean"
                                            },
                                            "Type": {
                                                "description": "The type of this data field.",
                                                "enum": [
                                                    "Boolean",
                                                    "Decimal",
                                                    "Float",
                                                    "VariableLengthByteArray"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "Type",
                                            "Name"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "DeletedByUserID": {
                                    "description": "The ID of the user that deleted this definition. Read only.",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "DeletedDate": {
                                    "description": "A timestamp of when this definition was deleted. Read only.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "Description": {
                                    "description": "A description of this definition. May not be updated.",
                                    "type": "string"
                                },
                                "DurationAccuracy": {
                                    "description": "The number of bits used for timestamp verification. Defaults to 5. May not be updated.",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "DurationAmount": {
                                    "description": "The amount of duration for the specified duration unit used to calculate the Authorization Code. Defaults to 1. May not be updated.",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "DurationUnits": {
                                    "description": "The units of duration used to calculate the Authorization Code. Defaults to 'Days'. May not be updated.",
                                    "enum": [
                                        "Weeks",
                                        "Days",
                                        "Hours",
                                        "Minutes"
                                    ],
                                    "type": "string"
                                },
                                "HashLength": {
                                    "description": "The bit length of the hash data which will be used for the authorization code. Defaults to 20. May not be updated.",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "ID": {
                                    "description": "The ID of the authorization code definition. Read only.",
                                    "type": "string"
                                },
                                "IsDeleted": {
                                    "description": "Indicates whether this definition is enabled. True if generating codes is disabled.",
                                    "type": "boolean"
                                },
                                "Name": {
                                    "description": "The name of the authorization code definition. May not be updated.",
                                    "type": "string"
                                },
                                "RandomLength": {
                                    "description": "The bit length of random data which will be included in the authorization code.  This is necessary to allow creation of \"identical\" authorization codes containing the same timestamp. Defaults to 5. May not be updated.",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "ValidationFields": {
                                    "description": "The defined fields to verify when reading authorization codes generated from this definition. May not be updated.",
                                    "items": {
                                        "properties": {
                                            "Name": {
                                                "description": "The name of the field.",
                                                "type": "string"
                                            },
                                            "Type": {
                                                "description": "The type for this validation field.",
                                                "enum": [
                                                    "Boolean",
                                                    "Float",
                                                    "Int",
                                                    "StringCaseInsensitive",
                                                    "StringCaseSensitive"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "Type",
                                            "Name"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "Name"
                            ],
                            "type": "object"
                        }
                    },
                    "text/xml": {
                        "schema": {
                            "description": "Represents the model used to define how a type of authorization code is generated.",
                            "properties": {
                                "CreatedByUserID": {
                                    "description": "The ID of the user that created this definition. Read only.",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "CreatedDate": {
                                    "description": "A timestamp of when this definition was created. Read only.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "DataFields": {
                                    "description": "The defined fields to include in authorization codes generated from this definition. May not be updated.",
                                    "items": {
                                        "properties": {
                                            "DigitsPrecision": {
                                                "description": "The number of decimal digits to be used by this data field. Required only by the 'Float' data type. Must be in range 1 - 15.",
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "MaxExponent": {
                                                "description": "The maximum exponent to be used by this data field. Required only by the 'Float' data type. May not be greater than 307.",
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "MaxValue": {
                                                "description": "The maximum value that can be represented by this data field. Required only by the 'Decimal' data type.",
                                                "format": "double",
                                                "type": "number"
                                            },
                                            "MinExponent": {
                                                "description": "The minimum exponent to be used by this data field. Required only by the 'Float' data type. May not be less than -292.",
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "MinValue": {
                                                "description": "The minimum value that can be represented by this data field. Required only by the 'Decimal' data type.",
                                                "format": "double",
                                                "type": "number"
                                            },
                                            "Name": {
                                                "description": "The name of the field.",
                                                "type": "string"
                                            },
                                            "ScaleFactor": {
                                                "description": "The resolution of values that can be represented by this data field. The base value is multiplied by this to compute the final value. Required only by the 'Decimal' data type.",
                                                "format": "double",
                                                "type": "number"
                                            },
                                            "Signed": {
                                                "description": "Indicates whether this value is signed. Required only by the 'Float' data type.",
                                                "type": "boolean"
                                            },
                                            "Type": {
                                                "description": "The type of this data field.",
                                                "enum": [
                                                    "Boolean",
                                                    "Decimal",
                                                    "Float",
                                                    "VariableLengthByteArray"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "Type",
                                            "Name"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "DeletedByUserID": {
                                    "description": "The ID of the user that deleted this definition. Read only.",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "DeletedDate": {
                                    "description": "A timestamp of when this definition was deleted. Read only.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "Description": {
                                    "description": "A description of this definition. May not be updated.",
                                    "type": "string"
                                },
                                "DurationAccuracy": {
                                    "description": "The number of bits used for timestamp verification. Defaults to 5. May not be updated.",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "DurationAmount": {
                                    "description": "The amount of duration for the specified duration unit used to calculate the Authorization Code. Defaults to 1. May not be updated.",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "DurationUnits": {
                                    "description": "The units of duration used to calculate the Authorization Code. Defaults to 'Days'. May not be updated.",
                                    "enum": [
                                        "Weeks",
                                        "Days",
                                        "Hours",
                                        "Minutes"
                                    ],
                                    "type": "string"
                                },
                                "HashLength": {
                                    "description": "The bit length of the hash data which will be used for the authorization code. Defaults to 20. May not be updated.",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "ID": {
                                    "description": "The ID of the authorization code definition. Read only.",
                                    "type": "string"
                                },
                                "IsDeleted": {
                                    "description": "Indicates whether this definition is enabled. True if generating codes is disabled.",
                                    "type": "boolean"
                                },
                                "Name": {
                                    "description": "The name of the authorization code definition. May not be updated.",
                                    "type": "string"
                                },
                                "RandomLength": {
                                    "description": "The bit length of random data which will be included in the authorization code.  This is necessary to allow creation of \"identical\" authorization codes containing the same timestamp. Defaults to 5. May not be updated.",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "ValidationFields": {
                                    "description": "The defined fields to verify when reading authorization codes generated from this definition. May not be updated.",
                                    "items": {
                                        "properties": {
                                            "Name": {
                                                "description": "The name of the field.",
                                                "type": "string"
                                            },
                                            "Type": {
                                                "description": "The type for this validation field.",
                                                "enum": [
                                                    "Boolean",
                                                    "Float",
                                                    "Int",
                                                    "StringCaseInsensitive",
                                                    "StringCaseSensitive"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "Type",
                                            "Name"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "Name"
                            ],
                            "type": "object"
                        }
                    },
                    "application/x-www-form-urlencoded": {
                        "schema": {
                            "description": "Represents the model used to define how a type of authorization code is generated.",
                            "properties": {
                                "CreatedByUserID": {
                                    "description": "The ID of the user that created this definition. Read only.",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "CreatedDate": {
                                    "description": "A timestamp of when this definition was created. Read only.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "DataFields": {
                                    "description": "The defined fields to include in authorization codes generated from this definition. May not be updated.",
                                    "items": {
                                        "properties": {
                                            "DigitsPrecision": {
                                                "description": "The number of decimal digits to be used by this data field. Required only by the 'Float' data type. Must be in range 1 - 15.",
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "MaxExponent": {
                                                "description": "The maximum exponent to be used by this data field. Required only by the 'Float' data type. May not be greater than 307.",
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "MaxValue": {
                                                "description": "The maximum value that can be represented by this data field. Required only by the 'Decimal' data type.",
                                                "format": "double",
                                                "type": "number"
                                            },
                                            "MinExponent": {
                                                "description": "The minimum exponent to be used by this data field. Required only by the 'Float' data type. May not be less than -292.",
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "MinValue": {
                                                "description": "The minimum value that can be represented by this data field. Required only by the 'Decimal' data type.",
                                                "format": "double",
                                                "type": "number"
                                            },
                                            "Name": {
                                                "description": "The name of the field.",
                                                "type": "string"
                                            },
                                            "ScaleFactor": {
                                                "description": "The resolution of values that can be represented by this data field. The base value is multiplied by this to compute the final value. Required only by the 'Decimal' data type.",
                                                "format": "double",
                                                "type": "number"
                                            },
                                            "Signed": {
                                                "description": "Indicates whether this value is signed. Required only by the 'Float' data type.",
                                                "type": "boolean"
                                            },
                                            "Type": {
                                                "description": "The type of this data field.",
                                                "enum": [
                                                    "Boolean",
                                                    "Decimal",
                                                    "Float",
                                                    "VariableLengthByteArray"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "Type",
                                            "Name"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "DeletedByUserID": {
                                    "description": "The ID of the user that deleted this definition. Read only.",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "DeletedDate": {
                                    "description": "A timestamp of when this definition was deleted. Read only.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "Description": {
                                    "description": "A description of this definition. May not be updated.",
                                    "type": "string"
                                },
                                "DurationAccuracy": {
                                    "description": "The number of bits used for timestamp verification. Defaults to 5. May not be updated.",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "DurationAmount": {
                                    "description": "The amount of duration for the specified duration unit used to calculate the Authorization Code. Defaults to 1. May not be updated.",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "DurationUnits": {
                                    "description": "The units of duration used to calculate the Authorization Code. Defaults to 'Days'. May not be updated.",
                                    "enum": [
                                        "Weeks",
                                        "Days",
                                        "Hours",
                                        "Minutes"
                                    ],
                                    "type": "string"
                                },
                                "HashLength": {
                                    "description": "The bit length of the hash data which will be used for the authorization code. Defaults to 20. May not be updated.",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "ID": {
                                    "description": "The ID of the authorization code definition. Read only.",
                                    "type": "string"
                                },
                                "IsDeleted": {
                                    "description": "Indicates whether this definition is enabled. True if generating codes is disabled.",
                                    "type": "boolean"
                                },
                                "Name": {
                                    "description": "The name of the authorization code definition. May not be updated.",
                                    "type": "string"
                                },
                                "RandomLength": {
                                    "description": "The bit length of random data which will be included in the authorization code.  This is necessary to allow creation of \"identical\" authorization codes containing the same timestamp. Defaults to 5. May not be updated.",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "ValidationFields": {
                                    "description": "The defined fields to verify when reading authorization codes generated from this definition. May not be updated.",
                                    "items": {
                                        "properties": {
                                            "Name": {
                                                "description": "The name of the field.",
                                                "type": "string"
                                            },
                                            "Type": {
                                                "description": "The type for this validation field.",
                                                "enum": [
                                                    "Boolean",
                                                    "Float",
                                                    "Int",
                                                    "StringCaseInsensitive",
                                                    "StringCaseSensitive"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "Type",
                                            "Name"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "Name"
                            ],
                            "type": "object"
                        }
                    }
                },
                "description": "An authorization code definition.",
                "required": true
            },
            "ContentSubmissionTypes_PostContentSubmissionTypeContentsubmissiontype": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "AttributeTemplate": {
                                    "type": "string"
                                },
                                "CategoryTemplate": {
                                    "type": "string"
                                },
                                "Description": {
                                    "type": "string"
                                },
                                "Enabled": {
                                    "type": "boolean"
                                },
                                "ID": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "InventoryPackageID": {
                                    "type": "string"
                                },
                                "JobID": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "Name": {
                                    "type": "string"
                                },
                                "ReleaseNotesDescription": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "Name",
                                "Description"
                            ],
                            "type": "object"
                        }
                    },
                    "text/json": {
                        "schema": {
                            "properties": {
                                "AttributeTemplate": {
                                    "type": "string"
                                },
                                "CategoryTemplate": {
                                    "type": "string"
                                },
                                "Description": {
                                    "type": "string"
                                },
                                "Enabled": {
                                    "type": "boolean"
                                },
                                "ID": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "InventoryPackageID": {
                                    "type": "string"
                                },
                                "JobID": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "Name": {
                                    "type": "string"
                                },
                                "ReleaseNotesDescription": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "Name",
                                "Description"
                            ],
                            "type": "object"
                        }
                    },
                    "application/xml": {
                        "schema": {
                            "properties": {
                                "AttributeTemplate": {
                                    "type": "string"
                                },
                                "CategoryTemplate": {
                                    "type": "string"
                                },
                                "Description": {
                                    "type": "string"
                                },
                                "Enabled": {
                                    "type": "boolean"
                                },
                                "ID": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "InventoryPackageID": {
                                    "type": "string"
                                },
                                "JobID": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "Name": {
                                    "type": "string"
                                },
                                "ReleaseNotesDescription": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "Name",
                                "Description"
                            ],
                            "type": "object"
                        }
                    },
                    "text/xml": {
                        "schema": {
                            "properties": {
                                "AttributeTemplate": {
                                    "type": "string"
                                },
                                "CategoryTemplate": {
                                    "type": "string"
                                },
                                "Description": {
                                    "type": "string"
                                },
                                "Enabled": {
                                    "type": "boolean"
                                },
                                "ID": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "InventoryPackageID": {
                                    "type": "string"
                                },
                                "JobID": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "Name": {
                                    "type": "string"
                                },
                                "ReleaseNotesDescription": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "Name",
                                "Description"
                            ],
                            "type": "object"
                        }
                    },
                    "application/x-www-form-urlencoded": {
                        "schema": {
                            "properties": {
                                "AttributeTemplate": {
                                    "type": "string"
                                },
                                "CategoryTemplate": {
                                    "type": "string"
                                },
                                "Description": {
                                    "type": "string"
                                },
                                "Enabled": {
                                    "type": "boolean"
                                },
                                "ID": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "InventoryPackageID": {
                                    "type": "string"
                                },
                                "JobID": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "Name": {
                                    "type": "string"
                                },
                                "ReleaseNotesDescription": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "Name",
                                "Description"
                            ],
                            "type": "object"
                        }
                    }
                },
                "description": "The Content Submission Type",
                "required": true
            },
            "UpdateGroups_PostUpdategroup": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "Description": {
                                    "description": "The description of the update group",
                                    "type": "string"
                                },
                                "ID": {
                                    "type": "string"
                                },
                                "InventoryFrequency": {
                                    "description": "The time in minutes between inventory checks. Default value is 1440 minutes (one day).",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "InventoryPackage": {
                                    "description": "The Package ID of the package used for inventory",
                                    "type": "string"
                                },
                                "LocalizedDescription": {
                                    "description": "Optional. The StringID used to localize the description of the update group",
                                    "type": "string"
                                },
                                "LocalizedName": {
                                    "description": "Optional. The StringID used to localize the name of the update group",
                                    "type": "string"
                                },
                                "ReportField": {
                                    "description": "A field to return in the status report for this update group.\r\n            Specify the field with the format [Label]: {[InventoryPackageID].[Category].[Attribute]}.  (i.e. example: {bec778ca-278d-424a-867a-4653a1a19e86.MyCategory.MyAttribute})",
                                    "type": "string"
                                },
                                "UpdateType": {
                                    "description": "The update type name",
                                    "type": "string"
                                },
                                "ValidatingField": {
                                    "description": "A field used for validation in the status report for this update group.\r\n            Specify the field with the format [Label]: {[InventoryPackageID].[Category].[Attribute]}.  (i.e. example: {bec778ca-278d-424a-867a-4653a1a19e86.MyCategory.MyAttribute})",
                                    "type": "string"
                                },
                                "ValueToValidate": {
                                    "description": "The value to validate the ValidationField against.",
                                    "type": "string"
                                },
                                "Version": {
                                    "description": "The version of the UpdateGroup, this value is incremented with each modification to a related Bundle or PackageType",
                                    "format": "byte",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "Description",
                                "UpdateType"
                            ],
                            "type": "object"
                        }
                    },
                    "text/json": {
                        "schema": {
                            "properties": {
                                "Description": {
                                    "description": "The description of the update group",
                                    "type": "string"
                                },
                                "ID": {
                                    "type": "string"
                                },
                                "InventoryFrequency": {
                                    "description": "The time in minutes between inventory checks. Default value is 1440 minutes (one day).",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "InventoryPackage": {
                                    "description": "The Package ID of the package used for inventory",
                                    "type": "string"
                                },
                                "LocalizedDescription": {
                                    "description": "Optional. The StringID used to localize the description of the update group",
                                    "type": "string"
                                },
                                "LocalizedName": {
                                    "description": "Optional. The StringID used to localize the name of the update group",
                                    "type": "string"
                                },
                                "ReportField": {
                                    "description": "A field to return in the status report for this update group.\r\n            Specify the field with the format [Label]: {[InventoryPackageID].[Category].[Attribute]}.  (i.e. example: {bec778ca-278d-424a-867a-4653a1a19e86.MyCategory.MyAttribute})",
                                    "type": "string"
                                },
                                "UpdateType": {
                                    "description": "The update type name",
                                    "type": "string"
                                },
                                "ValidatingField": {
                                    "description": "A field used for validation in the status report for this update group.\r\n            Specify the field with the format [Label]: {[InventoryPackageID].[Category].[Attribute]}.  (i.e. example: {bec778ca-278d-424a-867a-4653a1a19e86.MyCategory.MyAttribute})",
                                    "type": "string"
                                },
                                "ValueToValidate": {
                                    "description": "The value to validate the ValidationField against.",
                                    "type": "string"
                                },
                                "Version": {
                                    "description": "The version of the UpdateGroup, this value is incremented with each modification to a related Bundle or PackageType",
                                    "format": "byte",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "Description",
                                "UpdateType"
                            ],
                            "type": "object"
                        }
                    },
                    "application/xml": {
                        "schema": {
                            "properties": {
                                "Description": {
                                    "description": "The description of the update group",
                                    "type": "string"
                                },
                                "ID": {
                                    "type": "string"
                                },
                                "InventoryFrequency": {
                                    "description": "The time in minutes between inventory checks. Default value is 1440 minutes (one day).",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "InventoryPackage": {
                                    "description": "The Package ID of the package used for inventory",
                                    "type": "string"
                                },
                                "LocalizedDescription": {
                                    "description": "Optional. The StringID used to localize the description of the update group",
                                    "type": "string"
                                },
                                "LocalizedName": {
                                    "description": "Optional. The StringID used to localize the name of the update group",
                                    "type": "string"
                                },
                                "ReportField": {
                                    "description": "A field to return in the status report for this update group.\r\n            Specify the field with the format [Label]: {[InventoryPackageID].[Category].[Attribute]}.  (i.e. example: {bec778ca-278d-424a-867a-4653a1a19e86.MyCategory.MyAttribute})",
                                    "type": "string"
                                },
                                "UpdateType": {
                                    "description": "The update type name",
                                    "type": "string"
                                },
                                "ValidatingField": {
                                    "description": "A field used for validation in the status report for this update group.\r\n            Specify the field with the format [Label]: {[InventoryPackageID].[Category].[Attribute]}.  (i.e. example: {bec778ca-278d-424a-867a-4653a1a19e86.MyCategory.MyAttribute})",
                                    "type": "string"
                                },
                                "ValueToValidate": {
                                    "description": "The value to validate the ValidationField against.",
                                    "type": "string"
                                },
                                "Version": {
                                    "description": "The version of the UpdateGroup, this value is incremented with each modification to a related Bundle or PackageType",
                                    "format": "byte",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "Description",
                                "UpdateType"
                            ],
                            "type": "object"
                        }
                    },
                    "text/xml": {
                        "schema": {
                            "properties": {
                                "Description": {
                                    "description": "The description of the update group",
                                    "type": "string"
                                },
                                "ID": {
                                    "type": "string"
                                },
                                "InventoryFrequency": {
                                    "description": "The time in minutes between inventory checks. Default value is 1440 minutes (one day).",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "InventoryPackage": {
                                    "description": "The Package ID of the package used for inventory",
                                    "type": "string"
                                },
                                "LocalizedDescription": {
                                    "description": "Optional. The StringID used to localize the description of the update group",
                                    "type": "string"
                                },
                                "LocalizedName": {
                                    "description": "Optional. The StringID used to localize the name of the update group",
                                    "type": "string"
                                },
                                "ReportField": {
                                    "description": "A field to return in the status report for this update group.\r\n            Specify the field with the format [Label]: {[InventoryPackageID].[Category].[Attribute]}.  (i.e. example: {bec778ca-278d-424a-867a-4653a1a19e86.MyCategory.MyAttribute})",
                                    "type": "string"
                                },
                                "UpdateType": {
                                    "description": "The update type name",
                                    "type": "string"
                                },
                                "ValidatingField": {
                                    "description": "A field used for validation in the status report for this update group.\r\n            Specify the field with the format [Label]: {[InventoryPackageID].[Category].[Attribute]}.  (i.e. example: {bec778ca-278d-424a-867a-4653a1a19e86.MyCategory.MyAttribute})",
                                    "type": "string"
                                },
                                "ValueToValidate": {
                                    "description": "The value to validate the ValidationField against.",
                                    "type": "string"
                                },
                                "Version": {
                                    "description": "The version of the UpdateGroup, this value is incremented with each modification to a related Bundle or PackageType",
                                    "format": "byte",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "Description",
                                "UpdateType"
                            ],
                            "type": "object"
                        }
                    },
                    "application/x-www-form-urlencoded": {
                        "schema": {
                            "properties": {
                                "Description": {
                                    "description": "The description of the update group",
                                    "type": "string"
                                },
                                "ID": {
                                    "type": "string"
                                },
                                "InventoryFrequency": {
                                    "description": "The time in minutes between inventory checks. Default value is 1440 minutes (one day).",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "InventoryPackage": {
                                    "description": "The Package ID of the package used for inventory",
                                    "type": "string"
                                },
                                "LocalizedDescription": {
                                    "description": "Optional. The StringID used to localize the description of the update group",
                                    "type": "string"
                                },
                                "LocalizedName": {
                                    "description": "Optional. The StringID used to localize the name of the update group",
                                    "type": "string"
                                },
                                "ReportField": {
                                    "description": "A field to return in the status report for this update group.\r\n            Specify the field with the format [Label]: {[InventoryPackageID].[Category].[Attribute]}.  (i.e. example: {bec778ca-278d-424a-867a-4653a1a19e86.MyCategory.MyAttribute})",
                                    "type": "string"
                                },
                                "UpdateType": {
                                    "description": "The update type name",
                                    "type": "string"
                                },
                                "ValidatingField": {
                                    "description": "A field used for validation in the status report for this update group.\r\n            Specify the field with the format [Label]: {[InventoryPackageID].[Category].[Attribute]}.  (i.e. example: {bec778ca-278d-424a-867a-4653a1a19e86.MyCategory.MyAttribute})",
                                    "type": "string"
                                },
                                "ValueToValidate": {
                                    "description": "The value to validate the ValidationField against.",
                                    "type": "string"
                                },
                                "Version": {
                                    "description": "The version of the UpdateGroup, this value is incremented with each modification to a related Bundle or PackageType",
                                    "format": "byte",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "Description",
                                "UpdateType"
                            ],
                            "type": "object"
                        }
                    }
                },
                "required": true
            },
            "Users_PutCurrentUserUser": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "ChangePassword": {
                                    "description": "Never Returned.  When changing a user's password, this field must contain the new password.",
                                    "type": "string"
                                },
                                "Email": {
                                    "description": "The user's email address",
                                    "type": "string"
                                },
                                "Name": {
                                    "description": "The user's name",
                                    "type": "string"
                                },
                                "Password": {
                                    "description": "Never Returned.  Required when creating a new user or updating a user.  When changing a user's password this field must contain the current password.",
                                    "type": "string"
                                },
                                "UserID": {
                                    "description": "The user ID",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "Username": {
                                    "description": "The username used for authentication",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "text/json": {
                        "schema": {
                            "properties": {
                                "ChangePassword": {
                                    "description": "Never Returned.  When changing a user's password, this field must contain the new password.",
                                    "type": "string"
                                },
                                "Email": {
                                    "description": "The user's email address",
                                    "type": "string"
                                },
                                "Name": {
                                    "description": "The user's name",
                                    "type": "string"
                                },
                                "Password": {
                                    "description": "Never Returned.  Required when creating a new user or updating a user.  When changing a user's password this field must contain the current password.",
                                    "type": "string"
                                },
                                "UserID": {
                                    "description": "The user ID",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "Username": {
                                    "description": "The username used for authentication",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "application/xml": {
                        "schema": {
                            "properties": {
                                "ChangePassword": {
                                    "description": "Never Returned.  When changing a user's password, this field must contain the new password.",
                                    "type": "string"
                                },
                                "Email": {
                                    "description": "The user's email address",
                                    "type": "string"
                                },
                                "Name": {
                                    "description": "The user's name",
                                    "type": "string"
                                },
                                "Password": {
                                    "description": "Never Returned.  Required when creating a new user or updating a user.  When changing a user's password this field must contain the current password.",
                                    "type": "string"
                                },
                                "UserID": {
                                    "description": "The user ID",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "Username": {
                                    "description": "The username used for authentication",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "text/xml": {
                        "schema": {
                            "properties": {
                                "ChangePassword": {
                                    "description": "Never Returned.  When changing a user's password, this field must contain the new password.",
                                    "type": "string"
                                },
                                "Email": {
                                    "description": "The user's email address",
                                    "type": "string"
                                },
                                "Name": {
                                    "description": "The user's name",
                                    "type": "string"
                                },
                                "Password": {
                                    "description": "Never Returned.  Required when creating a new user or updating a user.  When changing a user's password this field must contain the current password.",
                                    "type": "string"
                                },
                                "UserID": {
                                    "description": "The user ID",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "Username": {
                                    "description": "The username used for authentication",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "application/x-www-form-urlencoded": {
                        "schema": {
                            "properties": {
                                "ChangePassword": {
                                    "description": "Never Returned.  When changing a user's password, this field must contain the new password.",
                                    "type": "string"
                                },
                                "Email": {
                                    "description": "The user's email address",
                                    "type": "string"
                                },
                                "Name": {
                                    "description": "The user's name",
                                    "type": "string"
                                },
                                "Password": {
                                    "description": "Never Returned.  Required when creating a new user or updating a user.  When changing a user's password this field must contain the current password.",
                                    "type": "string"
                                },
                                "UserID": {
                                    "description": "The user ID",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "Username": {
                                    "description": "The username used for authentication",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "description": "The user",
                "required": true
            }
        }
    }
}